
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00001ec0  00001f54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ec0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  00800184  00800184  00001fd8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001fd8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002008  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000250  00000000  00000000  00002048  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002aaf  00000000  00000000  00002298  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001089  00000000  00000000  00004d47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015c7  00000000  00000000  00005dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bc0  00000000  00000000  00007398  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a51  00000000  00000000  00007f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000027f6  00000000  00000000  000089a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000b19f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <__vector_1>
       8:	0c 94 c4 03 	jmp	0x788	; 0x788 <__vector_2>
       c:	0c 94 30 04 	jmp	0x860	; 0x860 <__vector_3>
      10:	0c 94 9c 04 	jmp	0x938	; 0x938 <__vector_4>
      14:	0c 94 08 05 	jmp	0xa10	; 0xa10 <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 df 0b 	jmp	0x17be	; 0x17be <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__vector_9>
      28:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__vector_10>
      2c:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <__vector_11>
      30:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__vector_12>
      34:	0c 94 b8 06 	jmp	0xd70	; 0xd70 <__vector_13>
      38:	0c 94 24 07 	jmp	0xe48	; 0xe48 <__vector_14>
      3c:	0c 94 90 07 	jmp	0xf20	; 0xf20 <__vector_15>
      40:	0c 94 fc 07 	jmp	0xff8	; 0xff8 <__vector_16>
      44:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__vector_17>
      48:	0c 94 d4 08 	jmp	0x11a8	; 0x11a8 <__vector_18>
      4c:	0c 94 40 09 	jmp	0x1280	; 0x1280 <__vector_19>
      50:	0c 94 ac 09 	jmp	0x1358	; 0x1358 <__vector_20>
      54:	0c 94 18 0a 	jmp	0x1430	; 0x1430 <__vector_21>
      58:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__vector_22>
      5c:	8c 00       	.word	0x008c	; ????
      5e:	6e 00       	.word	0x006e	; ????
      60:	71 00       	.word	0x0071	; ????
      62:	74 00       	.word	0x0074	; ????
      64:	77 00       	.word	0x0077	; ????
      66:	7a 00       	.word	0x007a	; ????
      68:	7d 00       	.word	0x007d	; ????
      6a:	80 00       	.word	0x0080	; ????
      6c:	83 00       	.word	0x0083	; ????
      6e:	86 00       	.word	0x0086	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e0 ec       	ldi	r30, 0xC0	; 192
      84:	fe e1       	ldi	r31, 0x1E	; 30
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a4 38       	cpi	r26, 0x84	; 132
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	a4 e8       	ldi	r26, 0x84	; 132
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	af 3d       	cpi	r26, 0xDF	; 223
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <main>
      a6:	0c 94 5e 0f 	jmp	0x1ebc	; 0x1ebc <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <LCD_init>:
    } else {
        SYNC(target, save, 0);
        SYNC(target, setFrequency, 0);
    }
    ASYNC(self, updateDisplay, 0);
}
      ae:	8f e0       	ldi	r24, 0x0F	; 15
      b0:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__DATA_REGION_ORIGIN__+0x87>
      b4:	87 eb       	ldi	r24, 0xB7	; 183
      b6:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__DATA_REGION_ORIGIN__+0x85>
      ba:	87 e0       	ldi	r24, 0x07	; 7
      bc:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__DATA_REGION_ORIGIN__+0x86>
      c0:	80 ec       	ldi	r24, 0xC0	; 192
      c2:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__DATA_REGION_ORIGIN__+0x84>
      c6:	08 95       	ret

000000c8 <getSegmentForChar>:
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	fc 01       	movw	r30, r24
      cc:	f0 97       	sbiw	r30, 0x30	; 48
      ce:	ea 30       	cpi	r30, 0x0A	; 10
      d0:	f1 05       	cpc	r31, r1
      d2:	f8 f4       	brcc	.+62     	; 0x112 <getSegmentForChar+0x4a>
      d4:	e2 5d       	subi	r30, 0xD2	; 210
      d6:	ff 4f       	sbci	r31, 0xFF	; 255
      d8:	0c 94 f5 0e 	jmp	0x1dea	; 0x1dea <__tablejump2__>
      dc:	80 e4       	ldi	r24, 0x40	; 64
      de:	91 e0       	ldi	r25, 0x01	; 1
      e0:	08 95       	ret
      e2:	88 e3       	ldi	r24, 0x38	; 56
      e4:	91 e0       	ldi	r25, 0x01	; 1
      e6:	08 95       	ret
      e8:	80 e3       	ldi	r24, 0x30	; 48
      ea:	91 e0       	ldi	r25, 0x01	; 1
      ec:	08 95       	ret
      ee:	88 e2       	ldi	r24, 0x28	; 40
      f0:	91 e0       	ldi	r25, 0x01	; 1
      f2:	08 95       	ret
      f4:	80 e2       	ldi	r24, 0x20	; 32
      f6:	91 e0       	ldi	r25, 0x01	; 1
      f8:	08 95       	ret
      fa:	88 e1       	ldi	r24, 0x18	; 24
      fc:	91 e0       	ldi	r25, 0x01	; 1
      fe:	08 95       	ret
     100:	80 e1       	ldi	r24, 0x10	; 16
     102:	91 e0       	ldi	r25, 0x01	; 1
     104:	08 95       	ret
     106:	88 e0       	ldi	r24, 0x08	; 8
     108:	91 e0       	ldi	r25, 0x01	; 1
     10a:	08 95       	ret
     10c:	80 e0       	ldi	r24, 0x00	; 0
     10e:	91 e0       	ldi	r25, 0x01	; 1
     110:	08 95       	ret
     112:	84 e8       	ldi	r24, 0x84	; 132
     114:	91 e0       	ldi	r25, 0x01	; 1
     116:	08 95       	ret
     118:	88 e4       	ldi	r24, 0x48	; 72
     11a:	91 e0       	ldi	r25, 0x01	; 1
     11c:	08 95       	ret

0000011e <writeChar>:
     11e:	cf 93       	push	r28
     120:	66 30       	cpi	r22, 0x06	; 6
     122:	08 f0       	brcs	.+2      	; 0x126 <writeChar+0x8>
     124:	e4 c0       	rjmp	.+456    	; 0x2ee <writeChar+0x1d0>
     126:	c6 2f       	mov	r28, r22
     128:	0e 94 64 00 	call	0xc8	; 0xc8 <getSegmentForChar>
     12c:	fc 01       	movw	r30, r24
     12e:	c2 30       	cpi	r28, 0x02	; 2
     130:	09 f4       	brne	.+2      	; 0x134 <writeChar+0x16>
     132:	67 c0       	rjmp	.+206    	; 0x202 <writeChar+0xe4>
     134:	28 f4       	brcc	.+10     	; 0x140 <writeChar+0x22>
     136:	cc 23       	and	r28, r28
     138:	51 f0       	breq	.+20     	; 0x14e <writeChar+0x30>
     13a:	c1 30       	cpi	r28, 0x01	; 1
     13c:	29 f1       	breq	.+74     	; 0x188 <writeChar+0x6a>
     13e:	d7 c0       	rjmp	.+430    	; 0x2ee <writeChar+0x1d0>
     140:	c3 30       	cpi	r28, 0x03	; 3
     142:	09 f4       	brne	.+2      	; 0x146 <writeChar+0x28>
     144:	7b c0       	rjmp	.+246    	; 0x23c <writeChar+0x11e>
     146:	c4 30       	cpi	r28, 0x04	; 4
     148:	09 f4       	brne	.+2      	; 0x14c <writeChar+0x2e>
     14a:	b5 c0       	rjmp	.+362    	; 0x2b6 <writeChar+0x198>
     14c:	d0 c0       	rjmp	.+416    	; 0x2ee <writeChar+0x1d0>
     14e:	ac ee       	ldi	r26, 0xEC	; 236
     150:	b0 e0       	ldi	r27, 0x00	; 0
     152:	8c 91       	ld	r24, X
     154:	80 7f       	andi	r24, 0xF0	; 240
     156:	90 81       	ld	r25, Z
     158:	89 2b       	or	r24, r25
     15a:	8c 93       	st	X, r24
     15c:	a1 ef       	ldi	r26, 0xF1	; 241
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	8c 91       	ld	r24, X
     162:	80 7f       	andi	r24, 0xF0	; 240
     164:	92 81       	ldd	r25, Z+2	; 0x02
     166:	89 2b       	or	r24, r25
     168:	8c 93       	st	X, r24
     16a:	a6 ef       	ldi	r26, 0xF6	; 246
     16c:	b0 e0       	ldi	r27, 0x00	; 0
     16e:	8c 91       	ld	r24, X
     170:	80 7f       	andi	r24, 0xF0	; 240
     172:	94 81       	ldd	r25, Z+4	; 0x04
     174:	89 2b       	or	r24, r25
     176:	8c 93       	st	X, r24
     178:	ab ef       	ldi	r26, 0xFB	; 251
     17a:	b0 e0       	ldi	r27, 0x00	; 0
     17c:	8c 91       	ld	r24, X
     17e:	80 7f       	andi	r24, 0xF0	; 240
     180:	96 81       	ldd	r25, Z+6	; 0x06
     182:	89 2b       	or	r24, r25
     184:	8c 93       	st	X, r24
     186:	b3 c0       	rjmp	.+358    	; 0x2ee <writeChar+0x1d0>
     188:	ac ee       	ldi	r26, 0xEC	; 236
     18a:	b0 e0       	ldi	r27, 0x00	; 0
     18c:	2c 91       	ld	r18, X
     18e:	80 81       	ld	r24, Z
     190:	91 81       	ldd	r25, Z+1	; 0x01
     192:	82 95       	swap	r24
     194:	92 95       	swap	r25
     196:	90 7f       	andi	r25, 0xF0	; 240
     198:	98 27       	eor	r25, r24
     19a:	80 7f       	andi	r24, 0xF0	; 240
     19c:	98 27       	eor	r25, r24
     19e:	92 2f       	mov	r25, r18
     1a0:	9f 70       	andi	r25, 0x0F	; 15
     1a2:	89 2b       	or	r24, r25
     1a4:	8c 93       	st	X, r24
     1a6:	a1 ef       	ldi	r26, 0xF1	; 241
     1a8:	b0 e0       	ldi	r27, 0x00	; 0
     1aa:	2c 91       	ld	r18, X
     1ac:	82 81       	ldd	r24, Z+2	; 0x02
     1ae:	93 81       	ldd	r25, Z+3	; 0x03
     1b0:	82 95       	swap	r24
     1b2:	92 95       	swap	r25
     1b4:	90 7f       	andi	r25, 0xF0	; 240
     1b6:	98 27       	eor	r25, r24
     1b8:	80 7f       	andi	r24, 0xF0	; 240
     1ba:	98 27       	eor	r25, r24
     1bc:	92 2f       	mov	r25, r18
     1be:	9f 70       	andi	r25, 0x0F	; 15
     1c0:	89 2b       	or	r24, r25
     1c2:	8c 93       	st	X, r24
     1c4:	a6 ef       	ldi	r26, 0xF6	; 246
     1c6:	b0 e0       	ldi	r27, 0x00	; 0
     1c8:	2c 91       	ld	r18, X
     1ca:	84 81       	ldd	r24, Z+4	; 0x04
     1cc:	95 81       	ldd	r25, Z+5	; 0x05
     1ce:	82 95       	swap	r24
     1d0:	92 95       	swap	r25
     1d2:	90 7f       	andi	r25, 0xF0	; 240
     1d4:	98 27       	eor	r25, r24
     1d6:	80 7f       	andi	r24, 0xF0	; 240
     1d8:	98 27       	eor	r25, r24
     1da:	92 2f       	mov	r25, r18
     1dc:	9f 70       	andi	r25, 0x0F	; 15
     1de:	89 2b       	or	r24, r25
     1e0:	8c 93       	st	X, r24
     1e2:	ab ef       	ldi	r26, 0xFB	; 251
     1e4:	b0 e0       	ldi	r27, 0x00	; 0
     1e6:	2c 91       	ld	r18, X
     1e8:	86 81       	ldd	r24, Z+6	; 0x06
     1ea:	97 81       	ldd	r25, Z+7	; 0x07
     1ec:	82 95       	swap	r24
     1ee:	92 95       	swap	r25
     1f0:	90 7f       	andi	r25, 0xF0	; 240
     1f2:	98 27       	eor	r25, r24
     1f4:	80 7f       	andi	r24, 0xF0	; 240
     1f6:	98 27       	eor	r25, r24
     1f8:	92 2f       	mov	r25, r18
     1fa:	9f 70       	andi	r25, 0x0F	; 15
     1fc:	89 2b       	or	r24, r25
     1fe:	8c 93       	st	X, r24
     200:	76 c0       	rjmp	.+236    	; 0x2ee <writeChar+0x1d0>
     202:	ad ee       	ldi	r26, 0xED	; 237
     204:	b0 e0       	ldi	r27, 0x00	; 0
     206:	8c 91       	ld	r24, X
     208:	80 7f       	andi	r24, 0xF0	; 240
     20a:	90 81       	ld	r25, Z
     20c:	89 2b       	or	r24, r25
     20e:	8c 93       	st	X, r24
     210:	a2 ef       	ldi	r26, 0xF2	; 242
     212:	b0 e0       	ldi	r27, 0x00	; 0
     214:	8c 91       	ld	r24, X
     216:	80 7f       	andi	r24, 0xF0	; 240
     218:	92 81       	ldd	r25, Z+2	; 0x02
     21a:	89 2b       	or	r24, r25
     21c:	8c 93       	st	X, r24
     21e:	a7 ef       	ldi	r26, 0xF7	; 247
     220:	b0 e0       	ldi	r27, 0x00	; 0
     222:	8c 91       	ld	r24, X
     224:	80 7f       	andi	r24, 0xF0	; 240
     226:	94 81       	ldd	r25, Z+4	; 0x04
     228:	89 2b       	or	r24, r25
     22a:	8c 93       	st	X, r24
     22c:	ac ef       	ldi	r26, 0xFC	; 252
     22e:	b0 e0       	ldi	r27, 0x00	; 0
     230:	8c 91       	ld	r24, X
     232:	80 7f       	andi	r24, 0xF0	; 240
     234:	96 81       	ldd	r25, Z+6	; 0x06
     236:	89 2b       	or	r24, r25
     238:	8c 93       	st	X, r24
     23a:	59 c0       	rjmp	.+178    	; 0x2ee <writeChar+0x1d0>
     23c:	ad ee       	ldi	r26, 0xED	; 237
     23e:	b0 e0       	ldi	r27, 0x00	; 0
     240:	2c 91       	ld	r18, X
     242:	80 81       	ld	r24, Z
     244:	91 81       	ldd	r25, Z+1	; 0x01
     246:	82 95       	swap	r24
     248:	92 95       	swap	r25
     24a:	90 7f       	andi	r25, 0xF0	; 240
     24c:	98 27       	eor	r25, r24
     24e:	80 7f       	andi	r24, 0xF0	; 240
     250:	98 27       	eor	r25, r24
     252:	92 2f       	mov	r25, r18
     254:	9f 70       	andi	r25, 0x0F	; 15
     256:	89 2b       	or	r24, r25
     258:	8c 93       	st	X, r24
     25a:	a2 ef       	ldi	r26, 0xF2	; 242
     25c:	b0 e0       	ldi	r27, 0x00	; 0
     25e:	2c 91       	ld	r18, X
     260:	82 81       	ldd	r24, Z+2	; 0x02
     262:	93 81       	ldd	r25, Z+3	; 0x03
     264:	82 95       	swap	r24
     266:	92 95       	swap	r25
     268:	90 7f       	andi	r25, 0xF0	; 240
     26a:	98 27       	eor	r25, r24
     26c:	80 7f       	andi	r24, 0xF0	; 240
     26e:	98 27       	eor	r25, r24
     270:	92 2f       	mov	r25, r18
     272:	9f 70       	andi	r25, 0x0F	; 15
     274:	89 2b       	or	r24, r25
     276:	8c 93       	st	X, r24
     278:	a7 ef       	ldi	r26, 0xF7	; 247
     27a:	b0 e0       	ldi	r27, 0x00	; 0
     27c:	2c 91       	ld	r18, X
     27e:	84 81       	ldd	r24, Z+4	; 0x04
     280:	95 81       	ldd	r25, Z+5	; 0x05
     282:	82 95       	swap	r24
     284:	92 95       	swap	r25
     286:	90 7f       	andi	r25, 0xF0	; 240
     288:	98 27       	eor	r25, r24
     28a:	80 7f       	andi	r24, 0xF0	; 240
     28c:	98 27       	eor	r25, r24
     28e:	92 2f       	mov	r25, r18
     290:	9f 70       	andi	r25, 0x0F	; 15
     292:	89 2b       	or	r24, r25
     294:	8c 93       	st	X, r24
     296:	ac ef       	ldi	r26, 0xFC	; 252
     298:	b0 e0       	ldi	r27, 0x00	; 0
     29a:	2c 91       	ld	r18, X
     29c:	86 81       	ldd	r24, Z+6	; 0x06
     29e:	97 81       	ldd	r25, Z+7	; 0x07
     2a0:	82 95       	swap	r24
     2a2:	92 95       	swap	r25
     2a4:	90 7f       	andi	r25, 0xF0	; 240
     2a6:	98 27       	eor	r25, r24
     2a8:	80 7f       	andi	r24, 0xF0	; 240
     2aa:	98 27       	eor	r25, r24
     2ac:	92 2f       	mov	r25, r18
     2ae:	9f 70       	andi	r25, 0x0F	; 15
     2b0:	89 2b       	or	r24, r25
     2b2:	8c 93       	st	X, r24
     2b4:	1c c0       	rjmp	.+56     	; 0x2ee <writeChar+0x1d0>
     2b6:	ae ee       	ldi	r26, 0xEE	; 238
     2b8:	b0 e0       	ldi	r27, 0x00	; 0
     2ba:	8c 91       	ld	r24, X
     2bc:	80 7f       	andi	r24, 0xF0	; 240
     2be:	90 81       	ld	r25, Z
     2c0:	89 2b       	or	r24, r25
     2c2:	8c 93       	st	X, r24
     2c4:	a3 ef       	ldi	r26, 0xF3	; 243
     2c6:	b0 e0       	ldi	r27, 0x00	; 0
     2c8:	8c 91       	ld	r24, X
     2ca:	80 7f       	andi	r24, 0xF0	; 240
     2cc:	92 81       	ldd	r25, Z+2	; 0x02
     2ce:	89 2b       	or	r24, r25
     2d0:	8c 93       	st	X, r24
     2d2:	a8 ef       	ldi	r26, 0xF8	; 248
     2d4:	b0 e0       	ldi	r27, 0x00	; 0
     2d6:	8c 91       	ld	r24, X
     2d8:	80 7f       	andi	r24, 0xF0	; 240
     2da:	94 81       	ldd	r25, Z+4	; 0x04
     2dc:	89 2b       	or	r24, r25
     2de:	8c 93       	st	X, r24
     2e0:	ad ef       	ldi	r26, 0xFD	; 253
     2e2:	b0 e0       	ldi	r27, 0x00	; 0
     2e4:	8c 91       	ld	r24, X
     2e6:	80 7f       	andi	r24, 0xF0	; 240
     2e8:	96 81       	ldd	r25, Z+6	; 0x06
     2ea:	89 2b       	or	r24, r25
     2ec:	8c 93       	st	X, r24
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <printAt>:
     2f2:	8f 92       	push	r8
     2f4:	9f 92       	push	r9
     2f6:	af 92       	push	r10
     2f8:	bf 92       	push	r11
     2fa:	cf 92       	push	r12
     2fc:	df 92       	push	r13
     2fe:	ef 92       	push	r14
     300:	ff 92       	push	r15
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
     306:	4b 01       	movw	r8, r22
     308:	5c 01       	movw	r10, r24
     30a:	ea 01       	movw	r28, r20
     30c:	24 e6       	ldi	r18, 0x64	; 100
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	40 e0       	ldi	r20, 0x00	; 0
     312:	50 e0       	ldi	r21, 0x00	; 0
     314:	0e 94 d6 0e 	call	0x1dac	; 0x1dac <__divmodsi4>
     318:	0f 2e       	mov	r0, r31
     31a:	fa e0       	ldi	r31, 0x0A	; 10
     31c:	cf 2e       	mov	r12, r31
     31e:	d1 2c       	mov	r13, r1
     320:	e1 2c       	mov	r14, r1
     322:	f1 2c       	mov	r15, r1
     324:	f0 2d       	mov	r31, r0
     326:	a7 01       	movw	r20, r14
     328:	96 01       	movw	r18, r12
     32a:	0e 94 d6 0e 	call	0x1dac	; 0x1dac <__divmodsi4>
     32e:	6c 2f       	mov	r22, r28
     330:	80 e3       	ldi	r24, 0x30	; 48
     332:	82 0f       	add	r24, r18
     334:	0e 94 8f 00 	call	0x11e	; 0x11e <writeChar>
     338:	21 96       	adiw	r28, 0x01	; 1
     33a:	c5 01       	movw	r24, r10
     33c:	b4 01       	movw	r22, r8
     33e:	a7 01       	movw	r20, r14
     340:	96 01       	movw	r18, r12
     342:	0e 94 d6 0e 	call	0x1dac	; 0x1dac <__divmodsi4>
     346:	86 2f       	mov	r24, r22
     348:	6c 2f       	mov	r22, r28
     34a:	80 5d       	subi	r24, 0xD0	; 208
     34c:	0e 94 8f 00 	call	0x11e	; 0x11e <writeChar>
     350:	df 91       	pop	r29
     352:	cf 91       	pop	r28
     354:	ff 90       	pop	r15
     356:	ef 90       	pop	r14
     358:	df 90       	pop	r13
     35a:	cf 90       	pop	r12
     35c:	bf 90       	pop	r11
     35e:	af 90       	pop	r10
     360:	9f 90       	pop	r9
     362:	8f 90       	pop	r8
     364:	08 95       	ret

00000366 <adjustFrequency>:
     366:	cf 92       	push	r12
     368:	df 92       	push	r13
     36a:	ef 92       	push	r14
     36c:	ff 92       	push	r15
     36e:	0f 93       	push	r16
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	8c 01       	movw	r16, r24
     378:	eb 01       	movw	r28, r22
     37a:	fc 01       	movw	r30, r24
     37c:	80 85       	ldd	r24, Z+8	; 0x08
     37e:	91 85       	ldd	r25, Z+9	; 0x09
     380:	89 2b       	or	r24, r25
     382:	19 f0       	breq	.+6      	; 0x38a <adjustFrequency+0x24>
     384:	e6 80       	ldd	r14, Z+6	; 0x06
     386:	f7 80       	ldd	r15, Z+7	; 0x07
     388:	03 c0       	rjmp	.+6      	; 0x390 <adjustFrequency+0x2a>
     38a:	f8 01       	movw	r30, r16
     38c:	e4 80       	ldd	r14, Z+4	; 0x04
     38e:	f5 80       	ldd	r15, Z+5	; 0x05
     390:	40 e0       	ldi	r20, 0x00	; 0
     392:	50 e0       	ldi	r21, 0x00	; 0
     394:	6e e8       	ldi	r22, 0x8E	; 142
     396:	72 e0       	ldi	r23, 0x02	; 2
     398:	c7 01       	movw	r24, r14
     39a:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <sync>
     39e:	ac 01       	movw	r20, r24
     3a0:	4c 0f       	add	r20, r28
     3a2:	5d 1f       	adc	r21, r29
     3a4:	55 23       	and	r21, r21
     3a6:	14 f4       	brge	.+4      	; 0x3ac <adjustFrequency+0x46>
     3a8:	40 e0       	ldi	r20, 0x00	; 0
     3aa:	50 e0       	ldi	r21, 0x00	; 0
     3ac:	6a e8       	ldi	r22, 0x8A	; 138
     3ae:	72 e0       	ldi	r23, 0x02	; 2
     3b0:	c7 01       	movw	r24, r14
     3b2:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <sync>
     3b6:	c1 2c       	mov	r12, r1
     3b8:	d1 2c       	mov	r13, r1
     3ba:	0f 2e       	mov	r0, r31
     3bc:	fa e0       	ldi	r31, 0x0A	; 10
     3be:	ef 2e       	mov	r14, r31
     3c0:	f2 e0       	ldi	r31, 0x02	; 2
     3c2:	ff 2e       	mov	r15, r31
     3c4:	f0 2d       	mov	r31, r0
     3c6:	20 e0       	ldi	r18, 0x00	; 0
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	a9 01       	movw	r20, r18
     3cc:	60 e0       	ldi	r22, 0x00	; 0
     3ce:	70 e0       	ldi	r23, 0x00	; 0
     3d0:	cb 01       	movw	r24, r22
     3d2:	0e 94 94 0c 	call	0x1928	; 0x1928 <async>
     3d6:	df 91       	pop	r29
     3d8:	cf 91       	pop	r28
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	ff 90       	pop	r15
     3e0:	ef 90       	pop	r14
     3e2:	df 90       	pop	r13
     3e4:	cf 90       	pop	r12
     3e6:	08 95       	ret

000003e8 <updateOneOrTwo>:
    printAt(gen1Freq, 0); //gen1 hz at pos 0-1
    printAt(gen2Freq, 3); //gen2 hz at pos 3-4	
}

void updateOneOrTwo(GUI *self) {
	LCDDR0 &= ~(0b01000100);
     3e8:	ec ee       	ldi	r30, 0xEC	; 236
     3ea:	f0 e0       	ldi	r31, 0x00	; 0
     3ec:	20 81       	ld	r18, Z
     3ee:	2b 7b       	andi	r18, 0xBB	; 187
     3f0:	20 83       	st	Z, r18
	if (self->activeGen) {		
     3f2:	fc 01       	movw	r30, r24
     3f4:	80 85       	ldd	r24, Z+8	; 0x08
     3f6:	91 85       	ldd	r25, Z+9	; 0x09
     3f8:	89 2b       	or	r24, r25
     3fa:	31 f0       	breq	.+12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		LCDDR0 |= 0b01000000;
     3fc:	ec ee       	ldi	r30, 0xEC	; 236
     3fe:	f0 e0       	ldi	r31, 0x00	; 0
     400:	80 81       	ld	r24, Z
     402:	80 64       	ori	r24, 0x40	; 64
     404:	80 83       	st	Z, r24
     406:	08 95       	ret
	} else {
		LCDDR0 |= 0b00000100;
     408:	ec ee       	ldi	r30, 0xEC	; 236
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	80 81       	ld	r24, Z
     40e:	84 60       	ori	r24, 0x04	; 4
     410:	80 83       	st	Z, r24
     412:	08 95       	ret

00000414 <updateDisplay>:
        SYNC(target, setFrequency, 0);
    }
    ASYNC(self, updateDisplay, 0);
}

void updateDisplay(GUI *self) {
     414:	0f 93       	push	r16
     416:	1f 93       	push	r17
     418:	cf 93       	push	r28
     41a:	df 93       	push	r29
     41c:	ec 01       	movw	r28, r24
	updateOneOrTwo(self);
     41e:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <updateOneOrTwo>
	int gen1Freq = SYNC(self->gen1, getFrequency(self->gen1), 0);
     422:	8c 81       	ldd	r24, Y+4	; 0x04
     424:	9d 81       	ldd	r25, Y+5	; 0x05
     426:	0e 94 8e 02 	call	0x51c	; 0x51c <getFrequency>
     42a:	40 e0       	ldi	r20, 0x00	; 0
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	bc 01       	movw	r22, r24
     430:	8c 81       	ldd	r24, Y+4	; 0x04
     432:	9d 81       	ldd	r25, Y+5	; 0x05
     434:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <sync>
     438:	8c 01       	movw	r16, r24
	int gen2Freq = SYNC(self->gen2, getFrequency(self->gen2), 0);
     43a:	8e 81       	ldd	r24, Y+6	; 0x06
     43c:	9f 81       	ldd	r25, Y+7	; 0x07
     43e:	0e 94 8e 02 	call	0x51c	; 0x51c <getFrequency>
     442:	40 e0       	ldi	r20, 0x00	; 0
     444:	50 e0       	ldi	r21, 0x00	; 0
     446:	bc 01       	movw	r22, r24
     448:	8e 81       	ldd	r24, Y+6	; 0x06
     44a:	9f 81       	ldd	r25, Y+7	; 0x07
     44c:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <sync>
     450:	ec 01       	movw	r28, r24
    printAt(gen1Freq, 0); //gen1 hz at pos 0-1
     452:	b8 01       	movw	r22, r16
     454:	11 0f       	add	r17, r17
     456:	88 0b       	sbc	r24, r24
     458:	99 0b       	sbc	r25, r25
     45a:	40 e0       	ldi	r20, 0x00	; 0
     45c:	50 e0       	ldi	r21, 0x00	; 0
     45e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <printAt>
    printAt(gen2Freq, 3); //gen2 hz at pos 3-4	
     462:	be 01       	movw	r22, r28
     464:	dd 0f       	add	r29, r29
     466:	88 0b       	sbc	r24, r24
     468:	99 0b       	sbc	r25, r25
     46a:	43 e0       	ldi	r20, 0x03	; 3
     46c:	50 e0       	ldi	r21, 0x00	; 0
     46e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <printAt>
}
     472:	df 91       	pop	r29
     474:	cf 91       	pop	r28
     476:	1f 91       	pop	r17
     478:	0f 91       	pop	r16
     47a:	08 95       	ret

0000047c <joystickInit>:
#include "PulseGen.h"


void joystickInit() {
    //sätter på upp, ner och inåt som input
    PORTB = PORTB | 0b11010000;
     47c:	85 b1       	in	r24, 0x05	; 5
     47e:	80 6d       	ori	r24, 0xD0	; 208
     480:	85 b9       	out	0x05, r24	; 5
    //sätter på höger och vänster  som input
    PORTE = PORTE | 0b00001100;
     482:	8e b1       	in	r24, 0x0e	; 14
     484:	8c 60       	ori	r24, 0x0C	; 12
     486:	8e b9       	out	0x0e, r24	; 14
    //DDRE = 0b01010000;
    //sätter på upp,ner,in (15) hög,ven (14) //sida 53 AVr..169 nånitng
    EIMSK = EIMSK | (1<<PCINT15) | (1<<PCINT14);
     488:	8d b3       	in	r24, 0x1d	; 29
     48a:	80 6c       	ori	r24, 0xC0	; 192
     48c:	8d bb       	out	0x1d, r24	; 29

    //sätter på upp, ner och inåt på joystick (som interrupt)
    PCMSK1 = PCMSK1 | (1<<PCINT15) | (1<<PCINT14) | (1<<PCINT12);
     48e:	ec e6       	ldi	r30, 0x6C	; 108
     490:	f0 e0       	ldi	r31, 0x00	; 0
     492:	80 81       	ld	r24, Z
     494:	80 6d       	ori	r24, 0xD0	; 208
     496:	80 83       	st	Z, r24
    //sätter på höger och vänster på joystick (som interrupt)
    PCMSK0 = PCMSK0 | (1<<PCINT3) | (1<<PCINT2);
     498:	eb e6       	ldi	r30, 0x6B	; 107
     49a:	f0 e0       	ldi	r31, 0x00	; 0
     49c:	80 81       	ld	r24, Z
     49e:	8c 60       	ori	r24, 0x0C	; 12
     4a0:	80 83       	st	Z, r24
     4a2:	08 95       	ret

000004a4 <interruptPinB>:
}


// Joystick input handler
void interruptPinB(JoystickHandler *self) { 
    if((PINB & 0b10000000) >> 7 == 0){ //down press on joystick
     4a4:	23 b1       	in	r18, 0x03	; 3
        //ASYNC(self->gui, adjustFrequency, -1);
    }

    if((PINB & 0b01000000) >> 6 == 0){ //up press on joystick
     4a6:	1e 99       	sbic	0x03, 6	; 3
     4a8:	07 c0       	rjmp	.+14     	; 0x4b8 <interruptPinB+0x14>
     4aa:	fc 01       	movw	r30, r24
        adjustFrequency(self->gui, 1);
     4ac:	61 e0       	ldi	r22, 0x01	; 1
     4ae:	70 e0       	ldi	r23, 0x00	; 0
     4b0:	84 81       	ldd	r24, Z+4	; 0x04
     4b2:	95 81       	ldd	r25, Z+5	; 0x05
     4b4:	0e 94 b3 01 	call	0x366	; 0x366 <adjustFrequency>
    }

    if((PINB & 0b00010000) >> 4 == 0){ //middle press
     4b8:	83 b1       	in	r24, 0x03	; 3
     4ba:	08 95       	ret

000004bc <interruptPinE>:
        //ASYNC(self->gui, saveRestore, 0);
    }
}

void interruptPinE(JoystickHandler *self) {  
    if((PINE & 0b00000100) >> 2 == 0){ //left press
     4bc:	8c b1       	in	r24, 0x0c	; 12
       // ASYNC(self->gui, switchFocus, 0);
    }

    if((PINE & 0b00001000) >> 3 == 0){  //right press
     4be:	8c b1       	in	r24, 0x0c	; 12
     4c0:	08 95       	ret

000004c2 <sysInit>:
GUI gui = initGUI(&gen1, &gen2);
JoystickHandler joystick = initJoystickHandler(&gui);

void sysInit(){
    // Clock Prescale Register "maximum speed"
	CLKPR = 0b10000000; // Clock Prescaler Change Enable
     4c2:	e1 e6       	ldi	r30, 0x61	; 97
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	80 e8       	ldi	r24, 0x80	; 128
     4c8:	80 83       	st	Z, r24
	CLKPR = 0b00000000; // Set 0 for sysclock
     4ca:	10 82       	st	Z, r1
     4cc:	08 95       	ret

000004ce <pinOutputInit>:
}

void pinOutputInit(){
    // Initialize Port E as output for PE4 and PE6
	DDRE |= (1 << PE4) | (1 << PE6);
     4ce:	8d b1       	in	r24, 0x0d	; 13
     4d0:	80 65       	ori	r24, 0x50	; 80
     4d2:	8d b9       	out	0x0d, r24	; 13
     4d4:	08 95       	ret

000004d6 <main>:
}


int main() {
    sysInit();
     4d6:	0e 94 61 02 	call	0x4c2	; 0x4c2 <sysInit>
    pinOutputInit();
     4da:	0e 94 67 02 	call	0x4ce	; 0x4ce <pinOutputInit>
    joystickInit();
     4de:	0e 94 3e 02 	call	0x47c	; 0x47c <joystickInit>
    LCD_init();
     4e2:	0e 94 57 00 	call	0xae	; 0xae <LCD_init>
	//LCDDR0 = 0b01000100;
	//LCDDR0 = 0b01000100;
	
    // Instal interupt handler
    //when the joystick's vertical state changes
    INSTALL(&joystick, interruptPinB, IRQ_PCINT1);
     4e6:	42 e0       	ldi	r20, 0x02	; 2
     4e8:	62 e5       	ldi	r22, 0x52	; 82
     4ea:	72 e0       	ldi	r23, 0x02	; 2
     4ec:	80 e5       	ldi	r24, 0x50	; 80
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <install>
    //when the joystick's horizontal (minus middle) state changes
    INSTALL(&joystick, interruptPinE, IRQ_PCINT0);
     4f4:	41 e0       	ldi	r20, 0x01	; 1
     4f6:	6e e5       	ldi	r22, 0x5E	; 94
     4f8:	72 e0       	ldi	r23, 0x02	; 2
     4fa:	80 e5       	ldi	r24, 0x50	; 80
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <install>
    
    // Start kernel
    return TINYTIMBER(&gui, NULL, NULL);
     502:	40 e0       	ldi	r20, 0x00	; 0
     504:	50 e0       	ldi	r21, 0x00	; 0
     506:	60 e0       	ldi	r22, 0x00	; 0
     508:	70 e0       	ldi	r23, 0x00	; 0
     50a:	86 e5       	ldi	r24, 0x56	; 86
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <tinytimber>
}
     512:	08 95       	ret

00000514 <setFrequency>:
     514:	fc 01       	movw	r30, r24
     516:	71 87       	std	Z+9, r23	; 0x09
     518:	60 87       	std	Z+8, r22	; 0x08
     51a:	08 95       	ret

0000051c <getFrequency>:
     51c:	fc 01       	movw	r30, r24
     51e:	80 85       	ldd	r24, Z+8	; 0x08
     520:	91 85       	ldd	r25, Z+9	; 0x09
     522:	08 95       	ret

00000524 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     524:	cf 93       	push	r28
     526:	df 93       	push	r29
     528:	00 d0       	rcall	.+0      	; 0x52a <initialize+0x6>
     52a:	00 d0       	rcall	.+0      	; 0x52c <initialize+0x8>
     52c:	cd b7       	in	r28, 0x3d	; 61
     52e:	de b7       	in	r29, 0x3e	; 62
     530:	8f e7       	ldi	r24, 0x7F	; 127
     532:	92 e0       	ldi	r25, 0x02	; 2
     534:	2f e5       	ldi	r18, 0x5F	; 95
     536:	33 e0       	ldi	r19, 0x03	; 3
     538:	fc 01       	movw	r30, r24
     53a:	70 97       	sbiw	r30, 0x10	; 16
     53c:	91 83       	std	Z+1, r25	; 0x01
     53e:	80 83       	st	Z, r24
     540:	40 96       	adiw	r24, 0x10	; 16
     542:	82 17       	cp	r24, r18
     544:	93 07       	cpc	r25, r19
     546:	c1 f7       	brne	.-16     	; 0x538 <initialize+0x14>
     548:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <messages+0xe1>
     54c:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <messages+0xe0>
     550:	ea eb       	ldi	r30, 0xBA	; 186
     552:	f1 e0       	ldi	r31, 0x01	; 1
     554:	87 ed       	ldi	r24, 0xD7	; 215
     556:	91 e0       	ldi	r25, 0x01	; 1
     558:	91 83       	std	Z+1, r25	; 0x01
     55a:	80 83       	st	Z, r24
     55c:	84 ef       	ldi	r24, 0xF4	; 244
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	96 8f       	std	Z+30, r25	; 0x1e
     562:	85 8f       	std	Z+29, r24	; 0x1d
     564:	a1 e1       	ldi	r26, 0x11	; 17
     566:	b2 e0       	ldi	r27, 0x02	; 2
     568:	b3 af       	std	Z+59, r27	; 0x3b
     56a:	a2 af       	std	Z+58, r26	; 0x3a
     56c:	1d 92       	st	X+, r1
     56e:	1c 92       	st	X, r1
     570:	fa 83       	std	Y+2, r31	; 0x02
     572:	e9 83       	std	Y+1, r30	; 0x01
     574:	eb eb       	ldi	r30, 0xBB	; 187
     576:	f3 e0       	ldi	r31, 0x03	; 3
     578:	fc 83       	std	Y+4, r31	; 0x04
     57a:	eb 83       	std	Y+3, r30	; 0x03
     57c:	89 81       	ldd	r24, Y+1	; 0x01
     57e:	9a 81       	ldd	r25, Y+2	; 0x02
     580:	06 96       	adiw	r24, 0x06	; 6
     582:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <setjmp>
     586:	8b 81       	ldd	r24, Y+3	; 0x03
     588:	9c 81       	ldd	r25, Y+4	; 0x04
     58a:	e9 81       	ldd	r30, Y+1	; 0x01
     58c:	fa 81       	ldd	r31, Y+2	; 0x02
     58e:	97 8b       	std	Z+23, r25	; 0x17
     590:	86 8b       	std	Z+22, r24	; 0x16
     592:	91 8f       	std	Z+25, r25	; 0x19
     594:	80 8f       	std	Z+24, r24	; 0x18
     596:	82 e3       	ldi	r24, 0x32	; 50
     598:	9e e0       	ldi	r25, 0x0E	; 14
     59a:	94 8f       	std	Z+28, r25	; 0x1c
     59c:	83 8f       	std	Z+27, r24	; 0x1b
     59e:	15 82       	std	Z+5, r1	; 0x05
     5a0:	14 82       	std	Z+4, r1	; 0x04
     5a2:	7d 96       	adiw	r30, 0x1d	; 29
     5a4:	fa 83       	std	Y+2, r31	; 0x02
     5a6:	e9 83       	std	Y+1, r30	; 0x01
     5a8:	eb 81       	ldd	r30, Y+3	; 0x03
     5aa:	fc 81       	ldd	r31, Y+4	; 0x04
     5ac:	e0 5a       	subi	r30, 0xA0	; 160
     5ae:	ff 4f       	sbci	r31, 0xFF	; 255
     5b0:	fc 83       	std	Y+4, r31	; 0x04
     5b2:	eb 83       	std	Y+3, r30	; 0x03
     5b4:	89 81       	ldd	r24, Y+1	; 0x01
     5b6:	9a 81       	ldd	r25, Y+2	; 0x02
     5b8:	8e 52       	subi	r24, 0x2E	; 46
     5ba:	92 40       	sbci	r25, 0x02	; 2
     5bc:	f9 f6       	brne	.-66     	; 0x57c <initialize+0x58>
     5be:	e2 e5       	ldi	r30, 0x52	; 82
     5c0:	f2 e0       	ldi	r31, 0x02	; 2
     5c2:	11 82       	std	Z+1, r1	; 0x01
     5c4:	10 82       	st	Z, r1
     5c6:	15 82       	std	Z+5, r1	; 0x05
     5c8:	14 82       	std	Z+4, r1	; 0x04
     5ca:	13 82       	std	Z+3, r1	; 0x03
     5cc:	12 82       	std	Z+2, r1	; 0x02
     5ce:	e1 e6       	ldi	r30, 0x61	; 97
     5d0:	f0 e0       	ldi	r31, 0x00	; 0
     5d2:	80 e8       	ldi	r24, 0x80	; 128
     5d4:	80 83       	st	Z, r24
     5d6:	10 82       	st	Z, r1
     5d8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     5dc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     5e0:	84 e0       	ldi	r24, 0x04	; 4
     5e2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	df 91       	pop	r29
     5f6:	cf 91       	pop	r28
     5f8:	08 95       	ret

000005fa <dispatch>:
     5fa:	cf 93       	push	r28
     5fc:	df 93       	push	r29
     5fe:	00 d0       	rcall	.+0      	; 0x600 <dispatch+0x6>
     600:	cd b7       	in	r28, 0x3d	; 61
     602:	de b7       	in	r29, 0x3e	; 62
     604:	9a 83       	std	Y+2, r25	; 0x02
     606:	89 83       	std	Y+1, r24	; 0x01
     608:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current>
     60c:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current+0x1>
     610:	06 96       	adiw	r24, 0x06	; 6
     612:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <setjmp>
     616:	89 2b       	or	r24, r25
     618:	59 f4       	brne	.+22     	; 0x630 <dispatch+0x36>
     61a:	89 81       	ldd	r24, Y+1	; 0x01
     61c:	9a 81       	ldd	r25, Y+2	; 0x02
     61e:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current+0x1>
     622:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current>
     626:	61 e0       	ldi	r22, 0x01	; 1
     628:	70 e0       	ldi	r23, 0x00	; 0
     62a:	06 96       	adiw	r24, 0x06	; 6
     62c:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <longjmp>
     630:	0f 90       	pop	r0
     632:	0f 90       	pop	r0
     634:	df 91       	pop	r29
     636:	cf 91       	pop	r28
     638:	08 95       	ret

0000063a <schedule>:
     63a:	0f 93       	push	r16
     63c:	1f 93       	push	r17
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <msgQ>
     646:	f0 91 95 01 	lds	r31, 0x0195	; 0x800195 <msgQ+0x1>
     64a:	30 97       	sbiw	r30, 0x00	; 0
     64c:	61 f1       	breq	.+88     	; 0x6a6 <schedule+0x6c>
     64e:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
     652:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
     656:	00 97       	sbiw	r24, 0x00	; 0
     658:	31 f1       	breq	.+76     	; 0x6a6 <schedule+0x6c>
     65a:	c0 91 7e 01 	lds	r28, 0x017E	; 0x80017e <activeStack>
     65e:	d0 91 7f 01 	lds	r29, 0x017F	; 0x80017f <activeStack+0x1>
     662:	aa 81       	ldd	r26, Y+2	; 0x02
     664:	bb 81       	ldd	r27, Y+3	; 0x03
     666:	10 97       	sbiw	r26, 0x00	; 0
     668:	79 f0       	breq	.+30     	; 0x688 <schedule+0x4e>
     66a:	46 81       	ldd	r20, Z+6	; 0x06
     66c:	57 81       	ldd	r21, Z+7	; 0x07
     66e:	60 85       	ldd	r22, Z+8	; 0x08
     670:	71 85       	ldd	r23, Z+9	; 0x09
     672:	16 96       	adiw	r26, 0x06	; 6
     674:	0d 91       	ld	r16, X+
     676:	1d 91       	ld	r17, X+
     678:	2d 91       	ld	r18, X+
     67a:	3c 91       	ld	r19, X
     67c:	19 97       	sbiw	r26, 0x09	; 9
     67e:	40 1b       	sub	r20, r16
     680:	51 0b       	sbc	r21, r17
     682:	62 0b       	sbc	r22, r18
     684:	73 0b       	sbc	r23, r19
     686:	7a f4       	brpl	.+30     	; 0x6a6 <schedule+0x6c>
     688:	fc 01       	movw	r30, r24
     68a:	20 81       	ld	r18, Z
     68c:	31 81       	ldd	r19, Z+1	; 0x01
     68e:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <threadPool+0x1>
     692:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <threadPool>
     696:	d1 83       	std	Z+1, r29	; 0x01
     698:	c0 83       	st	Z, r28
     69a:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <activeStack+0x1>
     69e:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <activeStack>
     6a2:	0e 94 fd 02 	call	0x5fa	; 0x5fa <dispatch>
     6a6:	df 91       	pop	r29
     6a8:	cf 91       	pop	r28
     6aa:	1f 91       	pop	r17
     6ac:	0f 91       	pop	r16
     6ae:	08 95       	ret

000006b0 <__vector_1>:
     6b0:	1f 92       	push	r1
     6b2:	0f 92       	push	r0
     6b4:	0f b6       	in	r0, 0x3f	; 63
     6b6:	0f 92       	push	r0
     6b8:	11 24       	eor	r1, r1
     6ba:	2f 93       	push	r18
     6bc:	3f 93       	push	r19
     6be:	4f 93       	push	r20
     6c0:	5f 93       	push	r21
     6c2:	6f 93       	push	r22
     6c4:	7f 93       	push	r23
     6c6:	8f 93       	push	r24
     6c8:	9f 93       	push	r25
     6ca:	af 93       	push	r26
     6cc:	bf 93       	push	r27
     6ce:	ef 93       	push	r30
     6d0:	ff 93       	push	r31
     6d2:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     6d6:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     6da:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     6de:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     6e2:	c9 01       	movw	r24, r18
     6e4:	03 2e       	mov	r0, r19
     6e6:	00 0c       	add	r0, r0
     6e8:	aa 0b       	sbc	r26, r26
     6ea:	bb 0b       	sbc	r27, r27
     6ec:	dc 01       	movw	r26, r24
     6ee:	99 27       	eor	r25, r25
     6f0:	88 27       	eor	r24, r24
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	84 2b       	or	r24, r20
     6f8:	95 2b       	or	r25, r21
     6fa:	a6 2b       	or	r26, r22
     6fc:	b7 2b       	or	r27, r23
     6fe:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     702:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     706:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     70a:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     70e:	b0 9b       	sbis	0x16, 0	; 22
     710:	1b c0       	rjmp	.+54     	; 0x748 <__vector_1+0x98>
     712:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     716:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     71a:	c9 01       	movw	r24, r18
     71c:	01 96       	adiw	r24, 0x01	; 1
     71e:	09 2e       	mov	r0, r25
     720:	00 0c       	add	r0, r0
     722:	aa 0b       	sbc	r26, r26
     724:	bb 0b       	sbc	r27, r27
     726:	dc 01       	movw	r26, r24
     728:	99 27       	eor	r25, r25
     72a:	88 27       	eor	r24, r24
     72c:	60 e0       	ldi	r22, 0x00	; 0
     72e:	70 e0       	ldi	r23, 0x00	; 0
     730:	84 2b       	or	r24, r20
     732:	95 2b       	or	r25, r21
     734:	a6 2b       	or	r26, r22
     736:	b7 2b       	or	r27, r23
     738:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     73c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     740:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     744:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     748:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <mtable>
     74c:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <mtable+0x1>
     750:	30 97       	sbiw	r30, 0x00	; 0
     752:	39 f0       	breq	.+14     	; 0x762 <__vector_1+0xb2>
     754:	60 e0       	ldi	r22, 0x00	; 0
     756:	70 e0       	ldi	r23, 0x00	; 0
     758:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <otable>
     75c:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <otable+0x1>
     760:	09 95       	icall
     762:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     766:	ff 91       	pop	r31
     768:	ef 91       	pop	r30
     76a:	bf 91       	pop	r27
     76c:	af 91       	pop	r26
     76e:	9f 91       	pop	r25
     770:	8f 91       	pop	r24
     772:	7f 91       	pop	r23
     774:	6f 91       	pop	r22
     776:	5f 91       	pop	r21
     778:	4f 91       	pop	r20
     77a:	3f 91       	pop	r19
     77c:	2f 91       	pop	r18
     77e:	0f 90       	pop	r0
     780:	0f be       	out	0x3f, r0	; 63
     782:	0f 90       	pop	r0
     784:	1f 90       	pop	r1
     786:	18 95       	reti

00000788 <__vector_2>:
     788:	1f 92       	push	r1
     78a:	0f 92       	push	r0
     78c:	0f b6       	in	r0, 0x3f	; 63
     78e:	0f 92       	push	r0
     790:	11 24       	eor	r1, r1
     792:	2f 93       	push	r18
     794:	3f 93       	push	r19
     796:	4f 93       	push	r20
     798:	5f 93       	push	r21
     79a:	6f 93       	push	r22
     79c:	7f 93       	push	r23
     79e:	8f 93       	push	r24
     7a0:	9f 93       	push	r25
     7a2:	af 93       	push	r26
     7a4:	bf 93       	push	r27
     7a6:	ef 93       	push	r30
     7a8:	ff 93       	push	r31
     7aa:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     7ae:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     7b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     7b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     7ba:	c9 01       	movw	r24, r18
     7bc:	03 2e       	mov	r0, r19
     7be:	00 0c       	add	r0, r0
     7c0:	aa 0b       	sbc	r26, r26
     7c2:	bb 0b       	sbc	r27, r27
     7c4:	dc 01       	movw	r26, r24
     7c6:	99 27       	eor	r25, r25
     7c8:	88 27       	eor	r24, r24
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	84 2b       	or	r24, r20
     7d0:	95 2b       	or	r25, r21
     7d2:	a6 2b       	or	r26, r22
     7d4:	b7 2b       	or	r27, r23
     7d6:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     7da:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     7de:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     7e2:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     7e6:	b0 9b       	sbis	0x16, 0	; 22
     7e8:	1b c0       	rjmp	.+54     	; 0x820 <__vector_2+0x98>
     7ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     7ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     7f2:	c9 01       	movw	r24, r18
     7f4:	01 96       	adiw	r24, 0x01	; 1
     7f6:	09 2e       	mov	r0, r25
     7f8:	00 0c       	add	r0, r0
     7fa:	aa 0b       	sbc	r26, r26
     7fc:	bb 0b       	sbc	r27, r27
     7fe:	dc 01       	movw	r26, r24
     800:	99 27       	eor	r25, r25
     802:	88 27       	eor	r24, r24
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	84 2b       	or	r24, r20
     80a:	95 2b       	or	r25, r21
     80c:	a6 2b       	or	r26, r22
     80e:	b7 2b       	or	r27, r23
     810:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     814:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     818:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     81c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     820:	e0 91 30 02 	lds	r30, 0x0230	; 0x800230 <mtable+0x2>
     824:	f0 91 31 02 	lds	r31, 0x0231	; 0x800231 <mtable+0x3>
     828:	30 97       	sbiw	r30, 0x00	; 0
     82a:	39 f0       	breq	.+14     	; 0x83a <__vector_2+0xb2>
     82c:	61 e0       	ldi	r22, 0x01	; 1
     82e:	70 e0       	ldi	r23, 0x00	; 0
     830:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <otable+0x2>
     834:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <otable+0x3>
     838:	09 95       	icall
     83a:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     83e:	ff 91       	pop	r31
     840:	ef 91       	pop	r30
     842:	bf 91       	pop	r27
     844:	af 91       	pop	r26
     846:	9f 91       	pop	r25
     848:	8f 91       	pop	r24
     84a:	7f 91       	pop	r23
     84c:	6f 91       	pop	r22
     84e:	5f 91       	pop	r21
     850:	4f 91       	pop	r20
     852:	3f 91       	pop	r19
     854:	2f 91       	pop	r18
     856:	0f 90       	pop	r0
     858:	0f be       	out	0x3f, r0	; 63
     85a:	0f 90       	pop	r0
     85c:	1f 90       	pop	r1
     85e:	18 95       	reti

00000860 <__vector_3>:
     860:	1f 92       	push	r1
     862:	0f 92       	push	r0
     864:	0f b6       	in	r0, 0x3f	; 63
     866:	0f 92       	push	r0
     868:	11 24       	eor	r1, r1
     86a:	2f 93       	push	r18
     86c:	3f 93       	push	r19
     86e:	4f 93       	push	r20
     870:	5f 93       	push	r21
     872:	6f 93       	push	r22
     874:	7f 93       	push	r23
     876:	8f 93       	push	r24
     878:	9f 93       	push	r25
     87a:	af 93       	push	r26
     87c:	bf 93       	push	r27
     87e:	ef 93       	push	r30
     880:	ff 93       	push	r31
     882:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     886:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     88a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     88e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     892:	c9 01       	movw	r24, r18
     894:	03 2e       	mov	r0, r19
     896:	00 0c       	add	r0, r0
     898:	aa 0b       	sbc	r26, r26
     89a:	bb 0b       	sbc	r27, r27
     89c:	dc 01       	movw	r26, r24
     89e:	99 27       	eor	r25, r25
     8a0:	88 27       	eor	r24, r24
     8a2:	60 e0       	ldi	r22, 0x00	; 0
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	84 2b       	or	r24, r20
     8a8:	95 2b       	or	r25, r21
     8aa:	a6 2b       	or	r26, r22
     8ac:	b7 2b       	or	r27, r23
     8ae:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     8b2:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     8b6:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     8ba:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     8be:	b0 9b       	sbis	0x16, 0	; 22
     8c0:	1b c0       	rjmp	.+54     	; 0x8f8 <__vector_3+0x98>
     8c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     8c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     8ca:	c9 01       	movw	r24, r18
     8cc:	01 96       	adiw	r24, 0x01	; 1
     8ce:	09 2e       	mov	r0, r25
     8d0:	00 0c       	add	r0, r0
     8d2:	aa 0b       	sbc	r26, r26
     8d4:	bb 0b       	sbc	r27, r27
     8d6:	dc 01       	movw	r26, r24
     8d8:	99 27       	eor	r25, r25
     8da:	88 27       	eor	r24, r24
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	70 e0       	ldi	r23, 0x00	; 0
     8e0:	84 2b       	or	r24, r20
     8e2:	95 2b       	or	r25, r21
     8e4:	a6 2b       	or	r26, r22
     8e6:	b7 2b       	or	r27, r23
     8e8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     8ec:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     8f0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     8f4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     8f8:	e0 91 32 02 	lds	r30, 0x0232	; 0x800232 <mtable+0x4>
     8fc:	f0 91 33 02 	lds	r31, 0x0233	; 0x800233 <mtable+0x5>
     900:	30 97       	sbiw	r30, 0x00	; 0
     902:	39 f0       	breq	.+14     	; 0x912 <__vector_3+0xb2>
     904:	62 e0       	ldi	r22, 0x02	; 2
     906:	70 e0       	ldi	r23, 0x00	; 0
     908:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <otable+0x4>
     90c:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <otable+0x5>
     910:	09 95       	icall
     912:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     916:	ff 91       	pop	r31
     918:	ef 91       	pop	r30
     91a:	bf 91       	pop	r27
     91c:	af 91       	pop	r26
     91e:	9f 91       	pop	r25
     920:	8f 91       	pop	r24
     922:	7f 91       	pop	r23
     924:	6f 91       	pop	r22
     926:	5f 91       	pop	r21
     928:	4f 91       	pop	r20
     92a:	3f 91       	pop	r19
     92c:	2f 91       	pop	r18
     92e:	0f 90       	pop	r0
     930:	0f be       	out	0x3f, r0	; 63
     932:	0f 90       	pop	r0
     934:	1f 90       	pop	r1
     936:	18 95       	reti

00000938 <__vector_4>:
     938:	1f 92       	push	r1
     93a:	0f 92       	push	r0
     93c:	0f b6       	in	r0, 0x3f	; 63
     93e:	0f 92       	push	r0
     940:	11 24       	eor	r1, r1
     942:	2f 93       	push	r18
     944:	3f 93       	push	r19
     946:	4f 93       	push	r20
     948:	5f 93       	push	r21
     94a:	6f 93       	push	r22
     94c:	7f 93       	push	r23
     94e:	8f 93       	push	r24
     950:	9f 93       	push	r25
     952:	af 93       	push	r26
     954:	bf 93       	push	r27
     956:	ef 93       	push	r30
     958:	ff 93       	push	r31
     95a:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     95e:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     962:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     966:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     96a:	c9 01       	movw	r24, r18
     96c:	03 2e       	mov	r0, r19
     96e:	00 0c       	add	r0, r0
     970:	aa 0b       	sbc	r26, r26
     972:	bb 0b       	sbc	r27, r27
     974:	dc 01       	movw	r26, r24
     976:	99 27       	eor	r25, r25
     978:	88 27       	eor	r24, r24
     97a:	60 e0       	ldi	r22, 0x00	; 0
     97c:	70 e0       	ldi	r23, 0x00	; 0
     97e:	84 2b       	or	r24, r20
     980:	95 2b       	or	r25, r21
     982:	a6 2b       	or	r26, r22
     984:	b7 2b       	or	r27, r23
     986:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     98a:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     98e:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     992:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     996:	b0 9b       	sbis	0x16, 0	; 22
     998:	1b c0       	rjmp	.+54     	; 0x9d0 <__vector_4+0x98>
     99a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     99e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     9a2:	c9 01       	movw	r24, r18
     9a4:	01 96       	adiw	r24, 0x01	; 1
     9a6:	09 2e       	mov	r0, r25
     9a8:	00 0c       	add	r0, r0
     9aa:	aa 0b       	sbc	r26, r26
     9ac:	bb 0b       	sbc	r27, r27
     9ae:	dc 01       	movw	r26, r24
     9b0:	99 27       	eor	r25, r25
     9b2:	88 27       	eor	r24, r24
     9b4:	60 e0       	ldi	r22, 0x00	; 0
     9b6:	70 e0       	ldi	r23, 0x00	; 0
     9b8:	84 2b       	or	r24, r20
     9ba:	95 2b       	or	r25, r21
     9bc:	a6 2b       	or	r26, r22
     9be:	b7 2b       	or	r27, r23
     9c0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     9c4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     9c8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     9cc:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     9d0:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <mtable+0x6>
     9d4:	f0 91 35 02 	lds	r31, 0x0235	; 0x800235 <mtable+0x7>
     9d8:	30 97       	sbiw	r30, 0x00	; 0
     9da:	39 f0       	breq	.+14     	; 0x9ea <__vector_4+0xb2>
     9dc:	63 e0       	ldi	r22, 0x03	; 3
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <otable+0x6>
     9e4:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <otable+0x7>
     9e8:	09 95       	icall
     9ea:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     9ee:	ff 91       	pop	r31
     9f0:	ef 91       	pop	r30
     9f2:	bf 91       	pop	r27
     9f4:	af 91       	pop	r26
     9f6:	9f 91       	pop	r25
     9f8:	8f 91       	pop	r24
     9fa:	7f 91       	pop	r23
     9fc:	6f 91       	pop	r22
     9fe:	5f 91       	pop	r21
     a00:	4f 91       	pop	r20
     a02:	3f 91       	pop	r19
     a04:	2f 91       	pop	r18
     a06:	0f 90       	pop	r0
     a08:	0f be       	out	0x3f, r0	; 63
     a0a:	0f 90       	pop	r0
     a0c:	1f 90       	pop	r1
     a0e:	18 95       	reti

00000a10 <__vector_5>:
     a10:	1f 92       	push	r1
     a12:	0f 92       	push	r0
     a14:	0f b6       	in	r0, 0x3f	; 63
     a16:	0f 92       	push	r0
     a18:	11 24       	eor	r1, r1
     a1a:	2f 93       	push	r18
     a1c:	3f 93       	push	r19
     a1e:	4f 93       	push	r20
     a20:	5f 93       	push	r21
     a22:	6f 93       	push	r22
     a24:	7f 93       	push	r23
     a26:	8f 93       	push	r24
     a28:	9f 93       	push	r25
     a2a:	af 93       	push	r26
     a2c:	bf 93       	push	r27
     a2e:	ef 93       	push	r30
     a30:	ff 93       	push	r31
     a32:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     a36:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     a3a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     a3e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     a42:	c9 01       	movw	r24, r18
     a44:	03 2e       	mov	r0, r19
     a46:	00 0c       	add	r0, r0
     a48:	aa 0b       	sbc	r26, r26
     a4a:	bb 0b       	sbc	r27, r27
     a4c:	dc 01       	movw	r26, r24
     a4e:	99 27       	eor	r25, r25
     a50:	88 27       	eor	r24, r24
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	84 2b       	or	r24, r20
     a58:	95 2b       	or	r25, r21
     a5a:	a6 2b       	or	r26, r22
     a5c:	b7 2b       	or	r27, r23
     a5e:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     a62:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     a66:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     a6a:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     a6e:	b0 9b       	sbis	0x16, 0	; 22
     a70:	1b c0       	rjmp	.+54     	; 0xaa8 <__vector_5+0x98>
     a72:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     a76:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     a7a:	c9 01       	movw	r24, r18
     a7c:	01 96       	adiw	r24, 0x01	; 1
     a7e:	09 2e       	mov	r0, r25
     a80:	00 0c       	add	r0, r0
     a82:	aa 0b       	sbc	r26, r26
     a84:	bb 0b       	sbc	r27, r27
     a86:	dc 01       	movw	r26, r24
     a88:	99 27       	eor	r25, r25
     a8a:	88 27       	eor	r24, r24
     a8c:	60 e0       	ldi	r22, 0x00	; 0
     a8e:	70 e0       	ldi	r23, 0x00	; 0
     a90:	84 2b       	or	r24, r20
     a92:	95 2b       	or	r25, r21
     a94:	a6 2b       	or	r26, r22
     a96:	b7 2b       	or	r27, r23
     a98:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     a9c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     aa0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     aa4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     aa8:	e0 91 36 02 	lds	r30, 0x0236	; 0x800236 <mtable+0x8>
     aac:	f0 91 37 02 	lds	r31, 0x0237	; 0x800237 <mtable+0x9>
     ab0:	30 97       	sbiw	r30, 0x00	; 0
     ab2:	39 f0       	breq	.+14     	; 0xac2 <__vector_5+0xb2>
     ab4:	64 e0       	ldi	r22, 0x04	; 4
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <otable+0x8>
     abc:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <otable+0x9>
     ac0:	09 95       	icall
     ac2:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     ac6:	ff 91       	pop	r31
     ac8:	ef 91       	pop	r30
     aca:	bf 91       	pop	r27
     acc:	af 91       	pop	r26
     ace:	9f 91       	pop	r25
     ad0:	8f 91       	pop	r24
     ad2:	7f 91       	pop	r23
     ad4:	6f 91       	pop	r22
     ad6:	5f 91       	pop	r21
     ad8:	4f 91       	pop	r20
     ada:	3f 91       	pop	r19
     adc:	2f 91       	pop	r18
     ade:	0f 90       	pop	r0
     ae0:	0f be       	out	0x3f, r0	; 63
     ae2:	0f 90       	pop	r0
     ae4:	1f 90       	pop	r1
     ae6:	18 95       	reti

00000ae8 <__vector_10>:
     ae8:	1f 92       	push	r1
     aea:	0f 92       	push	r0
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	0f 92       	push	r0
     af0:	11 24       	eor	r1, r1
     af2:	2f 93       	push	r18
     af4:	3f 93       	push	r19
     af6:	4f 93       	push	r20
     af8:	5f 93       	push	r21
     afa:	6f 93       	push	r22
     afc:	7f 93       	push	r23
     afe:	8f 93       	push	r24
     b00:	9f 93       	push	r25
     b02:	af 93       	push	r26
     b04:	bf 93       	push	r27
     b06:	ef 93       	push	r30
     b08:	ff 93       	push	r31
     b0a:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     b0e:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     b12:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     b16:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     b1a:	c9 01       	movw	r24, r18
     b1c:	03 2e       	mov	r0, r19
     b1e:	00 0c       	add	r0, r0
     b20:	aa 0b       	sbc	r26, r26
     b22:	bb 0b       	sbc	r27, r27
     b24:	dc 01       	movw	r26, r24
     b26:	99 27       	eor	r25, r25
     b28:	88 27       	eor	r24, r24
     b2a:	60 e0       	ldi	r22, 0x00	; 0
     b2c:	70 e0       	ldi	r23, 0x00	; 0
     b2e:	84 2b       	or	r24, r20
     b30:	95 2b       	or	r25, r21
     b32:	a6 2b       	or	r26, r22
     b34:	b7 2b       	or	r27, r23
     b36:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     b3a:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     b3e:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     b42:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     b46:	b0 9b       	sbis	0x16, 0	; 22
     b48:	1b c0       	rjmp	.+54     	; 0xb80 <__vector_10+0x98>
     b4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     b4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     b52:	c9 01       	movw	r24, r18
     b54:	01 96       	adiw	r24, 0x01	; 1
     b56:	09 2e       	mov	r0, r25
     b58:	00 0c       	add	r0, r0
     b5a:	aa 0b       	sbc	r26, r26
     b5c:	bb 0b       	sbc	r27, r27
     b5e:	dc 01       	movw	r26, r24
     b60:	99 27       	eor	r25, r25
     b62:	88 27       	eor	r24, r24
     b64:	60 e0       	ldi	r22, 0x00	; 0
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	84 2b       	or	r24, r20
     b6a:	95 2b       	or	r25, r21
     b6c:	a6 2b       	or	r26, r22
     b6e:	b7 2b       	or	r27, r23
     b70:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     b74:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     b78:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     b7c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     b80:	e0 91 38 02 	lds	r30, 0x0238	; 0x800238 <mtable+0xa>
     b84:	f0 91 39 02 	lds	r31, 0x0239	; 0x800239 <mtable+0xb>
     b88:	30 97       	sbiw	r30, 0x00	; 0
     b8a:	39 f0       	breq	.+14     	; 0xb9a <__vector_10+0xb2>
     b8c:	65 e0       	ldi	r22, 0x05	; 5
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <otable+0xa>
     b94:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <otable+0xb>
     b98:	09 95       	icall
     b9a:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     b9e:	ff 91       	pop	r31
     ba0:	ef 91       	pop	r30
     ba2:	bf 91       	pop	r27
     ba4:	af 91       	pop	r26
     ba6:	9f 91       	pop	r25
     ba8:	8f 91       	pop	r24
     baa:	7f 91       	pop	r23
     bac:	6f 91       	pop	r22
     bae:	5f 91       	pop	r21
     bb0:	4f 91       	pop	r20
     bb2:	3f 91       	pop	r19
     bb4:	2f 91       	pop	r18
     bb6:	0f 90       	pop	r0
     bb8:	0f be       	out	0x3f, r0	; 63
     bba:	0f 90       	pop	r0
     bbc:	1f 90       	pop	r1
     bbe:	18 95       	reti

00000bc0 <__vector_11>:
     bc0:	1f 92       	push	r1
     bc2:	0f 92       	push	r0
     bc4:	0f b6       	in	r0, 0x3f	; 63
     bc6:	0f 92       	push	r0
     bc8:	11 24       	eor	r1, r1
     bca:	2f 93       	push	r18
     bcc:	3f 93       	push	r19
     bce:	4f 93       	push	r20
     bd0:	5f 93       	push	r21
     bd2:	6f 93       	push	r22
     bd4:	7f 93       	push	r23
     bd6:	8f 93       	push	r24
     bd8:	9f 93       	push	r25
     bda:	af 93       	push	r26
     bdc:	bf 93       	push	r27
     bde:	ef 93       	push	r30
     be0:	ff 93       	push	r31
     be2:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     be6:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     bea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     bee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     bf2:	c9 01       	movw	r24, r18
     bf4:	03 2e       	mov	r0, r19
     bf6:	00 0c       	add	r0, r0
     bf8:	aa 0b       	sbc	r26, r26
     bfa:	bb 0b       	sbc	r27, r27
     bfc:	dc 01       	movw	r26, r24
     bfe:	99 27       	eor	r25, r25
     c00:	88 27       	eor	r24, r24
     c02:	60 e0       	ldi	r22, 0x00	; 0
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	84 2b       	or	r24, r20
     c08:	95 2b       	or	r25, r21
     c0a:	a6 2b       	or	r26, r22
     c0c:	b7 2b       	or	r27, r23
     c0e:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     c12:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     c16:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     c1a:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     c1e:	b0 9b       	sbis	0x16, 0	; 22
     c20:	1b c0       	rjmp	.+54     	; 0xc58 <__vector_11+0x98>
     c22:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     c26:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     c2a:	c9 01       	movw	r24, r18
     c2c:	01 96       	adiw	r24, 0x01	; 1
     c2e:	09 2e       	mov	r0, r25
     c30:	00 0c       	add	r0, r0
     c32:	aa 0b       	sbc	r26, r26
     c34:	bb 0b       	sbc	r27, r27
     c36:	dc 01       	movw	r26, r24
     c38:	99 27       	eor	r25, r25
     c3a:	88 27       	eor	r24, r24
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	84 2b       	or	r24, r20
     c42:	95 2b       	or	r25, r21
     c44:	a6 2b       	or	r26, r22
     c46:	b7 2b       	or	r27, r23
     c48:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     c4c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     c50:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     c54:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     c58:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <mtable+0xc>
     c5c:	f0 91 3b 02 	lds	r31, 0x023B	; 0x80023b <mtable+0xd>
     c60:	30 97       	sbiw	r30, 0x00	; 0
     c62:	39 f0       	breq	.+14     	; 0xc72 <__vector_11+0xb2>
     c64:	66 e0       	ldi	r22, 0x06	; 6
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <otable+0xc>
     c6c:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <otable+0xd>
     c70:	09 95       	icall
     c72:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     c76:	ff 91       	pop	r31
     c78:	ef 91       	pop	r30
     c7a:	bf 91       	pop	r27
     c7c:	af 91       	pop	r26
     c7e:	9f 91       	pop	r25
     c80:	8f 91       	pop	r24
     c82:	7f 91       	pop	r23
     c84:	6f 91       	pop	r22
     c86:	5f 91       	pop	r21
     c88:	4f 91       	pop	r20
     c8a:	3f 91       	pop	r19
     c8c:	2f 91       	pop	r18
     c8e:	0f 90       	pop	r0
     c90:	0f be       	out	0x3f, r0	; 63
     c92:	0f 90       	pop	r0
     c94:	1f 90       	pop	r1
     c96:	18 95       	reti

00000c98 <__vector_12>:
     c98:	1f 92       	push	r1
     c9a:	0f 92       	push	r0
     c9c:	0f b6       	in	r0, 0x3f	; 63
     c9e:	0f 92       	push	r0
     ca0:	11 24       	eor	r1, r1
     ca2:	2f 93       	push	r18
     ca4:	3f 93       	push	r19
     ca6:	4f 93       	push	r20
     ca8:	5f 93       	push	r21
     caa:	6f 93       	push	r22
     cac:	7f 93       	push	r23
     cae:	8f 93       	push	r24
     cb0:	9f 93       	push	r25
     cb2:	af 93       	push	r26
     cb4:	bf 93       	push	r27
     cb6:	ef 93       	push	r30
     cb8:	ff 93       	push	r31
     cba:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     cbe:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     cc2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     cc6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     cca:	c9 01       	movw	r24, r18
     ccc:	03 2e       	mov	r0, r19
     cce:	00 0c       	add	r0, r0
     cd0:	aa 0b       	sbc	r26, r26
     cd2:	bb 0b       	sbc	r27, r27
     cd4:	dc 01       	movw	r26, r24
     cd6:	99 27       	eor	r25, r25
     cd8:	88 27       	eor	r24, r24
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	70 e0       	ldi	r23, 0x00	; 0
     cde:	84 2b       	or	r24, r20
     ce0:	95 2b       	or	r25, r21
     ce2:	a6 2b       	or	r26, r22
     ce4:	b7 2b       	or	r27, r23
     ce6:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     cea:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     cee:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     cf2:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     cf6:	b0 9b       	sbis	0x16, 0	; 22
     cf8:	1b c0       	rjmp	.+54     	; 0xd30 <__vector_12+0x98>
     cfa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     cfe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d02:	c9 01       	movw	r24, r18
     d04:	01 96       	adiw	r24, 0x01	; 1
     d06:	09 2e       	mov	r0, r25
     d08:	00 0c       	add	r0, r0
     d0a:	aa 0b       	sbc	r26, r26
     d0c:	bb 0b       	sbc	r27, r27
     d0e:	dc 01       	movw	r26, r24
     d10:	99 27       	eor	r25, r25
     d12:	88 27       	eor	r24, r24
     d14:	60 e0       	ldi	r22, 0x00	; 0
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	84 2b       	or	r24, r20
     d1a:	95 2b       	or	r25, r21
     d1c:	a6 2b       	or	r26, r22
     d1e:	b7 2b       	or	r27, r23
     d20:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     d24:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     d28:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     d2c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     d30:	e0 91 3c 02 	lds	r30, 0x023C	; 0x80023c <mtable+0xe>
     d34:	f0 91 3d 02 	lds	r31, 0x023D	; 0x80023d <mtable+0xf>
     d38:	30 97       	sbiw	r30, 0x00	; 0
     d3a:	39 f0       	breq	.+14     	; 0xd4a <__vector_12+0xb2>
     d3c:	67 e0       	ldi	r22, 0x07	; 7
     d3e:	70 e0       	ldi	r23, 0x00	; 0
     d40:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <otable+0xe>
     d44:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <otable+0xf>
     d48:	09 95       	icall
     d4a:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     d4e:	ff 91       	pop	r31
     d50:	ef 91       	pop	r30
     d52:	bf 91       	pop	r27
     d54:	af 91       	pop	r26
     d56:	9f 91       	pop	r25
     d58:	8f 91       	pop	r24
     d5a:	7f 91       	pop	r23
     d5c:	6f 91       	pop	r22
     d5e:	5f 91       	pop	r21
     d60:	4f 91       	pop	r20
     d62:	3f 91       	pop	r19
     d64:	2f 91       	pop	r18
     d66:	0f 90       	pop	r0
     d68:	0f be       	out	0x3f, r0	; 63
     d6a:	0f 90       	pop	r0
     d6c:	1f 90       	pop	r1
     d6e:	18 95       	reti

00000d70 <__vector_13>:
     d70:	1f 92       	push	r1
     d72:	0f 92       	push	r0
     d74:	0f b6       	in	r0, 0x3f	; 63
     d76:	0f 92       	push	r0
     d78:	11 24       	eor	r1, r1
     d7a:	2f 93       	push	r18
     d7c:	3f 93       	push	r19
     d7e:	4f 93       	push	r20
     d80:	5f 93       	push	r21
     d82:	6f 93       	push	r22
     d84:	7f 93       	push	r23
     d86:	8f 93       	push	r24
     d88:	9f 93       	push	r25
     d8a:	af 93       	push	r26
     d8c:	bf 93       	push	r27
     d8e:	ef 93       	push	r30
     d90:	ff 93       	push	r31
     d92:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     d96:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     d9a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d9e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     da2:	c9 01       	movw	r24, r18
     da4:	03 2e       	mov	r0, r19
     da6:	00 0c       	add	r0, r0
     da8:	aa 0b       	sbc	r26, r26
     daa:	bb 0b       	sbc	r27, r27
     dac:	dc 01       	movw	r26, r24
     dae:	99 27       	eor	r25, r25
     db0:	88 27       	eor	r24, r24
     db2:	60 e0       	ldi	r22, 0x00	; 0
     db4:	70 e0       	ldi	r23, 0x00	; 0
     db6:	84 2b       	or	r24, r20
     db8:	95 2b       	or	r25, r21
     dba:	a6 2b       	or	r26, r22
     dbc:	b7 2b       	or	r27, r23
     dbe:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     dc2:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     dc6:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     dca:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     dce:	b0 9b       	sbis	0x16, 0	; 22
     dd0:	1b c0       	rjmp	.+54     	; 0xe08 <__vector_13+0x98>
     dd2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     dd6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     dda:	c9 01       	movw	r24, r18
     ddc:	01 96       	adiw	r24, 0x01	; 1
     dde:	09 2e       	mov	r0, r25
     de0:	00 0c       	add	r0, r0
     de2:	aa 0b       	sbc	r26, r26
     de4:	bb 0b       	sbc	r27, r27
     de6:	dc 01       	movw	r26, r24
     de8:	99 27       	eor	r25, r25
     dea:	88 27       	eor	r24, r24
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	84 2b       	or	r24, r20
     df2:	95 2b       	or	r25, r21
     df4:	a6 2b       	or	r26, r22
     df6:	b7 2b       	or	r27, r23
     df8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     dfc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     e00:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     e04:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     e08:	e0 91 3e 02 	lds	r30, 0x023E	; 0x80023e <mtable+0x10>
     e0c:	f0 91 3f 02 	lds	r31, 0x023F	; 0x80023f <mtable+0x11>
     e10:	30 97       	sbiw	r30, 0x00	; 0
     e12:	39 f0       	breq	.+14     	; 0xe22 <__vector_13+0xb2>
     e14:	68 e0       	ldi	r22, 0x08	; 8
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <otable+0x10>
     e1c:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <otable+0x11>
     e20:	09 95       	icall
     e22:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     e26:	ff 91       	pop	r31
     e28:	ef 91       	pop	r30
     e2a:	bf 91       	pop	r27
     e2c:	af 91       	pop	r26
     e2e:	9f 91       	pop	r25
     e30:	8f 91       	pop	r24
     e32:	7f 91       	pop	r23
     e34:	6f 91       	pop	r22
     e36:	5f 91       	pop	r21
     e38:	4f 91       	pop	r20
     e3a:	3f 91       	pop	r19
     e3c:	2f 91       	pop	r18
     e3e:	0f 90       	pop	r0
     e40:	0f be       	out	0x3f, r0	; 63
     e42:	0f 90       	pop	r0
     e44:	1f 90       	pop	r1
     e46:	18 95       	reti

00000e48 <__vector_14>:
     e48:	1f 92       	push	r1
     e4a:	0f 92       	push	r0
     e4c:	0f b6       	in	r0, 0x3f	; 63
     e4e:	0f 92       	push	r0
     e50:	11 24       	eor	r1, r1
     e52:	2f 93       	push	r18
     e54:	3f 93       	push	r19
     e56:	4f 93       	push	r20
     e58:	5f 93       	push	r21
     e5a:	6f 93       	push	r22
     e5c:	7f 93       	push	r23
     e5e:	8f 93       	push	r24
     e60:	9f 93       	push	r25
     e62:	af 93       	push	r26
     e64:	bf 93       	push	r27
     e66:	ef 93       	push	r30
     e68:	ff 93       	push	r31
     e6a:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     e6e:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     e72:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     e76:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     e7a:	c9 01       	movw	r24, r18
     e7c:	03 2e       	mov	r0, r19
     e7e:	00 0c       	add	r0, r0
     e80:	aa 0b       	sbc	r26, r26
     e82:	bb 0b       	sbc	r27, r27
     e84:	dc 01       	movw	r26, r24
     e86:	99 27       	eor	r25, r25
     e88:	88 27       	eor	r24, r24
     e8a:	60 e0       	ldi	r22, 0x00	; 0
     e8c:	70 e0       	ldi	r23, 0x00	; 0
     e8e:	84 2b       	or	r24, r20
     e90:	95 2b       	or	r25, r21
     e92:	a6 2b       	or	r26, r22
     e94:	b7 2b       	or	r27, r23
     e96:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     e9a:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     e9e:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     ea2:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     ea6:	b0 9b       	sbis	0x16, 0	; 22
     ea8:	1b c0       	rjmp	.+54     	; 0xee0 <__vector_14+0x98>
     eaa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     eae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     eb2:	c9 01       	movw	r24, r18
     eb4:	01 96       	adiw	r24, 0x01	; 1
     eb6:	09 2e       	mov	r0, r25
     eb8:	00 0c       	add	r0, r0
     eba:	aa 0b       	sbc	r26, r26
     ebc:	bb 0b       	sbc	r27, r27
     ebe:	dc 01       	movw	r26, r24
     ec0:	99 27       	eor	r25, r25
     ec2:	88 27       	eor	r24, r24
     ec4:	60 e0       	ldi	r22, 0x00	; 0
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	84 2b       	or	r24, r20
     eca:	95 2b       	or	r25, r21
     ecc:	a6 2b       	or	r26, r22
     ece:	b7 2b       	or	r27, r23
     ed0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     ed4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     ed8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     edc:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     ee0:	e0 91 40 02 	lds	r30, 0x0240	; 0x800240 <mtable+0x12>
     ee4:	f0 91 41 02 	lds	r31, 0x0241	; 0x800241 <mtable+0x13>
     ee8:	30 97       	sbiw	r30, 0x00	; 0
     eea:	39 f0       	breq	.+14     	; 0xefa <__vector_14+0xb2>
     eec:	69 e0       	ldi	r22, 0x09	; 9
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <otable+0x12>
     ef4:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <otable+0x13>
     ef8:	09 95       	icall
     efa:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     efe:	ff 91       	pop	r31
     f00:	ef 91       	pop	r30
     f02:	bf 91       	pop	r27
     f04:	af 91       	pop	r26
     f06:	9f 91       	pop	r25
     f08:	8f 91       	pop	r24
     f0a:	7f 91       	pop	r23
     f0c:	6f 91       	pop	r22
     f0e:	5f 91       	pop	r21
     f10:	4f 91       	pop	r20
     f12:	3f 91       	pop	r19
     f14:	2f 91       	pop	r18
     f16:	0f 90       	pop	r0
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	0f 90       	pop	r0
     f1c:	1f 90       	pop	r1
     f1e:	18 95       	reti

00000f20 <__vector_15>:
     f20:	1f 92       	push	r1
     f22:	0f 92       	push	r0
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	0f 92       	push	r0
     f28:	11 24       	eor	r1, r1
     f2a:	2f 93       	push	r18
     f2c:	3f 93       	push	r19
     f2e:	4f 93       	push	r20
     f30:	5f 93       	push	r21
     f32:	6f 93       	push	r22
     f34:	7f 93       	push	r23
     f36:	8f 93       	push	r24
     f38:	9f 93       	push	r25
     f3a:	af 93       	push	r26
     f3c:	bf 93       	push	r27
     f3e:	ef 93       	push	r30
     f40:	ff 93       	push	r31
     f42:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     f46:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     f4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     f4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     f52:	c9 01       	movw	r24, r18
     f54:	03 2e       	mov	r0, r19
     f56:	00 0c       	add	r0, r0
     f58:	aa 0b       	sbc	r26, r26
     f5a:	bb 0b       	sbc	r27, r27
     f5c:	dc 01       	movw	r26, r24
     f5e:	99 27       	eor	r25, r25
     f60:	88 27       	eor	r24, r24
     f62:	60 e0       	ldi	r22, 0x00	; 0
     f64:	70 e0       	ldi	r23, 0x00	; 0
     f66:	84 2b       	or	r24, r20
     f68:	95 2b       	or	r25, r21
     f6a:	a6 2b       	or	r26, r22
     f6c:	b7 2b       	or	r27, r23
     f6e:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     f72:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     f76:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     f7a:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     f7e:	b0 9b       	sbis	0x16, 0	; 22
     f80:	1b c0       	rjmp	.+54     	; 0xfb8 <__vector_15+0x98>
     f82:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     f86:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     f8a:	c9 01       	movw	r24, r18
     f8c:	01 96       	adiw	r24, 0x01	; 1
     f8e:	09 2e       	mov	r0, r25
     f90:	00 0c       	add	r0, r0
     f92:	aa 0b       	sbc	r26, r26
     f94:	bb 0b       	sbc	r27, r27
     f96:	dc 01       	movw	r26, r24
     f98:	99 27       	eor	r25, r25
     f9a:	88 27       	eor	r24, r24
     f9c:	60 e0       	ldi	r22, 0x00	; 0
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	84 2b       	or	r24, r20
     fa2:	95 2b       	or	r25, r21
     fa4:	a6 2b       	or	r26, r22
     fa6:	b7 2b       	or	r27, r23
     fa8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     fac:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     fb0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     fb4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     fb8:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <mtable+0x14>
     fbc:	f0 91 43 02 	lds	r31, 0x0243	; 0x800243 <mtable+0x15>
     fc0:	30 97       	sbiw	r30, 0x00	; 0
     fc2:	39 f0       	breq	.+14     	; 0xfd2 <__vector_15+0xb2>
     fc4:	6a e0       	ldi	r22, 0x0A	; 10
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <otable+0x14>
     fcc:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <otable+0x15>
     fd0:	09 95       	icall
     fd2:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
     fd6:	ff 91       	pop	r31
     fd8:	ef 91       	pop	r30
     fda:	bf 91       	pop	r27
     fdc:	af 91       	pop	r26
     fde:	9f 91       	pop	r25
     fe0:	8f 91       	pop	r24
     fe2:	7f 91       	pop	r23
     fe4:	6f 91       	pop	r22
     fe6:	5f 91       	pop	r21
     fe8:	4f 91       	pop	r20
     fea:	3f 91       	pop	r19
     fec:	2f 91       	pop	r18
     fee:	0f 90       	pop	r0
     ff0:	0f be       	out	0x3f, r0	; 63
     ff2:	0f 90       	pop	r0
     ff4:	1f 90       	pop	r1
     ff6:	18 95       	reti

00000ff8 <__vector_16>:
     ff8:	1f 92       	push	r1
     ffa:	0f 92       	push	r0
     ffc:	0f b6       	in	r0, 0x3f	; 63
     ffe:	0f 92       	push	r0
    1000:	11 24       	eor	r1, r1
    1002:	2f 93       	push	r18
    1004:	3f 93       	push	r19
    1006:	4f 93       	push	r20
    1008:	5f 93       	push	r21
    100a:	6f 93       	push	r22
    100c:	7f 93       	push	r23
    100e:	8f 93       	push	r24
    1010:	9f 93       	push	r25
    1012:	af 93       	push	r26
    1014:	bf 93       	push	r27
    1016:	ef 93       	push	r30
    1018:	ff 93       	push	r31
    101a:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    101e:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1022:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1026:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    102a:	c9 01       	movw	r24, r18
    102c:	03 2e       	mov	r0, r19
    102e:	00 0c       	add	r0, r0
    1030:	aa 0b       	sbc	r26, r26
    1032:	bb 0b       	sbc	r27, r27
    1034:	dc 01       	movw	r26, r24
    1036:	99 27       	eor	r25, r25
    1038:	88 27       	eor	r24, r24
    103a:	60 e0       	ldi	r22, 0x00	; 0
    103c:	70 e0       	ldi	r23, 0x00	; 0
    103e:	84 2b       	or	r24, r20
    1040:	95 2b       	or	r25, r21
    1042:	a6 2b       	or	r26, r22
    1044:	b7 2b       	or	r27, r23
    1046:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    104a:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    104e:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1052:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1056:	b0 9b       	sbis	0x16, 0	; 22
    1058:	1b c0       	rjmp	.+54     	; 0x1090 <__vector_16+0x98>
    105a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    105e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1062:	c9 01       	movw	r24, r18
    1064:	01 96       	adiw	r24, 0x01	; 1
    1066:	09 2e       	mov	r0, r25
    1068:	00 0c       	add	r0, r0
    106a:	aa 0b       	sbc	r26, r26
    106c:	bb 0b       	sbc	r27, r27
    106e:	dc 01       	movw	r26, r24
    1070:	99 27       	eor	r25, r25
    1072:	88 27       	eor	r24, r24
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	84 2b       	or	r24, r20
    107a:	95 2b       	or	r25, r21
    107c:	a6 2b       	or	r26, r22
    107e:	b7 2b       	or	r27, r23
    1080:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1084:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1088:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    108c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1090:	e0 91 44 02 	lds	r30, 0x0244	; 0x800244 <mtable+0x16>
    1094:	f0 91 45 02 	lds	r31, 0x0245	; 0x800245 <mtable+0x17>
    1098:	30 97       	sbiw	r30, 0x00	; 0
    109a:	39 f0       	breq	.+14     	; 0x10aa <__vector_16+0xb2>
    109c:	6b e0       	ldi	r22, 0x0B	; 11
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <otable+0x16>
    10a4:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <otable+0x17>
    10a8:	09 95       	icall
    10aa:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    10ae:	ff 91       	pop	r31
    10b0:	ef 91       	pop	r30
    10b2:	bf 91       	pop	r27
    10b4:	af 91       	pop	r26
    10b6:	9f 91       	pop	r25
    10b8:	8f 91       	pop	r24
    10ba:	7f 91       	pop	r23
    10bc:	6f 91       	pop	r22
    10be:	5f 91       	pop	r21
    10c0:	4f 91       	pop	r20
    10c2:	3f 91       	pop	r19
    10c4:	2f 91       	pop	r18
    10c6:	0f 90       	pop	r0
    10c8:	0f be       	out	0x3f, r0	; 63
    10ca:	0f 90       	pop	r0
    10cc:	1f 90       	pop	r1
    10ce:	18 95       	reti

000010d0 <__vector_17>:
    10d0:	1f 92       	push	r1
    10d2:	0f 92       	push	r0
    10d4:	0f b6       	in	r0, 0x3f	; 63
    10d6:	0f 92       	push	r0
    10d8:	11 24       	eor	r1, r1
    10da:	2f 93       	push	r18
    10dc:	3f 93       	push	r19
    10de:	4f 93       	push	r20
    10e0:	5f 93       	push	r21
    10e2:	6f 93       	push	r22
    10e4:	7f 93       	push	r23
    10e6:	8f 93       	push	r24
    10e8:	9f 93       	push	r25
    10ea:	af 93       	push	r26
    10ec:	bf 93       	push	r27
    10ee:	ef 93       	push	r30
    10f0:	ff 93       	push	r31
    10f2:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    10f6:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    10fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    10fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1102:	c9 01       	movw	r24, r18
    1104:	03 2e       	mov	r0, r19
    1106:	00 0c       	add	r0, r0
    1108:	aa 0b       	sbc	r26, r26
    110a:	bb 0b       	sbc	r27, r27
    110c:	dc 01       	movw	r26, r24
    110e:	99 27       	eor	r25, r25
    1110:	88 27       	eor	r24, r24
    1112:	60 e0       	ldi	r22, 0x00	; 0
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	84 2b       	or	r24, r20
    1118:	95 2b       	or	r25, r21
    111a:	a6 2b       	or	r26, r22
    111c:	b7 2b       	or	r27, r23
    111e:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1122:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1126:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    112a:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    112e:	b0 9b       	sbis	0x16, 0	; 22
    1130:	1b c0       	rjmp	.+54     	; 0x1168 <__vector_17+0x98>
    1132:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1136:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    113a:	c9 01       	movw	r24, r18
    113c:	01 96       	adiw	r24, 0x01	; 1
    113e:	09 2e       	mov	r0, r25
    1140:	00 0c       	add	r0, r0
    1142:	aa 0b       	sbc	r26, r26
    1144:	bb 0b       	sbc	r27, r27
    1146:	dc 01       	movw	r26, r24
    1148:	99 27       	eor	r25, r25
    114a:	88 27       	eor	r24, r24
    114c:	60 e0       	ldi	r22, 0x00	; 0
    114e:	70 e0       	ldi	r23, 0x00	; 0
    1150:	84 2b       	or	r24, r20
    1152:	95 2b       	or	r25, r21
    1154:	a6 2b       	or	r26, r22
    1156:	b7 2b       	or	r27, r23
    1158:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    115c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1160:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1164:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1168:	e0 91 46 02 	lds	r30, 0x0246	; 0x800246 <mtable+0x18>
    116c:	f0 91 47 02 	lds	r31, 0x0247	; 0x800247 <mtable+0x19>
    1170:	30 97       	sbiw	r30, 0x00	; 0
    1172:	39 f0       	breq	.+14     	; 0x1182 <__vector_17+0xb2>
    1174:	6c e0       	ldi	r22, 0x0C	; 12
    1176:	70 e0       	ldi	r23, 0x00	; 0
    1178:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <otable+0x18>
    117c:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <otable+0x19>
    1180:	09 95       	icall
    1182:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    1186:	ff 91       	pop	r31
    1188:	ef 91       	pop	r30
    118a:	bf 91       	pop	r27
    118c:	af 91       	pop	r26
    118e:	9f 91       	pop	r25
    1190:	8f 91       	pop	r24
    1192:	7f 91       	pop	r23
    1194:	6f 91       	pop	r22
    1196:	5f 91       	pop	r21
    1198:	4f 91       	pop	r20
    119a:	3f 91       	pop	r19
    119c:	2f 91       	pop	r18
    119e:	0f 90       	pop	r0
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	0f 90       	pop	r0
    11a4:	1f 90       	pop	r1
    11a6:	18 95       	reti

000011a8 <__vector_18>:
    11a8:	1f 92       	push	r1
    11aa:	0f 92       	push	r0
    11ac:	0f b6       	in	r0, 0x3f	; 63
    11ae:	0f 92       	push	r0
    11b0:	11 24       	eor	r1, r1
    11b2:	2f 93       	push	r18
    11b4:	3f 93       	push	r19
    11b6:	4f 93       	push	r20
    11b8:	5f 93       	push	r21
    11ba:	6f 93       	push	r22
    11bc:	7f 93       	push	r23
    11be:	8f 93       	push	r24
    11c0:	9f 93       	push	r25
    11c2:	af 93       	push	r26
    11c4:	bf 93       	push	r27
    11c6:	ef 93       	push	r30
    11c8:	ff 93       	push	r31
    11ca:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    11ce:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    11d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    11d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    11da:	c9 01       	movw	r24, r18
    11dc:	03 2e       	mov	r0, r19
    11de:	00 0c       	add	r0, r0
    11e0:	aa 0b       	sbc	r26, r26
    11e2:	bb 0b       	sbc	r27, r27
    11e4:	dc 01       	movw	r26, r24
    11e6:	99 27       	eor	r25, r25
    11e8:	88 27       	eor	r24, r24
    11ea:	60 e0       	ldi	r22, 0x00	; 0
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	84 2b       	or	r24, r20
    11f0:	95 2b       	or	r25, r21
    11f2:	a6 2b       	or	r26, r22
    11f4:	b7 2b       	or	r27, r23
    11f6:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    11fa:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    11fe:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1202:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1206:	b0 9b       	sbis	0x16, 0	; 22
    1208:	1b c0       	rjmp	.+54     	; 0x1240 <__vector_18+0x98>
    120a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    120e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1212:	c9 01       	movw	r24, r18
    1214:	01 96       	adiw	r24, 0x01	; 1
    1216:	09 2e       	mov	r0, r25
    1218:	00 0c       	add	r0, r0
    121a:	aa 0b       	sbc	r26, r26
    121c:	bb 0b       	sbc	r27, r27
    121e:	dc 01       	movw	r26, r24
    1220:	99 27       	eor	r25, r25
    1222:	88 27       	eor	r24, r24
    1224:	60 e0       	ldi	r22, 0x00	; 0
    1226:	70 e0       	ldi	r23, 0x00	; 0
    1228:	84 2b       	or	r24, r20
    122a:	95 2b       	or	r25, r21
    122c:	a6 2b       	or	r26, r22
    122e:	b7 2b       	or	r27, r23
    1230:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1234:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1238:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    123c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1240:	e0 91 48 02 	lds	r30, 0x0248	; 0x800248 <mtable+0x1a>
    1244:	f0 91 49 02 	lds	r31, 0x0249	; 0x800249 <mtable+0x1b>
    1248:	30 97       	sbiw	r30, 0x00	; 0
    124a:	39 f0       	breq	.+14     	; 0x125a <__vector_18+0xb2>
    124c:	6d e0       	ldi	r22, 0x0D	; 13
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <otable+0x1a>
    1254:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <otable+0x1b>
    1258:	09 95       	icall
    125a:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    125e:	ff 91       	pop	r31
    1260:	ef 91       	pop	r30
    1262:	bf 91       	pop	r27
    1264:	af 91       	pop	r26
    1266:	9f 91       	pop	r25
    1268:	8f 91       	pop	r24
    126a:	7f 91       	pop	r23
    126c:	6f 91       	pop	r22
    126e:	5f 91       	pop	r21
    1270:	4f 91       	pop	r20
    1272:	3f 91       	pop	r19
    1274:	2f 91       	pop	r18
    1276:	0f 90       	pop	r0
    1278:	0f be       	out	0x3f, r0	; 63
    127a:	0f 90       	pop	r0
    127c:	1f 90       	pop	r1
    127e:	18 95       	reti

00001280 <__vector_19>:
    1280:	1f 92       	push	r1
    1282:	0f 92       	push	r0
    1284:	0f b6       	in	r0, 0x3f	; 63
    1286:	0f 92       	push	r0
    1288:	11 24       	eor	r1, r1
    128a:	2f 93       	push	r18
    128c:	3f 93       	push	r19
    128e:	4f 93       	push	r20
    1290:	5f 93       	push	r21
    1292:	6f 93       	push	r22
    1294:	7f 93       	push	r23
    1296:	8f 93       	push	r24
    1298:	9f 93       	push	r25
    129a:	af 93       	push	r26
    129c:	bf 93       	push	r27
    129e:	ef 93       	push	r30
    12a0:	ff 93       	push	r31
    12a2:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    12a6:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    12aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    12ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    12b2:	c9 01       	movw	r24, r18
    12b4:	03 2e       	mov	r0, r19
    12b6:	00 0c       	add	r0, r0
    12b8:	aa 0b       	sbc	r26, r26
    12ba:	bb 0b       	sbc	r27, r27
    12bc:	dc 01       	movw	r26, r24
    12be:	99 27       	eor	r25, r25
    12c0:	88 27       	eor	r24, r24
    12c2:	60 e0       	ldi	r22, 0x00	; 0
    12c4:	70 e0       	ldi	r23, 0x00	; 0
    12c6:	84 2b       	or	r24, r20
    12c8:	95 2b       	or	r25, r21
    12ca:	a6 2b       	or	r26, r22
    12cc:	b7 2b       	or	r27, r23
    12ce:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    12d2:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    12d6:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    12da:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    12de:	b0 9b       	sbis	0x16, 0	; 22
    12e0:	1b c0       	rjmp	.+54     	; 0x1318 <__vector_19+0x98>
    12e2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    12e6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    12ea:	c9 01       	movw	r24, r18
    12ec:	01 96       	adiw	r24, 0x01	; 1
    12ee:	09 2e       	mov	r0, r25
    12f0:	00 0c       	add	r0, r0
    12f2:	aa 0b       	sbc	r26, r26
    12f4:	bb 0b       	sbc	r27, r27
    12f6:	dc 01       	movw	r26, r24
    12f8:	99 27       	eor	r25, r25
    12fa:	88 27       	eor	r24, r24
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	84 2b       	or	r24, r20
    1302:	95 2b       	or	r25, r21
    1304:	a6 2b       	or	r26, r22
    1306:	b7 2b       	or	r27, r23
    1308:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    130c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1310:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1314:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1318:	e0 91 4a 02 	lds	r30, 0x024A	; 0x80024a <mtable+0x1c>
    131c:	f0 91 4b 02 	lds	r31, 0x024B	; 0x80024b <mtable+0x1d>
    1320:	30 97       	sbiw	r30, 0x00	; 0
    1322:	39 f0       	breq	.+14     	; 0x1332 <__vector_19+0xb2>
    1324:	6e e0       	ldi	r22, 0x0E	; 14
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <otable+0x1c>
    132c:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <otable+0x1d>
    1330:	09 95       	icall
    1332:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    1336:	ff 91       	pop	r31
    1338:	ef 91       	pop	r30
    133a:	bf 91       	pop	r27
    133c:	af 91       	pop	r26
    133e:	9f 91       	pop	r25
    1340:	8f 91       	pop	r24
    1342:	7f 91       	pop	r23
    1344:	6f 91       	pop	r22
    1346:	5f 91       	pop	r21
    1348:	4f 91       	pop	r20
    134a:	3f 91       	pop	r19
    134c:	2f 91       	pop	r18
    134e:	0f 90       	pop	r0
    1350:	0f be       	out	0x3f, r0	; 63
    1352:	0f 90       	pop	r0
    1354:	1f 90       	pop	r1
    1356:	18 95       	reti

00001358 <__vector_20>:
    1358:	1f 92       	push	r1
    135a:	0f 92       	push	r0
    135c:	0f b6       	in	r0, 0x3f	; 63
    135e:	0f 92       	push	r0
    1360:	11 24       	eor	r1, r1
    1362:	2f 93       	push	r18
    1364:	3f 93       	push	r19
    1366:	4f 93       	push	r20
    1368:	5f 93       	push	r21
    136a:	6f 93       	push	r22
    136c:	7f 93       	push	r23
    136e:	8f 93       	push	r24
    1370:	9f 93       	push	r25
    1372:	af 93       	push	r26
    1374:	bf 93       	push	r27
    1376:	ef 93       	push	r30
    1378:	ff 93       	push	r31
    137a:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    137e:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1382:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1386:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    138a:	c9 01       	movw	r24, r18
    138c:	03 2e       	mov	r0, r19
    138e:	00 0c       	add	r0, r0
    1390:	aa 0b       	sbc	r26, r26
    1392:	bb 0b       	sbc	r27, r27
    1394:	dc 01       	movw	r26, r24
    1396:	99 27       	eor	r25, r25
    1398:	88 27       	eor	r24, r24
    139a:	60 e0       	ldi	r22, 0x00	; 0
    139c:	70 e0       	ldi	r23, 0x00	; 0
    139e:	84 2b       	or	r24, r20
    13a0:	95 2b       	or	r25, r21
    13a2:	a6 2b       	or	r26, r22
    13a4:	b7 2b       	or	r27, r23
    13a6:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    13aa:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    13ae:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    13b2:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    13b6:	b0 9b       	sbis	0x16, 0	; 22
    13b8:	1b c0       	rjmp	.+54     	; 0x13f0 <__vector_20+0x98>
    13ba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    13be:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    13c2:	c9 01       	movw	r24, r18
    13c4:	01 96       	adiw	r24, 0x01	; 1
    13c6:	09 2e       	mov	r0, r25
    13c8:	00 0c       	add	r0, r0
    13ca:	aa 0b       	sbc	r26, r26
    13cc:	bb 0b       	sbc	r27, r27
    13ce:	dc 01       	movw	r26, r24
    13d0:	99 27       	eor	r25, r25
    13d2:	88 27       	eor	r24, r24
    13d4:	60 e0       	ldi	r22, 0x00	; 0
    13d6:	70 e0       	ldi	r23, 0x00	; 0
    13d8:	84 2b       	or	r24, r20
    13da:	95 2b       	or	r25, r21
    13dc:	a6 2b       	or	r26, r22
    13de:	b7 2b       	or	r27, r23
    13e0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    13e4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    13e8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    13ec:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    13f0:	e0 91 4c 02 	lds	r30, 0x024C	; 0x80024c <mtable+0x1e>
    13f4:	f0 91 4d 02 	lds	r31, 0x024D	; 0x80024d <mtable+0x1f>
    13f8:	30 97       	sbiw	r30, 0x00	; 0
    13fa:	39 f0       	breq	.+14     	; 0x140a <__vector_20+0xb2>
    13fc:	6f e0       	ldi	r22, 0x0F	; 15
    13fe:	70 e0       	ldi	r23, 0x00	; 0
    1400:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <otable+0x1e>
    1404:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <otable+0x1f>
    1408:	09 95       	icall
    140a:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    140e:	ff 91       	pop	r31
    1410:	ef 91       	pop	r30
    1412:	bf 91       	pop	r27
    1414:	af 91       	pop	r26
    1416:	9f 91       	pop	r25
    1418:	8f 91       	pop	r24
    141a:	7f 91       	pop	r23
    141c:	6f 91       	pop	r22
    141e:	5f 91       	pop	r21
    1420:	4f 91       	pop	r20
    1422:	3f 91       	pop	r19
    1424:	2f 91       	pop	r18
    1426:	0f 90       	pop	r0
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	0f 90       	pop	r0
    142c:	1f 90       	pop	r1
    142e:	18 95       	reti

00001430 <__vector_21>:
    1430:	1f 92       	push	r1
    1432:	0f 92       	push	r0
    1434:	0f b6       	in	r0, 0x3f	; 63
    1436:	0f 92       	push	r0
    1438:	11 24       	eor	r1, r1
    143a:	2f 93       	push	r18
    143c:	3f 93       	push	r19
    143e:	4f 93       	push	r20
    1440:	5f 93       	push	r21
    1442:	6f 93       	push	r22
    1444:	7f 93       	push	r23
    1446:	8f 93       	push	r24
    1448:	9f 93       	push	r25
    144a:	af 93       	push	r26
    144c:	bf 93       	push	r27
    144e:	ef 93       	push	r30
    1450:	ff 93       	push	r31
    1452:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1456:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    145a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    145e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1462:	c9 01       	movw	r24, r18
    1464:	03 2e       	mov	r0, r19
    1466:	00 0c       	add	r0, r0
    1468:	aa 0b       	sbc	r26, r26
    146a:	bb 0b       	sbc	r27, r27
    146c:	dc 01       	movw	r26, r24
    146e:	99 27       	eor	r25, r25
    1470:	88 27       	eor	r24, r24
    1472:	60 e0       	ldi	r22, 0x00	; 0
    1474:	70 e0       	ldi	r23, 0x00	; 0
    1476:	84 2b       	or	r24, r20
    1478:	95 2b       	or	r25, r21
    147a:	a6 2b       	or	r26, r22
    147c:	b7 2b       	or	r27, r23
    147e:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1482:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1486:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    148a:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    148e:	b0 9b       	sbis	0x16, 0	; 22
    1490:	1b c0       	rjmp	.+54     	; 0x14c8 <__vector_21+0x98>
    1492:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1496:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    149a:	c9 01       	movw	r24, r18
    149c:	01 96       	adiw	r24, 0x01	; 1
    149e:	09 2e       	mov	r0, r25
    14a0:	00 0c       	add	r0, r0
    14a2:	aa 0b       	sbc	r26, r26
    14a4:	bb 0b       	sbc	r27, r27
    14a6:	dc 01       	movw	r26, r24
    14a8:	99 27       	eor	r25, r25
    14aa:	88 27       	eor	r24, r24
    14ac:	60 e0       	ldi	r22, 0x00	; 0
    14ae:	70 e0       	ldi	r23, 0x00	; 0
    14b0:	84 2b       	or	r24, r20
    14b2:	95 2b       	or	r25, r21
    14b4:	a6 2b       	or	r26, r22
    14b6:	b7 2b       	or	r27, r23
    14b8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    14bc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    14c0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    14c4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    14c8:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <mtable+0x20>
    14cc:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <mtable+0x21>
    14d0:	30 97       	sbiw	r30, 0x00	; 0
    14d2:	39 f0       	breq	.+14     	; 0x14e2 <__vector_21+0xb2>
    14d4:	60 e1       	ldi	r22, 0x10	; 16
    14d6:	70 e0       	ldi	r23, 0x00	; 0
    14d8:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <otable+0x20>
    14dc:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <otable+0x21>
    14e0:	09 95       	icall
    14e2:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    14e6:	ff 91       	pop	r31
    14e8:	ef 91       	pop	r30
    14ea:	bf 91       	pop	r27
    14ec:	af 91       	pop	r26
    14ee:	9f 91       	pop	r25
    14f0:	8f 91       	pop	r24
    14f2:	7f 91       	pop	r23
    14f4:	6f 91       	pop	r22
    14f6:	5f 91       	pop	r21
    14f8:	4f 91       	pop	r20
    14fa:	3f 91       	pop	r19
    14fc:	2f 91       	pop	r18
    14fe:	0f 90       	pop	r0
    1500:	0f be       	out	0x3f, r0	; 63
    1502:	0f 90       	pop	r0
    1504:	1f 90       	pop	r1
    1506:	18 95       	reti

00001508 <__vector_22>:
    1508:	1f 92       	push	r1
    150a:	0f 92       	push	r0
    150c:	0f b6       	in	r0, 0x3f	; 63
    150e:	0f 92       	push	r0
    1510:	11 24       	eor	r1, r1
    1512:	2f 93       	push	r18
    1514:	3f 93       	push	r19
    1516:	4f 93       	push	r20
    1518:	5f 93       	push	r21
    151a:	6f 93       	push	r22
    151c:	7f 93       	push	r23
    151e:	8f 93       	push	r24
    1520:	9f 93       	push	r25
    1522:	af 93       	push	r26
    1524:	bf 93       	push	r27
    1526:	ef 93       	push	r30
    1528:	ff 93       	push	r31
    152a:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    152e:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1532:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1536:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    153a:	c9 01       	movw	r24, r18
    153c:	03 2e       	mov	r0, r19
    153e:	00 0c       	add	r0, r0
    1540:	aa 0b       	sbc	r26, r26
    1542:	bb 0b       	sbc	r27, r27
    1544:	dc 01       	movw	r26, r24
    1546:	99 27       	eor	r25, r25
    1548:	88 27       	eor	r24, r24
    154a:	60 e0       	ldi	r22, 0x00	; 0
    154c:	70 e0       	ldi	r23, 0x00	; 0
    154e:	84 2b       	or	r24, r20
    1550:	95 2b       	or	r25, r21
    1552:	a6 2b       	or	r26, r22
    1554:	b7 2b       	or	r27, r23
    1556:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    155a:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    155e:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1562:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1566:	b0 9b       	sbis	0x16, 0	; 22
    1568:	1b c0       	rjmp	.+54     	; 0x15a0 <__vector_22+0x98>
    156a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    156e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1572:	c9 01       	movw	r24, r18
    1574:	01 96       	adiw	r24, 0x01	; 1
    1576:	09 2e       	mov	r0, r25
    1578:	00 0c       	add	r0, r0
    157a:	aa 0b       	sbc	r26, r26
    157c:	bb 0b       	sbc	r27, r27
    157e:	dc 01       	movw	r26, r24
    1580:	99 27       	eor	r25, r25
    1582:	88 27       	eor	r24, r24
    1584:	60 e0       	ldi	r22, 0x00	; 0
    1586:	70 e0       	ldi	r23, 0x00	; 0
    1588:	84 2b       	or	r24, r20
    158a:	95 2b       	or	r25, r21
    158c:	a6 2b       	or	r26, r22
    158e:	b7 2b       	or	r27, r23
    1590:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1594:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1598:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    159c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    15a0:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <mtable+0x22>
    15a4:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <mtable+0x23>
    15a8:	30 97       	sbiw	r30, 0x00	; 0
    15aa:	39 f0       	breq	.+14     	; 0x15ba <__vector_22+0xb2>
    15ac:	61 e1       	ldi	r22, 0x11	; 17
    15ae:	70 e0       	ldi	r23, 0x00	; 0
    15b0:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <otable+0x22>
    15b4:	90 91 b9 01 	lds	r25, 0x01B9	; 0x8001b9 <otable+0x23>
    15b8:	09 95       	icall
    15ba:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    15be:	ff 91       	pop	r31
    15c0:	ef 91       	pop	r30
    15c2:	bf 91       	pop	r27
    15c4:	af 91       	pop	r26
    15c6:	9f 91       	pop	r25
    15c8:	8f 91       	pop	r24
    15ca:	7f 91       	pop	r23
    15cc:	6f 91       	pop	r22
    15ce:	5f 91       	pop	r21
    15d0:	4f 91       	pop	r20
    15d2:	3f 91       	pop	r19
    15d4:	2f 91       	pop	r18
    15d6:	0f 90       	pop	r0
    15d8:	0f be       	out	0x3f, r0	; 63
    15da:	0f 90       	pop	r0
    15dc:	1f 90       	pop	r1
    15de:	18 95       	reti

000015e0 <enqueueByDeadline>:
    15e0:	ef 92       	push	r14
    15e2:	ff 92       	push	r15
    15e4:	0f 93       	push	r16
    15e6:	1f 93       	push	r17
    15e8:	cf 93       	push	r28
    15ea:	df 93       	push	r29
    15ec:	7b 01       	movw	r14, r22
    15ee:	eb 01       	movw	r28, r22
    15f0:	a8 81       	ld	r26, Y
    15f2:	b9 81       	ldd	r27, Y+1	; 0x01
    15f4:	10 97       	sbiw	r26, 0x00	; 0
    15f6:	61 f1       	breq	.+88     	; 0x1650 <enqueueByDeadline+0x70>
    15f8:	fc 01       	movw	r30, r24
    15fa:	06 81       	ldd	r16, Z+6	; 0x06
    15fc:	17 81       	ldd	r17, Z+7	; 0x07
    15fe:	20 85       	ldd	r18, Z+8	; 0x08
    1600:	31 85       	ldd	r19, Z+9	; 0x09
    1602:	16 96       	adiw	r26, 0x06	; 6
    1604:	4d 91       	ld	r20, X+
    1606:	5d 91       	ld	r21, X+
    1608:	6d 91       	ld	r22, X+
    160a:	7c 91       	ld	r23, X
    160c:	19 97       	sbiw	r26, 0x09	; 9
    160e:	04 17       	cp	r16, r20
    1610:	15 07       	cpc	r17, r21
    1612:	26 07       	cpc	r18, r22
    1614:	37 07       	cpc	r19, r23
    1616:	14 f4       	brge	.+4      	; 0x161c <enqueueByDeadline+0x3c>
    1618:	1b c0       	rjmp	.+54     	; 0x1650 <enqueueByDeadline+0x70>
    161a:	df 01       	movw	r26, r30
    161c:	ed 91       	ld	r30, X+
    161e:	fc 91       	ld	r31, X
    1620:	11 97       	sbiw	r26, 0x01	; 1
    1622:	30 97       	sbiw	r30, 0x00	; 0
    1624:	49 f0       	breq	.+18     	; 0x1638 <enqueueByDeadline+0x58>
    1626:	46 81       	ldd	r20, Z+6	; 0x06
    1628:	57 81       	ldd	r21, Z+7	; 0x07
    162a:	60 85       	ldd	r22, Z+8	; 0x08
    162c:	71 85       	ldd	r23, Z+9	; 0x09
    162e:	04 17       	cp	r16, r20
    1630:	15 07       	cpc	r17, r21
    1632:	26 07       	cpc	r18, r22
    1634:	37 07       	cpc	r19, r23
    1636:	8c f7       	brge	.-30     	; 0x161a <enqueueByDeadline+0x3a>
    1638:	ec 01       	movw	r28, r24
    163a:	f9 83       	std	Y+1, r31	; 0x01
    163c:	e8 83       	st	Y, r30
    163e:	10 97       	sbiw	r26, 0x00	; 0
    1640:	21 f4       	brne	.+8      	; 0x164a <enqueueByDeadline+0x6a>
    1642:	f7 01       	movw	r30, r14
    1644:	91 83       	std	Z+1, r25	; 0x01
    1646:	80 83       	st	Z, r24
    1648:	07 c0       	rjmp	.+14     	; 0x1658 <enqueueByDeadline+0x78>
    164a:	8d 93       	st	X+, r24
    164c:	9c 93       	st	X, r25
    164e:	04 c0       	rjmp	.+8      	; 0x1658 <enqueueByDeadline+0x78>
    1650:	ec 01       	movw	r28, r24
    1652:	b9 83       	std	Y+1, r27	; 0x01
    1654:	a8 83       	st	Y, r26
    1656:	f5 cf       	rjmp	.-22     	; 0x1642 <enqueueByDeadline+0x62>
    1658:	df 91       	pop	r29
    165a:	cf 91       	pop	r28
    165c:	1f 91       	pop	r17
    165e:	0f 91       	pop	r16
    1660:	ff 90       	pop	r15
    1662:	ef 90       	pop	r14
    1664:	08 95       	ret

00001666 <enqueueByBaseline>:
    1666:	ef 92       	push	r14
    1668:	ff 92       	push	r15
    166a:	0f 93       	push	r16
    166c:	1f 93       	push	r17
    166e:	cf 93       	push	r28
    1670:	df 93       	push	r29
    1672:	7b 01       	movw	r14, r22
    1674:	eb 01       	movw	r28, r22
    1676:	a8 81       	ld	r26, Y
    1678:	b9 81       	ldd	r27, Y+1	; 0x01
    167a:	10 97       	sbiw	r26, 0x00	; 0
    167c:	61 f1       	breq	.+88     	; 0x16d6 <enqueueByBaseline+0x70>
    167e:	fc 01       	movw	r30, r24
    1680:	02 81       	ldd	r16, Z+2	; 0x02
    1682:	13 81       	ldd	r17, Z+3	; 0x03
    1684:	24 81       	ldd	r18, Z+4	; 0x04
    1686:	35 81       	ldd	r19, Z+5	; 0x05
    1688:	12 96       	adiw	r26, 0x02	; 2
    168a:	4d 91       	ld	r20, X+
    168c:	5d 91       	ld	r21, X+
    168e:	6d 91       	ld	r22, X+
    1690:	7c 91       	ld	r23, X
    1692:	15 97       	sbiw	r26, 0x05	; 5
    1694:	04 17       	cp	r16, r20
    1696:	15 07       	cpc	r17, r21
    1698:	26 07       	cpc	r18, r22
    169a:	37 07       	cpc	r19, r23
    169c:	14 f4       	brge	.+4      	; 0x16a2 <enqueueByBaseline+0x3c>
    169e:	1b c0       	rjmp	.+54     	; 0x16d6 <enqueueByBaseline+0x70>
    16a0:	df 01       	movw	r26, r30
    16a2:	ed 91       	ld	r30, X+
    16a4:	fc 91       	ld	r31, X
    16a6:	11 97       	sbiw	r26, 0x01	; 1
    16a8:	30 97       	sbiw	r30, 0x00	; 0
    16aa:	49 f0       	breq	.+18     	; 0x16be <enqueueByBaseline+0x58>
    16ac:	42 81       	ldd	r20, Z+2	; 0x02
    16ae:	53 81       	ldd	r21, Z+3	; 0x03
    16b0:	64 81       	ldd	r22, Z+4	; 0x04
    16b2:	75 81       	ldd	r23, Z+5	; 0x05
    16b4:	04 17       	cp	r16, r20
    16b6:	15 07       	cpc	r17, r21
    16b8:	26 07       	cpc	r18, r22
    16ba:	37 07       	cpc	r19, r23
    16bc:	8c f7       	brge	.-30     	; 0x16a0 <enqueueByBaseline+0x3a>
    16be:	ec 01       	movw	r28, r24
    16c0:	f9 83       	std	Y+1, r31	; 0x01
    16c2:	e8 83       	st	Y, r30
    16c4:	10 97       	sbiw	r26, 0x00	; 0
    16c6:	21 f4       	brne	.+8      	; 0x16d0 <enqueueByBaseline+0x6a>
    16c8:	f7 01       	movw	r30, r14
    16ca:	91 83       	std	Z+1, r25	; 0x01
    16cc:	80 83       	st	Z, r24
    16ce:	07 c0       	rjmp	.+14     	; 0x16de <enqueueByBaseline+0x78>
    16d0:	8d 93       	st	X+, r24
    16d2:	9c 93       	st	X, r25
    16d4:	04 c0       	rjmp	.+8      	; 0x16de <enqueueByBaseline+0x78>
    16d6:	ec 01       	movw	r28, r24
    16d8:	b9 83       	std	Y+1, r27	; 0x01
    16da:	a8 83       	st	Y, r26
    16dc:	f5 cf       	rjmp	.-22     	; 0x16c8 <enqueueByBaseline+0x62>
    16de:	df 91       	pop	r29
    16e0:	cf 91       	pop	r28
    16e2:	1f 91       	pop	r17
    16e4:	0f 91       	pop	r16
    16e6:	ff 90       	pop	r15
    16e8:	ef 90       	pop	r14
    16ea:	08 95       	ret

000016ec <dequeue>:
    16ec:	dc 01       	movw	r26, r24
    16ee:	ed 91       	ld	r30, X+
    16f0:	fc 91       	ld	r31, X
    16f2:	11 97       	sbiw	r26, 0x01	; 1
    16f4:	30 97       	sbiw	r30, 0x00	; 0
    16f6:	59 f4       	brne	.+22     	; 0x170e <dequeue+0x22>
    16f8:	8f ef       	ldi	r24, 0xFF	; 255
    16fa:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__DATA_REGION_ORIGIN__+0x8c>
    16fe:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__DATA_REGION_ORIGIN__+0x8d>
    1702:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__DATA_REGION_ORIGIN__+0x8e>
    1706:	81 e0       	ldi	r24, 0x01	; 1
    1708:	83 bf       	out	0x33, r24	; 51
    170a:	88 95       	sleep
    170c:	fd cf       	rjmp	.-6      	; 0x1708 <dequeue+0x1c>
    170e:	20 81       	ld	r18, Z
    1710:	31 81       	ldd	r19, Z+1	; 0x01
    1712:	2d 93       	st	X+, r18
    1714:	3c 93       	st	X, r19
    1716:	cf 01       	movw	r24, r30
    1718:	08 95       	ret

0000171a <__vector_9>:
    171a:	1f 92       	push	r1
    171c:	0f 92       	push	r0
    171e:	0f b6       	in	r0, 0x3f	; 63
    1720:	0f 92       	push	r0
    1722:	11 24       	eor	r1, r1
    1724:	2f 93       	push	r18
    1726:	3f 93       	push	r19
    1728:	4f 93       	push	r20
    172a:	5f 93       	push	r21
    172c:	6f 93       	push	r22
    172e:	7f 93       	push	r23
    1730:	8f 93       	push	r24
    1732:	9f 93       	push	r25
    1734:	ef 93       	push	r30
    1736:	ff 93       	push	r31
    1738:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <overflows>
    173c:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <overflows+0x1>
    1740:	01 96       	adiw	r24, 0x01	; 1
    1742:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <overflows+0x1>
    1746:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <overflows>
    174a:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    174e:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    1752:	30 97       	sbiw	r30, 0x00	; 0
    1754:	01 f1       	breq	.+64     	; 0x1796 <__vector_9+0x7c>
    1756:	42 81       	ldd	r20, Z+2	; 0x02
    1758:	53 81       	ldd	r21, Z+3	; 0x03
    175a:	64 81       	ldd	r22, Z+4	; 0x04
    175c:	75 81       	ldd	r23, Z+5	; 0x05
    175e:	86 17       	cp	r24, r22
    1760:	97 07       	cpc	r25, r23
    1762:	c9 f4       	brne	.+50     	; 0x1796 <__vector_9+0x7c>
    1764:	ca 01       	movw	r24, r20
    1766:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    176a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    176e:	42 1b       	sub	r20, r18
    1770:	53 0b       	sbc	r21, r19
    1772:	41 30       	cpi	r20, 0x01	; 1
    1774:	51 05       	cpc	r21, r1
    1776:	29 f4       	brne	.+10     	; 0x1782 <__vector_9+0x68>
    1778:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    177c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1780:	01 96       	adiw	r24, 0x01	; 1
    1782:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1786:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    178a:	ef e6       	ldi	r30, 0x6F	; 111
    178c:	f0 e0       	ldi	r31, 0x00	; 0
    178e:	80 81       	ld	r24, Z
    1790:	82 60       	ori	r24, 0x02	; 2
    1792:	80 83       	st	Z, r24
    1794:	05 c0       	rjmp	.+10     	; 0x17a0 <__vector_9+0x86>
    1796:	ef e6       	ldi	r30, 0x6F	; 111
    1798:	f0 e0       	ldi	r31, 0x00	; 0
    179a:	80 81       	ld	r24, Z
    179c:	8d 7f       	andi	r24, 0xFD	; 253
    179e:	80 83       	st	Z, r24
    17a0:	ff 91       	pop	r31
    17a2:	ef 91       	pop	r30
    17a4:	9f 91       	pop	r25
    17a6:	8f 91       	pop	r24
    17a8:	7f 91       	pop	r23
    17aa:	6f 91       	pop	r22
    17ac:	5f 91       	pop	r21
    17ae:	4f 91       	pop	r20
    17b0:	3f 91       	pop	r19
    17b2:	2f 91       	pop	r18
    17b4:	0f 90       	pop	r0
    17b6:	0f be       	out	0x3f, r0	; 63
    17b8:	0f 90       	pop	r0
    17ba:	1f 90       	pop	r1
    17bc:	18 95       	reti

000017be <__vector_7>:
    17be:	1f 92       	push	r1
    17c0:	0f 92       	push	r0
    17c2:	0f b6       	in	r0, 0x3f	; 63
    17c4:	0f 92       	push	r0
    17c6:	11 24       	eor	r1, r1
    17c8:	cf 92       	push	r12
    17ca:	df 92       	push	r13
    17cc:	ef 92       	push	r14
    17ce:	ff 92       	push	r15
    17d0:	2f 93       	push	r18
    17d2:	3f 93       	push	r19
    17d4:	4f 93       	push	r20
    17d6:	5f 93       	push	r21
    17d8:	6f 93       	push	r22
    17da:	7f 93       	push	r23
    17dc:	8f 93       	push	r24
    17de:	9f 93       	push	r25
    17e0:	af 93       	push	r26
    17e2:	bf 93       	push	r27
    17e4:	ef 93       	push	r30
    17e6:	ff 93       	push	r31
    17e8:	c0 90 8c 01 	lds	r12, 0x018C	; 0x80018c <overflows>
    17ec:	d0 90 8d 01 	lds	r13, 0x018D	; 0x80018d <overflows+0x1>
    17f0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    17f4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    17f8:	b0 99       	sbic	0x16, 0	; 22
    17fa:	0f c0       	rjmp	.+30     	; 0x181a <__vector_7+0x5c>
    17fc:	0d 2c       	mov	r0, r13
    17fe:	00 0c       	add	r0, r0
    1800:	ee 08       	sbc	r14, r14
    1802:	ff 08       	sbc	r15, r15
    1804:	d6 01       	movw	r26, r12
    1806:	99 27       	eor	r25, r25
    1808:	88 27       	eor	r24, r24
    180a:	69 01       	movw	r12, r18
    180c:	e1 2c       	mov	r14, r1
    180e:	f1 2c       	mov	r15, r1
    1810:	c8 2a       	or	r12, r24
    1812:	d9 2a       	or	r13, r25
    1814:	ea 2a       	or	r14, r26
    1816:	fb 2a       	or	r15, r27
    1818:	15 c0       	rjmp	.+42     	; 0x1844 <__vector_7+0x86>
    181a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    181e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1822:	8f ef       	ldi	r24, 0xFF	; 255
    1824:	c8 1a       	sub	r12, r24
    1826:	d8 0a       	sbc	r13, r24
    1828:	0d 2c       	mov	r0, r13
    182a:	00 0c       	add	r0, r0
    182c:	ee 08       	sbc	r14, r14
    182e:	ff 08       	sbc	r15, r15
    1830:	d6 01       	movw	r26, r12
    1832:	99 27       	eor	r25, r25
    1834:	88 27       	eor	r24, r24
    1836:	69 01       	movw	r12, r18
    1838:	e1 2c       	mov	r14, r1
    183a:	f1 2c       	mov	r15, r1
    183c:	c8 2a       	or	r12, r24
    183e:	d9 2a       	or	r13, r25
    1840:	ea 2a       	or	r14, r26
    1842:	fb 2a       	or	r15, r27
    1844:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    1848:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    184c:	30 97       	sbiw	r30, 0x00	; 0
    184e:	09 f4       	brne	.+2      	; 0x1852 <__vector_7+0x94>
    1850:	42 c0       	rjmp	.+132    	; 0x18d6 <__vector_7+0x118>
    1852:	82 81       	ldd	r24, Z+2	; 0x02
    1854:	93 81       	ldd	r25, Z+3	; 0x03
    1856:	a4 81       	ldd	r26, Z+4	; 0x04
    1858:	b5 81       	ldd	r27, Z+5	; 0x05
    185a:	8c 19       	sub	r24, r12
    185c:	9d 09       	sbc	r25, r13
    185e:	ae 09       	sbc	r26, r14
    1860:	bf 09       	sbc	r27, r15
    1862:	18 16       	cp	r1, r24
    1864:	19 06       	cpc	r1, r25
    1866:	1a 06       	cpc	r1, r26
    1868:	1b 06       	cpc	r1, r27
    186a:	ec f1       	brlt	.+122    	; 0x18e6 <__vector_7+0x128>
    186c:	82 e9       	ldi	r24, 0x92	; 146
    186e:	91 e0       	ldi	r25, 0x01	; 1
    1870:	0e 94 76 0b 	call	0x16ec	; 0x16ec <dequeue>
    1874:	64 e9       	ldi	r22, 0x94	; 148
    1876:	71 e0       	ldi	r23, 0x01	; 1
    1878:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <enqueueByDeadline>
    187c:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    1880:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    1884:	30 97       	sbiw	r30, 0x00	; 0
    1886:	39 f1       	breq	.+78     	; 0x18d6 <__vector_7+0x118>
    1888:	82 81       	ldd	r24, Z+2	; 0x02
    188a:	93 81       	ldd	r25, Z+3	; 0x03
    188c:	a4 81       	ldd	r26, Z+4	; 0x04
    188e:	b5 81       	ldd	r27, Z+5	; 0x05
    1890:	8c 19       	sub	r24, r12
    1892:	9d 09       	sbc	r25, r13
    1894:	ae 09       	sbc	r26, r14
    1896:	bf 09       	sbc	r27, r15
    1898:	18 16       	cp	r1, r24
    189a:	19 06       	cpc	r1, r25
    189c:	1a 06       	cpc	r1, r26
    189e:	1b 06       	cpc	r1, r27
    18a0:	2c f7       	brge	.-54     	; 0x186c <__vector_7+0xae>
    18a2:	21 c0       	rjmp	.+66     	; 0x18e6 <__vector_7+0x128>
    18a4:	9c 01       	movw	r18, r24
    18a6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    18aa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    18ae:	84 1b       	sub	r24, r20
    18b0:	95 0b       	sbc	r25, r21
    18b2:	01 97       	sbiw	r24, 0x01	; 1
    18b4:	31 f4       	brne	.+12     	; 0x18c2 <__vector_7+0x104>
    18b6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    18ba:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    18be:	2f 5f       	subi	r18, 0xFF	; 255
    18c0:	3f 4f       	sbci	r19, 0xFF	; 255
    18c2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    18c6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    18ca:	ef e6       	ldi	r30, 0x6F	; 111
    18cc:	f0 e0       	ldi	r31, 0x00	; 0
    18ce:	80 81       	ld	r24, Z
    18d0:	82 60       	ori	r24, 0x02	; 2
    18d2:	80 83       	st	Z, r24
    18d4:	05 c0       	rjmp	.+10     	; 0x18e0 <__vector_7+0x122>
    18d6:	ef e6       	ldi	r30, 0x6F	; 111
    18d8:	f0 e0       	ldi	r31, 0x00	; 0
    18da:	80 81       	ld	r24, Z
    18dc:	8d 7f       	andi	r24, 0xFD	; 253
    18de:	80 83       	st	Z, r24
    18e0:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    18e4:	0c c0       	rjmp	.+24     	; 0x18fe <__vector_7+0x140>
    18e6:	82 81       	ldd	r24, Z+2	; 0x02
    18e8:	93 81       	ldd	r25, Z+3	; 0x03
    18ea:	a4 81       	ldd	r26, Z+4	; 0x04
    18ec:	b5 81       	ldd	r27, Z+5	; 0x05
    18ee:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    18f2:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    18f6:	2a 17       	cp	r18, r26
    18f8:	3b 07       	cpc	r19, r27
    18fa:	69 f7       	brne	.-38     	; 0x18d6 <__vector_7+0x118>
    18fc:	d3 cf       	rjmp	.-90     	; 0x18a4 <__vector_7+0xe6>
    18fe:	ff 91       	pop	r31
    1900:	ef 91       	pop	r30
    1902:	bf 91       	pop	r27
    1904:	af 91       	pop	r26
    1906:	9f 91       	pop	r25
    1908:	8f 91       	pop	r24
    190a:	7f 91       	pop	r23
    190c:	6f 91       	pop	r22
    190e:	5f 91       	pop	r21
    1910:	4f 91       	pop	r20
    1912:	3f 91       	pop	r19
    1914:	2f 91       	pop	r18
    1916:	ff 90       	pop	r15
    1918:	ef 90       	pop	r14
    191a:	df 90       	pop	r13
    191c:	cf 90       	pop	r12
    191e:	0f 90       	pop	r0
    1920:	0f be       	out	0x3f, r0	; 63
    1922:	0f 90       	pop	r0
    1924:	1f 90       	pop	r1
    1926:	18 95       	reti

00001928 <async>:
    1928:	3f 92       	push	r3
    192a:	4f 92       	push	r4
    192c:	5f 92       	push	r5
    192e:	6f 92       	push	r6
    1930:	7f 92       	push	r7
    1932:	8f 92       	push	r8
    1934:	9f 92       	push	r9
    1936:	af 92       	push	r10
    1938:	bf 92       	push	r11
    193a:	cf 92       	push	r12
    193c:	df 92       	push	r13
    193e:	ef 92       	push	r14
    1940:	ff 92       	push	r15
    1942:	0f 93       	push	r16
    1944:	1f 93       	push	r17
    1946:	cf 93       	push	r28
    1948:	df 93       	push	r29
    194a:	2b 01       	movw	r4, r22
    194c:	3c 01       	movw	r6, r24
    194e:	49 01       	movw	r8, r18
    1950:	5a 01       	movw	r10, r20
    1952:	8f b7       	in	r24, 0x3f	; 63
    1954:	80 78       	andi	r24, 0x80	; 128
    1956:	38 2e       	mov	r3, r24
    1958:	f8 94       	cli
    195a:	82 e8       	ldi	r24, 0x82	; 130
    195c:	91 e0       	ldi	r25, 0x01	; 1
    195e:	0e 94 76 0b 	call	0x16ec	; 0x16ec <dequeue>
    1962:	ec 01       	movw	r28, r24
    1964:	1b 87       	std	Y+11, r17	; 0x0b
    1966:	0a 87       	std	Y+10, r16	; 0x0a
    1968:	fd 86       	std	Y+13, r15	; 0x0d
    196a:	ec 86       	std	Y+12, r14	; 0x0c
    196c:	df 86       	std	Y+15, r13	; 0x0f
    196e:	ce 86       	std	Y+14, r12	; 0x0e
    1970:	33 20       	and	r3, r3
    1972:	61 f0       	breq	.+24     	; 0x198c <async+0x64>
    1974:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <current>
    1978:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <current+0x1>
    197c:	02 80       	ldd	r0, Z+2	; 0x02
    197e:	f3 81       	ldd	r31, Z+3	; 0x03
    1980:	e0 2d       	mov	r30, r0
    1982:	82 81       	ldd	r24, Z+2	; 0x02
    1984:	93 81       	ldd	r25, Z+3	; 0x03
    1986:	a4 81       	ldd	r26, Z+4	; 0x04
    1988:	b5 81       	ldd	r27, Z+5	; 0x05
    198a:	08 c0       	rjmp	.+16     	; 0x199c <async+0x74>
    198c:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <timestamp>
    1990:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <timestamp+0x1>
    1994:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <timestamp+0x2>
    1998:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <timestamp+0x3>
    199c:	48 0e       	add	r4, r24
    199e:	59 1e       	adc	r5, r25
    19a0:	6a 1e       	adc	r6, r26
    19a2:	7b 1e       	adc	r7, r27
    19a4:	4a 82       	std	Y+2, r4	; 0x02
    19a6:	5b 82       	std	Y+3, r5	; 0x03
    19a8:	6c 82       	std	Y+4, r6	; 0x04
    19aa:	7d 82       	std	Y+5, r7	; 0x05
    19ac:	18 14       	cp	r1, r8
    19ae:	19 04       	cpc	r1, r9
    19b0:	1a 04       	cpc	r1, r10
    19b2:	1b 04       	cpc	r1, r11
    19b4:	44 f0       	brlt	.+16     	; 0x19c6 <async+0x9e>
    19b6:	0f 2e       	mov	r0, r31
    19b8:	88 24       	eor	r8, r8
    19ba:	8a 94       	dec	r8
    19bc:	98 2c       	mov	r9, r8
    19be:	a8 2c       	mov	r10, r8
    19c0:	ff e7       	ldi	r31, 0x7F	; 127
    19c2:	bf 2e       	mov	r11, r31
    19c4:	f0 2d       	mov	r31, r0
    19c6:	84 0c       	add	r8, r4
    19c8:	95 1c       	adc	r9, r5
    19ca:	a6 1c       	adc	r10, r6
    19cc:	b7 1c       	adc	r11, r7
    19ce:	8e 82       	std	Y+6, r8	; 0x06
    19d0:	9f 82       	std	Y+7, r9	; 0x07
    19d2:	a8 86       	std	Y+8, r10	; 0x08
    19d4:	b9 86       	std	Y+9, r11	; 0x09
    19d6:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <overflows>
    19da:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <overflows+0x1>
    19de:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    19e2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    19e6:	b0 99       	sbic	0x16, 0	; 22
    19e8:	0e c0       	rjmp	.+28     	; 0x1a06 <async+0xde>
    19ea:	09 2e       	mov	r0, r25
    19ec:	00 0c       	add	r0, r0
    19ee:	aa 0b       	sbc	r26, r26
    19f0:	bb 0b       	sbc	r27, r27
    19f2:	dc 01       	movw	r26, r24
    19f4:	99 27       	eor	r25, r25
    19f6:	88 27       	eor	r24, r24
    19f8:	60 e0       	ldi	r22, 0x00	; 0
    19fa:	70 e0       	ldi	r23, 0x00	; 0
    19fc:	84 2b       	or	r24, r20
    19fe:	95 2b       	or	r25, r21
    1a00:	a6 2b       	or	r26, r22
    1a02:	b7 2b       	or	r27, r23
    1a04:	13 c0       	rjmp	.+38     	; 0x1a2c <async+0x104>
    1a06:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1a0a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1a0e:	01 96       	adiw	r24, 0x01	; 1
    1a10:	09 2e       	mov	r0, r25
    1a12:	00 0c       	add	r0, r0
    1a14:	aa 0b       	sbc	r26, r26
    1a16:	bb 0b       	sbc	r27, r27
    1a18:	dc 01       	movw	r26, r24
    1a1a:	99 27       	eor	r25, r25
    1a1c:	88 27       	eor	r24, r24
    1a1e:	a9 01       	movw	r20, r18
    1a20:	60 e0       	ldi	r22, 0x00	; 0
    1a22:	70 e0       	ldi	r23, 0x00	; 0
    1a24:	84 2b       	or	r24, r20
    1a26:	95 2b       	or	r25, r21
    1a28:	a6 2b       	or	r26, r22
    1a2a:	b7 2b       	or	r27, r23
    1a2c:	48 1a       	sub	r4, r24
    1a2e:	59 0a       	sbc	r5, r25
    1a30:	6a 0a       	sbc	r6, r26
    1a32:	7b 0a       	sbc	r7, r27
    1a34:	14 14       	cp	r1, r4
    1a36:	15 04       	cpc	r1, r5
    1a38:	16 04       	cpc	r1, r6
    1a3a:	17 04       	cpc	r1, r7
    1a3c:	ac f5       	brge	.+106    	; 0x1aa8 <async+0x180>
    1a3e:	62 e9       	ldi	r22, 0x92	; 146
    1a40:	71 e0       	ldi	r23, 0x01	; 1
    1a42:	ce 01       	movw	r24, r28
    1a44:	0e 94 33 0b 	call	0x1666	; 0x1666 <enqueueByBaseline>
    1a48:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    1a4c:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    1a50:	30 97       	sbiw	r30, 0x00	; 0
    1a52:	21 f1       	breq	.+72     	; 0x1a9c <async+0x174>
    1a54:	82 81       	ldd	r24, Z+2	; 0x02
    1a56:	93 81       	ldd	r25, Z+3	; 0x03
    1a58:	a4 81       	ldd	r26, Z+4	; 0x04
    1a5a:	b5 81       	ldd	r27, Z+5	; 0x05
    1a5c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1a60:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1a64:	2a 17       	cp	r18, r26
    1a66:	3b 07       	cpc	r19, r27
    1a68:	c9 f4       	brne	.+50     	; 0x1a9c <async+0x174>
    1a6a:	9c 01       	movw	r18, r24
    1a6c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1a70:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1a74:	84 1b       	sub	r24, r20
    1a76:	95 0b       	sbc	r25, r21
    1a78:	01 97       	sbiw	r24, 0x01	; 1
    1a7a:	31 f4       	brne	.+12     	; 0x1a88 <async+0x160>
    1a7c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1a80:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1a84:	2f 5f       	subi	r18, 0xFF	; 255
    1a86:	3f 4f       	sbci	r19, 0xFF	; 255
    1a88:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1a8c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1a90:	ef e6       	ldi	r30, 0x6F	; 111
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	80 81       	ld	r24, Z
    1a96:	82 60       	ori	r24, 0x02	; 2
    1a98:	80 83       	st	Z, r24
    1a9a:	41 c0       	rjmp	.+130    	; 0x1b1e <async+0x1f6>
    1a9c:	ef e6       	ldi	r30, 0x6F	; 111
    1a9e:	f0 e0       	ldi	r31, 0x00	; 0
    1aa0:	80 81       	ld	r24, Z
    1aa2:	8d 7f       	andi	r24, 0xFD	; 253
    1aa4:	80 83       	st	Z, r24
    1aa6:	3b c0       	rjmp	.+118    	; 0x1b1e <async+0x1f6>
    1aa8:	64 e9       	ldi	r22, 0x94	; 148
    1aaa:	71 e0       	ldi	r23, 0x01	; 1
    1aac:	ce 01       	movw	r24, r28
    1aae:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <enqueueByDeadline>
    1ab2:	33 20       	and	r3, r3
    1ab4:	b9 f1       	breq	.+110    	; 0x1b24 <async+0x1fc>
    1ab6:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
    1aba:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
    1abe:	00 97       	sbiw	r24, 0x00	; 0
    1ac0:	81 f1       	breq	.+96     	; 0x1b22 <async+0x1fa>
    1ac2:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <activeStack>
    1ac6:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <activeStack+0x1>
    1aca:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <msgQ>
    1ace:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <msgQ+0x1>
    1ad2:	02 81       	ldd	r16, Z+2	; 0x02
    1ad4:	13 81       	ldd	r17, Z+3	; 0x03
    1ad6:	d9 01       	movw	r26, r18
    1ad8:	16 96       	adiw	r26, 0x06	; 6
    1ada:	4d 91       	ld	r20, X+
    1adc:	5d 91       	ld	r21, X+
    1ade:	6d 91       	ld	r22, X+
    1ae0:	7c 91       	ld	r23, X
    1ae2:	19 97       	sbiw	r26, 0x09	; 9
    1ae4:	d8 01       	movw	r26, r16
    1ae6:	16 96       	adiw	r26, 0x06	; 6
    1ae8:	0d 91       	ld	r16, X+
    1aea:	1d 91       	ld	r17, X+
    1aec:	2d 91       	ld	r18, X+
    1aee:	3c 91       	ld	r19, X
    1af0:	19 97       	sbiw	r26, 0x09	; 9
    1af2:	40 1b       	sub	r20, r16
    1af4:	51 0b       	sbc	r21, r17
    1af6:	62 0b       	sbc	r22, r18
    1af8:	73 0b       	sbc	r23, r19
    1afa:	9a f4       	brpl	.+38     	; 0x1b22 <async+0x1fa>
    1afc:	dc 01       	movw	r26, r24
    1afe:	2d 91       	ld	r18, X+
    1b00:	3c 91       	ld	r19, X
    1b02:	11 97       	sbiw	r26, 0x01	; 1
    1b04:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <threadPool+0x1>
    1b08:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <threadPool>
    1b0c:	ed 93       	st	X+, r30
    1b0e:	fc 93       	st	X, r31
    1b10:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <activeStack+0x1>
    1b14:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <activeStack>
    1b18:	0e 94 fd 02 	call	0x5fa	; 0x5fa <dispatch>
    1b1c:	02 c0       	rjmp	.+4      	; 0x1b22 <async+0x1fa>
    1b1e:	33 20       	and	r3, r3
    1b20:	09 f0       	breq	.+2      	; 0x1b24 <async+0x1fc>
    1b22:	78 94       	sei
    1b24:	ce 01       	movw	r24, r28
    1b26:	df 91       	pop	r29
    1b28:	cf 91       	pop	r28
    1b2a:	1f 91       	pop	r17
    1b2c:	0f 91       	pop	r16
    1b2e:	ff 90       	pop	r15
    1b30:	ef 90       	pop	r14
    1b32:	df 90       	pop	r13
    1b34:	cf 90       	pop	r12
    1b36:	bf 90       	pop	r11
    1b38:	af 90       	pop	r10
    1b3a:	9f 90       	pop	r9
    1b3c:	8f 90       	pop	r8
    1b3e:	7f 90       	pop	r7
    1b40:	6f 90       	pop	r6
    1b42:	5f 90       	pop	r5
    1b44:	4f 90       	pop	r4
    1b46:	3f 90       	pop	r3
    1b48:	08 95       	ret

00001b4a <sync>:
    1b4a:	cf 92       	push	r12
    1b4c:	df 92       	push	r13
    1b4e:	ef 92       	push	r14
    1b50:	ff 92       	push	r15
    1b52:	0f 93       	push	r16
    1b54:	1f 93       	push	r17
    1b56:	cf 93       	push	r28
    1b58:	df 93       	push	r29
    1b5a:	ec 01       	movw	r28, r24
    1b5c:	7b 01       	movw	r14, r22
    1b5e:	6a 01       	movw	r12, r20
    1b60:	1f b7       	in	r17, 0x3f	; 63
    1b62:	10 78       	andi	r17, 0x80	; 128
    1b64:	f8 94       	cli
    1b66:	a8 81       	ld	r26, Y
    1b68:	b9 81       	ldd	r27, Y+1	; 0x01
    1b6a:	10 97       	sbiw	r26, 0x00	; 0
    1b6c:	61 f1       	breq	.+88     	; 0x1bc6 <sync+0x7c>
    1b6e:	14 96       	adiw	r26, 0x04	; 4
    1b70:	ed 91       	ld	r30, X+
    1b72:	fc 91       	ld	r31, X
    1b74:	15 97       	sbiw	r26, 0x05	; 5
    1b76:	30 97       	sbiw	r30, 0x00	; 0
    1b78:	41 f0       	breq	.+16     	; 0x1b8a <sync+0x40>
    1b7a:	a0 81       	ld	r26, Z
    1b7c:	b1 81       	ldd	r27, Z+1	; 0x01
    1b7e:	14 96       	adiw	r26, 0x04	; 4
    1b80:	ed 91       	ld	r30, X+
    1b82:	fc 91       	ld	r31, X
    1b84:	15 97       	sbiw	r26, 0x05	; 5
    1b86:	30 97       	sbiw	r30, 0x00	; 0
    1b88:	c1 f7       	brne	.-16     	; 0x1b7a <sync+0x30>
    1b8a:	20 91 7c 01 	lds	r18, 0x017C	; 0x80017c <current>
    1b8e:	30 91 7d 01 	lds	r19, 0x017D	; 0x80017d <current+0x1>
    1b92:	2a 17       	cp	r18, r26
    1b94:	3b 07       	cpc	r19, r27
    1b96:	21 f0       	breq	.+8      	; 0x1ba0 <sync+0x56>
    1b98:	11 23       	and	r17, r17
    1b9a:	09 f4       	brne	.+2      	; 0x1b9e <sync+0x54>
    1b9c:	3d c0       	rjmp	.+122    	; 0x1c18 <sync+0xce>
    1b9e:	07 c0       	rjmp	.+14     	; 0x1bae <sync+0x64>
    1ba0:	11 23       	and	r17, r17
    1ba2:	09 f4       	brne	.+2      	; 0x1ba6 <sync+0x5c>
    1ba4:	3c c0       	rjmp	.+120    	; 0x1c1e <sync+0xd4>
    1ba6:	78 94       	sei
    1ba8:	8f ef       	ldi	r24, 0xFF	; 255
    1baa:	9f ef       	ldi	r25, 0xFF	; 255
    1bac:	52 c0       	rjmp	.+164    	; 0x1c52 <sync+0x108>
    1bae:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb0:	9b 81       	ldd	r25, Y+3	; 0x03
    1bb2:	00 97       	sbiw	r24, 0x00	; 0
    1bb4:	d1 f1       	breq	.+116    	; 0x1c2a <sync+0xe0>
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	15 82       	std	Z+5, r1	; 0x05
    1bba:	14 82       	std	Z+4, r1	; 0x04
    1bbc:	36 c0       	rjmp	.+108    	; 0x1c2a <sync+0xe0>
    1bbe:	78 94       	sei
    1bc0:	80 e0       	ldi	r24, 0x00	; 0
    1bc2:	90 e0       	ldi	r25, 0x00	; 0
    1bc4:	46 c0       	rjmp	.+140    	; 0x1c52 <sync+0x108>
    1bc6:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current>
    1bca:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current+0x1>
    1bce:	99 83       	std	Y+1, r25	; 0x01
    1bd0:	88 83       	st	Y, r24
    1bd2:	11 23       	and	r17, r17
    1bd4:	29 f0       	breq	.+10     	; 0x1be0 <sync+0x96>
    1bd6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bd8:	9b 81       	ldd	r25, Y+3	; 0x03
    1bda:	01 97       	sbiw	r24, 0x01	; 1
    1bdc:	09 f0       	breq	.+2      	; 0x1be0 <sync+0x96>
    1bde:	78 94       	sei
    1be0:	b6 01       	movw	r22, r12
    1be2:	ce 01       	movw	r24, r28
    1be4:	f7 01       	movw	r30, r14
    1be6:	09 95       	icall
    1be8:	f8 2e       	mov	r15, r24
    1bea:	09 2f       	mov	r16, r25
    1bec:	8f b7       	in	r24, 0x3f	; 63
    1bee:	f8 94       	cli
    1bf0:	19 82       	std	Y+1, r1	; 0x01
    1bf2:	18 82       	st	Y, r1
    1bf4:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf6:	9b 81       	ldd	r25, Y+3	; 0x03
    1bf8:	82 30       	cpi	r24, 0x02	; 2
    1bfa:	91 05       	cpc	r25, r1
    1bfc:	38 f0       	brcs	.+14     	; 0x1c0c <sync+0xc2>
    1bfe:	1b 82       	std	Y+3, r1	; 0x03
    1c00:	1a 82       	std	Y+2, r1	; 0x02
    1c02:	fc 01       	movw	r30, r24
    1c04:	15 82       	std	Z+5, r1	; 0x05
    1c06:	14 82       	std	Z+4, r1	; 0x04
    1c08:	0e 94 fd 02 	call	0x5fa	; 0x5fa <dispatch>
    1c0c:	11 23       	and	r17, r17
    1c0e:	51 f0       	breq	.+20     	; 0x1c24 <sync+0xda>
    1c10:	78 94       	sei
    1c12:	8f 2d       	mov	r24, r15
    1c14:	90 2f       	mov	r25, r16
    1c16:	1d c0       	rjmp	.+58     	; 0x1c52 <sync+0x108>
    1c18:	8f ef       	ldi	r24, 0xFF	; 255
    1c1a:	9f ef       	ldi	r25, 0xFF	; 255
    1c1c:	1a c0       	rjmp	.+52     	; 0x1c52 <sync+0x108>
    1c1e:	8f ef       	ldi	r24, 0xFF	; 255
    1c20:	9f ef       	ldi	r25, 0xFF	; 255
    1c22:	17 c0       	rjmp	.+46     	; 0x1c52 <sync+0x108>
    1c24:	8f 2d       	mov	r24, r15
    1c26:	90 2f       	mov	r25, r16
    1c28:	14 c0       	rjmp	.+40     	; 0x1c52 <sync+0x108>
    1c2a:	3b 83       	std	Y+3, r19	; 0x03
    1c2c:	2a 83       	std	Y+2, r18	; 0x02
    1c2e:	f9 01       	movw	r30, r18
    1c30:	d5 83       	std	Z+5, r29	; 0x05
    1c32:	c4 83       	std	Z+4, r28	; 0x04
    1c34:	cd 01       	movw	r24, r26
    1c36:	0e 94 fd 02 	call	0x5fa	; 0x5fa <dispatch>
    1c3a:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <current>
    1c3e:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <current+0x1>
    1c42:	82 81       	ldd	r24, Z+2	; 0x02
    1c44:	93 81       	ldd	r25, Z+3	; 0x03
    1c46:	89 2b       	or	r24, r25
    1c48:	09 f4       	brne	.+2      	; 0x1c4c <sync+0x102>
    1c4a:	b9 cf       	rjmp	.-142    	; 0x1bbe <sync+0x74>
    1c4c:	f9 83       	std	Y+1, r31	; 0x01
    1c4e:	e8 83       	st	Y, r30
    1c50:	c2 cf       	rjmp	.-124    	; 0x1bd6 <sync+0x8c>
    1c52:	df 91       	pop	r29
    1c54:	cf 91       	pop	r28
    1c56:	1f 91       	pop	r17
    1c58:	0f 91       	pop	r16
    1c5a:	ff 90       	pop	r15
    1c5c:	ef 90       	pop	r14
    1c5e:	df 90       	pop	r13
    1c60:	cf 90       	pop	r12
    1c62:	08 95       	ret

00001c64 <run>:
    1c64:	00 91 7c 01 	lds	r16, 0x017C	; 0x80017c <current>
    1c68:	10 91 7d 01 	lds	r17, 0x017D	; 0x80017d <current+0x1>
    1c6c:	84 e9       	ldi	r24, 0x94	; 148
    1c6e:	91 e0       	ldi	r25, 0x01	; 1
    1c70:	0e 94 76 0b 	call	0x16ec	; 0x16ec <dequeue>
    1c74:	ec 01       	movw	r28, r24
    1c76:	d8 01       	movw	r26, r16
    1c78:	13 96       	adiw	r26, 0x03	; 3
    1c7a:	9c 93       	st	X, r25
    1c7c:	8e 93       	st	-X, r24
    1c7e:	12 97       	sbiw	r26, 0x02	; 2
    1c80:	78 94       	sei
    1c82:	4e 85       	ldd	r20, Y+14	; 0x0e
    1c84:	5f 85       	ldd	r21, Y+15	; 0x0f
    1c86:	6c 85       	ldd	r22, Y+12	; 0x0c
    1c88:	7d 85       	ldd	r23, Y+13	; 0x0d
    1c8a:	8a 85       	ldd	r24, Y+10	; 0x0a
    1c8c:	9b 85       	ldd	r25, Y+11	; 0x0b
    1c8e:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <sync>
    1c92:	8f b7       	in	r24, 0x3f	; 63
    1c94:	f8 94       	cli
    1c96:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <msgPool>
    1c9a:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <msgPool+0x1>
    1c9e:	99 83       	std	Y+1, r25	; 0x01
    1ca0:	88 83       	st	Y, r24
    1ca2:	d0 93 83 01 	sts	0x0183, r29	; 0x800183 <msgPool+0x1>
    1ca6:	c0 93 82 01 	sts	0x0182, r28	; 0x800182 <msgPool>
    1caa:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <activeStack>
    1cae:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <activeStack+0x1>
    1cb2:	00 81       	ld	r16, Z
    1cb4:	11 81       	ldd	r17, Z+1	; 0x01
    1cb6:	e8 01       	movw	r28, r16
    1cb8:	2a 81       	ldd	r18, Y+2	; 0x02
    1cba:	3b 81       	ldd	r19, Y+3	; 0x03
    1cbc:	a0 91 94 01 	lds	r26, 0x0194	; 0x800194 <msgQ>
    1cc0:	b0 91 95 01 	lds	r27, 0x0195	; 0x800195 <msgQ+0x1>
    1cc4:	10 97       	sbiw	r26, 0x00	; 0
    1cc6:	c1 f0       	breq	.+48     	; 0x1cf8 <run+0x94>
    1cc8:	21 15       	cp	r18, r1
    1cca:	31 05       	cpc	r19, r1
    1ccc:	59 f2       	breq	.-106    	; 0x1c64 <run>
    1cce:	16 96       	adiw	r26, 0x06	; 6
    1cd0:	8d 91       	ld	r24, X+
    1cd2:	9d 91       	ld	r25, X+
    1cd4:	0d 90       	ld	r0, X+
    1cd6:	bc 91       	ld	r27, X
    1cd8:	a0 2d       	mov	r26, r0
    1cda:	e9 01       	movw	r28, r18
    1cdc:	4e 81       	ldd	r20, Y+6	; 0x06
    1cde:	5f 81       	ldd	r21, Y+7	; 0x07
    1ce0:	68 85       	ldd	r22, Y+8	; 0x08
    1ce2:	79 85       	ldd	r23, Y+9	; 0x09
    1ce4:	84 1b       	sub	r24, r20
    1ce6:	95 0b       	sbc	r25, r21
    1ce8:	a6 0b       	sbc	r26, r22
    1cea:	b7 0b       	sbc	r27, r23
    1cec:	18 16       	cp	r1, r24
    1cee:	19 06       	cpc	r1, r25
    1cf0:	1a 06       	cpc	r1, r26
    1cf2:	1b 06       	cpc	r1, r27
    1cf4:	0c f0       	brlt	.+2      	; 0x1cf8 <run+0x94>
    1cf6:	b6 cf       	rjmp	.-148    	; 0x1c64 <run>
    1cf8:	10 93 7f 01 	sts	0x017F, r17	; 0x80017f <activeStack+0x1>
    1cfc:	00 93 7e 01 	sts	0x017E, r16	; 0x80017e <activeStack>
    1d00:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
    1d04:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
    1d08:	91 83       	std	Z+1, r25	; 0x01
    1d0a:	80 83       	st	Z, r24
    1d0c:	f0 93 81 01 	sts	0x0181, r31	; 0x800181 <threadPool+0x1>
    1d10:	e0 93 80 01 	sts	0x0180, r30	; 0x800180 <threadPool>
    1d14:	a0 91 7e 01 	lds	r26, 0x017E	; 0x80017e <activeStack>
    1d18:	b0 91 7f 01 	lds	r27, 0x017F	; 0x80017f <activeStack+0x1>
    1d1c:	14 96       	adiw	r26, 0x04	; 4
    1d1e:	ed 91       	ld	r30, X+
    1d20:	fc 91       	ld	r31, X
    1d22:	15 97       	sbiw	r26, 0x05	; 5
    1d24:	30 97       	sbiw	r30, 0x00	; 0
    1d26:	41 f0       	breq	.+16     	; 0x1d38 <run+0xd4>
    1d28:	a0 81       	ld	r26, Z
    1d2a:	b1 81       	ldd	r27, Z+1	; 0x01
    1d2c:	14 96       	adiw	r26, 0x04	; 4
    1d2e:	ed 91       	ld	r30, X+
    1d30:	fc 91       	ld	r31, X
    1d32:	15 97       	sbiw	r26, 0x05	; 5
    1d34:	30 97       	sbiw	r30, 0x00	; 0
    1d36:	c1 f7       	brne	.-16     	; 0x1d28 <run+0xc4>
    1d38:	cd 01       	movw	r24, r26
    1d3a:	0e 94 fd 02 	call	0x5fa	; 0x5fa <dispatch>
    1d3e:	92 cf       	rjmp	.-220    	; 0x1c64 <run>

00001d40 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1d40:	42 31       	cpi	r20, 0x12	; 18
    1d42:	b8 f4       	brcc	.+46     	; 0x1d72 <install+0x32>
        char status;
        DISABLE(status);
    1d44:	2f b7       	in	r18, 0x3f	; 63
    1d46:	f8 94       	cli
        otable[i] = obj;
    1d48:	50 e0       	ldi	r21, 0x00	; 0
    1d4a:	44 0f       	add	r20, r20
    1d4c:	55 1f       	adc	r21, r21
    1d4e:	fa 01       	movw	r30, r20
    1d50:	ea 56       	subi	r30, 0x6A	; 106
    1d52:	fe 4f       	sbci	r31, 0xFE	; 254
    1d54:	91 83       	std	Z+1, r25	; 0x01
    1d56:	80 83       	st	Z, r24
        mtable[i] = m;
    1d58:	fa 01       	movw	r30, r20
    1d5a:	e2 5d       	subi	r30, 0xD2	; 210
    1d5c:	fd 4f       	sbci	r31, 0xFD	; 253
    1d5e:	71 83       	std	Z+1, r23	; 0x01
    1d60:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1d62:	41 e0       	ldi	r20, 0x01	; 1
    1d64:	50 e0       	ldi	r21, 0x00	; 0
    1d66:	fc 01       	movw	r30, r24
    1d68:	53 83       	std	Z+3, r21	; 0x03
    1d6a:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1d6c:	22 23       	and	r18, r18
    1d6e:	0c f4       	brge	.+2      	; 0x1d72 <install+0x32>
    1d70:	78 94       	sei
    1d72:	08 95       	ret

00001d74 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1d74:	8c 01       	movw	r16, r24
    1d76:	7b 01       	movw	r14, r22
    1d78:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1d7a:	8f b7       	in	r24, 0x3f	; 63
    1d7c:	f8 94       	cli
    initialize();
    1d7e:	0e 94 92 02 	call	0x524	; 0x524 <initialize>
    ENABLE(1);
    1d82:	78 94       	sei
    if (m != NULL)
    1d84:	e1 14       	cp	r14, r1
    1d86:	f1 04       	cpc	r15, r1
    1d88:	41 f0       	breq	.+16     	; 0x1d9a <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1d8a:	20 e0       	ldi	r18, 0x00	; 0
    1d8c:	30 e0       	ldi	r19, 0x00	; 0
    1d8e:	a9 01       	movw	r20, r18
    1d90:	60 e0       	ldi	r22, 0x00	; 0
    1d92:	70 e0       	ldi	r23, 0x00	; 0
    1d94:	cb 01       	movw	r24, r22
    1d96:	0e 94 94 0c 	call	0x1928	; 0x1928 <async>
    DISABLE(status);
    1d9a:	8f b7       	in	r24, 0x3f	; 63
    1d9c:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1d9e:	0e 94 1d 03 	call	0x63a	; 0x63a <schedule>
    ENABLE(1);
    1da2:	78 94       	sei
    while (1) {
        SLEEP();
    1da4:	81 e0       	ldi	r24, 0x01	; 1
    1da6:	83 bf       	out	0x33, r24	; 51
    1da8:	88 95       	sleep
    1daa:	fd cf       	rjmp	.-6      	; 0x1da6 <tinytimber+0x32>

00001dac <__divmodsi4>:
    1dac:	05 2e       	mov	r0, r21
    1dae:	97 fb       	bst	r25, 7
    1db0:	1e f4       	brtc	.+6      	; 0x1db8 <__divmodsi4+0xc>
    1db2:	00 94       	com	r0
    1db4:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <__negsi2>
    1db8:	57 fd       	sbrc	r21, 7
    1dba:	07 d0       	rcall	.+14     	; 0x1dca <__divmodsi4_neg2>
    1dbc:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__udivmodsi4>
    1dc0:	07 fc       	sbrc	r0, 7
    1dc2:	03 d0       	rcall	.+6      	; 0x1dca <__divmodsi4_neg2>
    1dc4:	4e f4       	brtc	.+18     	; 0x1dd8 <__divmodsi4_exit>
    1dc6:	0c 94 ed 0e 	jmp	0x1dda	; 0x1dda <__negsi2>

00001dca <__divmodsi4_neg2>:
    1dca:	50 95       	com	r21
    1dcc:	40 95       	com	r20
    1dce:	30 95       	com	r19
    1dd0:	21 95       	neg	r18
    1dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd4:	4f 4f       	sbci	r20, 0xFF	; 255
    1dd6:	5f 4f       	sbci	r21, 0xFF	; 255

00001dd8 <__divmodsi4_exit>:
    1dd8:	08 95       	ret

00001dda <__negsi2>:
    1dda:	90 95       	com	r25
    1ddc:	80 95       	com	r24
    1dde:	70 95       	com	r23
    1de0:	61 95       	neg	r22
    1de2:	7f 4f       	sbci	r23, 0xFF	; 255
    1de4:	8f 4f       	sbci	r24, 0xFF	; 255
    1de6:	9f 4f       	sbci	r25, 0xFF	; 255
    1de8:	08 95       	ret

00001dea <__tablejump2__>:
    1dea:	ee 0f       	add	r30, r30
    1dec:	ff 1f       	adc	r31, r31
    1dee:	05 90       	lpm	r0, Z+
    1df0:	f4 91       	lpm	r31, Z
    1df2:	e0 2d       	mov	r30, r0
    1df4:	09 94       	ijmp

00001df6 <__udivmodsi4>:
    1df6:	a1 e2       	ldi	r26, 0x21	; 33
    1df8:	1a 2e       	mov	r1, r26
    1dfa:	aa 1b       	sub	r26, r26
    1dfc:	bb 1b       	sub	r27, r27
    1dfe:	fd 01       	movw	r30, r26
    1e00:	0d c0       	rjmp	.+26     	; 0x1e1c <__udivmodsi4_ep>

00001e02 <__udivmodsi4_loop>:
    1e02:	aa 1f       	adc	r26, r26
    1e04:	bb 1f       	adc	r27, r27
    1e06:	ee 1f       	adc	r30, r30
    1e08:	ff 1f       	adc	r31, r31
    1e0a:	a2 17       	cp	r26, r18
    1e0c:	b3 07       	cpc	r27, r19
    1e0e:	e4 07       	cpc	r30, r20
    1e10:	f5 07       	cpc	r31, r21
    1e12:	20 f0       	brcs	.+8      	; 0x1e1c <__udivmodsi4_ep>
    1e14:	a2 1b       	sub	r26, r18
    1e16:	b3 0b       	sbc	r27, r19
    1e18:	e4 0b       	sbc	r30, r20
    1e1a:	f5 0b       	sbc	r31, r21

00001e1c <__udivmodsi4_ep>:
    1e1c:	66 1f       	adc	r22, r22
    1e1e:	77 1f       	adc	r23, r23
    1e20:	88 1f       	adc	r24, r24
    1e22:	99 1f       	adc	r25, r25
    1e24:	1a 94       	dec	r1
    1e26:	69 f7       	brne	.-38     	; 0x1e02 <__udivmodsi4_loop>
    1e28:	60 95       	com	r22
    1e2a:	70 95       	com	r23
    1e2c:	80 95       	com	r24
    1e2e:	90 95       	com	r25
    1e30:	9b 01       	movw	r18, r22
    1e32:	ac 01       	movw	r20, r24
    1e34:	bd 01       	movw	r22, r26
    1e36:	cf 01       	movw	r24, r30
    1e38:	08 95       	ret

00001e3a <setjmp>:
    1e3a:	dc 01       	movw	r26, r24
    1e3c:	2d 92       	st	X+, r2
    1e3e:	3d 92       	st	X+, r3
    1e40:	4d 92       	st	X+, r4
    1e42:	5d 92       	st	X+, r5
    1e44:	6d 92       	st	X+, r6
    1e46:	7d 92       	st	X+, r7
    1e48:	8d 92       	st	X+, r8
    1e4a:	9d 92       	st	X+, r9
    1e4c:	ad 92       	st	X+, r10
    1e4e:	bd 92       	st	X+, r11
    1e50:	cd 92       	st	X+, r12
    1e52:	dd 92       	st	X+, r13
    1e54:	ed 92       	st	X+, r14
    1e56:	fd 92       	st	X+, r15
    1e58:	0d 93       	st	X+, r16
    1e5a:	1d 93       	st	X+, r17
    1e5c:	cd 93       	st	X+, r28
    1e5e:	dd 93       	st	X+, r29
    1e60:	ff 91       	pop	r31
    1e62:	ef 91       	pop	r30
    1e64:	8d b7       	in	r24, 0x3d	; 61
    1e66:	8d 93       	st	X+, r24
    1e68:	8e b7       	in	r24, 0x3e	; 62
    1e6a:	8d 93       	st	X+, r24
    1e6c:	8f b7       	in	r24, 0x3f	; 63
    1e6e:	8d 93       	st	X+, r24
    1e70:	ed 93       	st	X+, r30
    1e72:	fd 93       	st	X+, r31
    1e74:	88 27       	eor	r24, r24
    1e76:	99 27       	eor	r25, r25
    1e78:	09 94       	ijmp

00001e7a <longjmp>:
    1e7a:	dc 01       	movw	r26, r24
    1e7c:	cb 01       	movw	r24, r22
    1e7e:	81 30       	cpi	r24, 0x01	; 1
    1e80:	91 05       	cpc	r25, r1
    1e82:	81 1d       	adc	r24, r1
    1e84:	2d 90       	ld	r2, X+
    1e86:	3d 90       	ld	r3, X+
    1e88:	4d 90       	ld	r4, X+
    1e8a:	5d 90       	ld	r5, X+
    1e8c:	6d 90       	ld	r6, X+
    1e8e:	7d 90       	ld	r7, X+
    1e90:	8d 90       	ld	r8, X+
    1e92:	9d 90       	ld	r9, X+
    1e94:	ad 90       	ld	r10, X+
    1e96:	bd 90       	ld	r11, X+
    1e98:	cd 90       	ld	r12, X+
    1e9a:	dd 90       	ld	r13, X+
    1e9c:	ed 90       	ld	r14, X+
    1e9e:	fd 90       	ld	r15, X+
    1ea0:	0d 91       	ld	r16, X+
    1ea2:	1d 91       	ld	r17, X+
    1ea4:	cd 91       	ld	r28, X+
    1ea6:	dd 91       	ld	r29, X+
    1ea8:	ed 91       	ld	r30, X+
    1eaa:	fd 91       	ld	r31, X+
    1eac:	0d 90       	ld	r0, X+
    1eae:	f8 94       	cli
    1eb0:	fe bf       	out	0x3e, r31	; 62
    1eb2:	0f be       	out	0x3f, r0	; 63
    1eb4:	ed bf       	out	0x3d, r30	; 61
    1eb6:	ed 91       	ld	r30, X+
    1eb8:	fd 91       	ld	r31, X+
    1eba:	09 94       	ijmp

00001ebc <_exit>:
    1ebc:	f8 94       	cli

00001ebe <__stop_program>:
    1ebe:	ff cf       	rjmp	.-2      	; 0x1ebe <__stop_program>
