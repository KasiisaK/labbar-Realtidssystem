
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00001fd2  00002066  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fd2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  00800184  00800184  000020ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000020ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000211c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  0000215c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b21  00000000  00000000  000023b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010d7  00000000  00000000  00004ed5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015da  00000000  00000000  00005fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000be8  00000000  00000000  00007588  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a06  00000000  00000000  00008170  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002894  00000000  00000000  00008b76  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000b40a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <__vector_1>
       8:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__vector_2>
       c:	0c 94 b9 04 	jmp	0x972	; 0x972 <__vector_3>
      10:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__vector_4>
      14:	0c 94 91 05 	jmp	0xb22	; 0xb22 <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 68 0c 	jmp	0x18d0	; 0x18d0 <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 16 0c 	jmp	0x182c	; 0x182c <__vector_9>
      28:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__vector_10>
      2c:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <__vector_11>
      30:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__vector_12>
      34:	0c 94 41 07 	jmp	0xe82	; 0xe82 <__vector_13>
      38:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__vector_14>
      3c:	0c 94 19 08 	jmp	0x1032	; 0x1032 <__vector_15>
      40:	0c 94 85 08 	jmp	0x110a	; 0x110a <__vector_16>
      44:	0c 94 f1 08 	jmp	0x11e2	; 0x11e2 <__vector_17>
      48:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <__vector_18>
      4c:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__vector_19>
      50:	0c 94 35 0a 	jmp	0x146a	; 0x146a <__vector_20>
      54:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <__vector_21>
      58:	0c 94 0d 0b 	jmp	0x161a	; 0x161a <__vector_22>
      5c:	8c 00       	.word	0x008c	; ????
      5e:	6e 00       	.word	0x006e	; ????
      60:	71 00       	.word	0x0071	; ????
      62:	74 00       	.word	0x0074	; ????
      64:	77 00       	.word	0x0077	; ????
      66:	7a 00       	.word	0x007a	; ????
      68:	7d 00       	.word	0x007d	; ????
      6a:	80 00       	.word	0x0080	; ????
      6c:	83 00       	.word	0x0083	; ????
      6e:	86 00       	.word	0x0086	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e2 ed       	ldi	r30, 0xD2	; 210
      84:	ff e1       	ldi	r31, 0x1F	; 31
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a4 38       	cpi	r26, 0x84	; 132
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	a4 e8       	ldi	r26, 0x84	; 132
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	af 3d       	cpi	r26, 0xDF	; 223
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <main>
      a6:	0c 94 e7 0f 	jmp	0x1fce	; 0x1fce <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <LCD_init>:
    if(self->activeGen) {
        return &(self->gen2);
    } else {
        return &(self->gen1);
    }
}
      ae:	8f e0       	ldi	r24, 0x0F	; 15
      b0:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__DATA_REGION_ORIGIN__+0x87>
      b4:	87 eb       	ldi	r24, 0xB7	; 183
      b6:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__DATA_REGION_ORIGIN__+0x85>
      ba:	87 e0       	ldi	r24, 0x07	; 7
      bc:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__DATA_REGION_ORIGIN__+0x86>
      c0:	80 ec       	ldi	r24, 0xC0	; 192
      c2:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__DATA_REGION_ORIGIN__+0x84>
      c6:	08 95       	ret

000000c8 <getSegmentForChar>:
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	fc 01       	movw	r30, r24
      cc:	f0 97       	sbiw	r30, 0x30	; 48
      ce:	ea 30       	cpi	r30, 0x0A	; 10
      d0:	f1 05       	cpc	r31, r1
      d2:	f8 f4       	brcc	.+62     	; 0x112 <getSegmentForChar+0x4a>
      d4:	e2 5d       	subi	r30, 0xD2	; 210
      d6:	ff 4f       	sbci	r31, 0xFF	; 255
      d8:	0c 94 7e 0f 	jmp	0x1efc	; 0x1efc <__tablejump2__>
      dc:	80 e4       	ldi	r24, 0x40	; 64
      de:	91 e0       	ldi	r25, 0x01	; 1
      e0:	08 95       	ret
      e2:	88 e3       	ldi	r24, 0x38	; 56
      e4:	91 e0       	ldi	r25, 0x01	; 1
      e6:	08 95       	ret
      e8:	80 e3       	ldi	r24, 0x30	; 48
      ea:	91 e0       	ldi	r25, 0x01	; 1
      ec:	08 95       	ret
      ee:	88 e2       	ldi	r24, 0x28	; 40
      f0:	91 e0       	ldi	r25, 0x01	; 1
      f2:	08 95       	ret
      f4:	80 e2       	ldi	r24, 0x20	; 32
      f6:	91 e0       	ldi	r25, 0x01	; 1
      f8:	08 95       	ret
      fa:	88 e1       	ldi	r24, 0x18	; 24
      fc:	91 e0       	ldi	r25, 0x01	; 1
      fe:	08 95       	ret
     100:	80 e1       	ldi	r24, 0x10	; 16
     102:	91 e0       	ldi	r25, 0x01	; 1
     104:	08 95       	ret
     106:	88 e0       	ldi	r24, 0x08	; 8
     108:	91 e0       	ldi	r25, 0x01	; 1
     10a:	08 95       	ret
     10c:	80 e0       	ldi	r24, 0x00	; 0
     10e:	91 e0       	ldi	r25, 0x01	; 1
     110:	08 95       	ret
     112:	84 e8       	ldi	r24, 0x84	; 132
     114:	91 e0       	ldi	r25, 0x01	; 1
     116:	08 95       	ret
     118:	88 e4       	ldi	r24, 0x48	; 72
     11a:	91 e0       	ldi	r25, 0x01	; 1
     11c:	08 95       	ret

0000011e <writeChar>:
     11e:	cf 93       	push	r28
     120:	66 30       	cpi	r22, 0x06	; 6
     122:	08 f0       	brcs	.+2      	; 0x126 <writeChar+0x8>
     124:	e4 c0       	rjmp	.+456    	; 0x2ee <writeChar+0x1d0>
     126:	c6 2f       	mov	r28, r22
     128:	0e 94 64 00 	call	0xc8	; 0xc8 <getSegmentForChar>
     12c:	fc 01       	movw	r30, r24
     12e:	c2 30       	cpi	r28, 0x02	; 2
     130:	09 f4       	brne	.+2      	; 0x134 <writeChar+0x16>
     132:	67 c0       	rjmp	.+206    	; 0x202 <writeChar+0xe4>
     134:	28 f4       	brcc	.+10     	; 0x140 <writeChar+0x22>
     136:	cc 23       	and	r28, r28
     138:	51 f0       	breq	.+20     	; 0x14e <writeChar+0x30>
     13a:	c1 30       	cpi	r28, 0x01	; 1
     13c:	29 f1       	breq	.+74     	; 0x188 <writeChar+0x6a>
     13e:	d7 c0       	rjmp	.+430    	; 0x2ee <writeChar+0x1d0>
     140:	c3 30       	cpi	r28, 0x03	; 3
     142:	09 f4       	brne	.+2      	; 0x146 <writeChar+0x28>
     144:	7b c0       	rjmp	.+246    	; 0x23c <writeChar+0x11e>
     146:	c4 30       	cpi	r28, 0x04	; 4
     148:	09 f4       	brne	.+2      	; 0x14c <writeChar+0x2e>
     14a:	b5 c0       	rjmp	.+362    	; 0x2b6 <writeChar+0x198>
     14c:	d0 c0       	rjmp	.+416    	; 0x2ee <writeChar+0x1d0>
     14e:	ac ee       	ldi	r26, 0xEC	; 236
     150:	b0 e0       	ldi	r27, 0x00	; 0
     152:	8c 91       	ld	r24, X
     154:	80 7f       	andi	r24, 0xF0	; 240
     156:	90 81       	ld	r25, Z
     158:	89 2b       	or	r24, r25
     15a:	8c 93       	st	X, r24
     15c:	a1 ef       	ldi	r26, 0xF1	; 241
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	8c 91       	ld	r24, X
     162:	80 7f       	andi	r24, 0xF0	; 240
     164:	92 81       	ldd	r25, Z+2	; 0x02
     166:	89 2b       	or	r24, r25
     168:	8c 93       	st	X, r24
     16a:	a6 ef       	ldi	r26, 0xF6	; 246
     16c:	b0 e0       	ldi	r27, 0x00	; 0
     16e:	8c 91       	ld	r24, X
     170:	80 7f       	andi	r24, 0xF0	; 240
     172:	94 81       	ldd	r25, Z+4	; 0x04
     174:	89 2b       	or	r24, r25
     176:	8c 93       	st	X, r24
     178:	ab ef       	ldi	r26, 0xFB	; 251
     17a:	b0 e0       	ldi	r27, 0x00	; 0
     17c:	8c 91       	ld	r24, X
     17e:	80 7f       	andi	r24, 0xF0	; 240
     180:	96 81       	ldd	r25, Z+6	; 0x06
     182:	89 2b       	or	r24, r25
     184:	8c 93       	st	X, r24
     186:	b3 c0       	rjmp	.+358    	; 0x2ee <writeChar+0x1d0>
     188:	ac ee       	ldi	r26, 0xEC	; 236
     18a:	b0 e0       	ldi	r27, 0x00	; 0
     18c:	2c 91       	ld	r18, X
     18e:	80 81       	ld	r24, Z
     190:	91 81       	ldd	r25, Z+1	; 0x01
     192:	82 95       	swap	r24
     194:	92 95       	swap	r25
     196:	90 7f       	andi	r25, 0xF0	; 240
     198:	98 27       	eor	r25, r24
     19a:	80 7f       	andi	r24, 0xF0	; 240
     19c:	98 27       	eor	r25, r24
     19e:	92 2f       	mov	r25, r18
     1a0:	9f 70       	andi	r25, 0x0F	; 15
     1a2:	89 2b       	or	r24, r25
     1a4:	8c 93       	st	X, r24
     1a6:	a1 ef       	ldi	r26, 0xF1	; 241
     1a8:	b0 e0       	ldi	r27, 0x00	; 0
     1aa:	2c 91       	ld	r18, X
     1ac:	82 81       	ldd	r24, Z+2	; 0x02
     1ae:	93 81       	ldd	r25, Z+3	; 0x03
     1b0:	82 95       	swap	r24
     1b2:	92 95       	swap	r25
     1b4:	90 7f       	andi	r25, 0xF0	; 240
     1b6:	98 27       	eor	r25, r24
     1b8:	80 7f       	andi	r24, 0xF0	; 240
     1ba:	98 27       	eor	r25, r24
     1bc:	92 2f       	mov	r25, r18
     1be:	9f 70       	andi	r25, 0x0F	; 15
     1c0:	89 2b       	or	r24, r25
     1c2:	8c 93       	st	X, r24
     1c4:	a6 ef       	ldi	r26, 0xF6	; 246
     1c6:	b0 e0       	ldi	r27, 0x00	; 0
     1c8:	2c 91       	ld	r18, X
     1ca:	84 81       	ldd	r24, Z+4	; 0x04
     1cc:	95 81       	ldd	r25, Z+5	; 0x05
     1ce:	82 95       	swap	r24
     1d0:	92 95       	swap	r25
     1d2:	90 7f       	andi	r25, 0xF0	; 240
     1d4:	98 27       	eor	r25, r24
     1d6:	80 7f       	andi	r24, 0xF0	; 240
     1d8:	98 27       	eor	r25, r24
     1da:	92 2f       	mov	r25, r18
     1dc:	9f 70       	andi	r25, 0x0F	; 15
     1de:	89 2b       	or	r24, r25
     1e0:	8c 93       	st	X, r24
     1e2:	ab ef       	ldi	r26, 0xFB	; 251
     1e4:	b0 e0       	ldi	r27, 0x00	; 0
     1e6:	2c 91       	ld	r18, X
     1e8:	86 81       	ldd	r24, Z+6	; 0x06
     1ea:	97 81       	ldd	r25, Z+7	; 0x07
     1ec:	82 95       	swap	r24
     1ee:	92 95       	swap	r25
     1f0:	90 7f       	andi	r25, 0xF0	; 240
     1f2:	98 27       	eor	r25, r24
     1f4:	80 7f       	andi	r24, 0xF0	; 240
     1f6:	98 27       	eor	r25, r24
     1f8:	92 2f       	mov	r25, r18
     1fa:	9f 70       	andi	r25, 0x0F	; 15
     1fc:	89 2b       	or	r24, r25
     1fe:	8c 93       	st	X, r24
     200:	76 c0       	rjmp	.+236    	; 0x2ee <writeChar+0x1d0>
     202:	ad ee       	ldi	r26, 0xED	; 237
     204:	b0 e0       	ldi	r27, 0x00	; 0
     206:	8c 91       	ld	r24, X
     208:	80 7f       	andi	r24, 0xF0	; 240
     20a:	90 81       	ld	r25, Z
     20c:	89 2b       	or	r24, r25
     20e:	8c 93       	st	X, r24
     210:	a2 ef       	ldi	r26, 0xF2	; 242
     212:	b0 e0       	ldi	r27, 0x00	; 0
     214:	8c 91       	ld	r24, X
     216:	80 7f       	andi	r24, 0xF0	; 240
     218:	92 81       	ldd	r25, Z+2	; 0x02
     21a:	89 2b       	or	r24, r25
     21c:	8c 93       	st	X, r24
     21e:	a7 ef       	ldi	r26, 0xF7	; 247
     220:	b0 e0       	ldi	r27, 0x00	; 0
     222:	8c 91       	ld	r24, X
     224:	80 7f       	andi	r24, 0xF0	; 240
     226:	94 81       	ldd	r25, Z+4	; 0x04
     228:	89 2b       	or	r24, r25
     22a:	8c 93       	st	X, r24
     22c:	ac ef       	ldi	r26, 0xFC	; 252
     22e:	b0 e0       	ldi	r27, 0x00	; 0
     230:	8c 91       	ld	r24, X
     232:	80 7f       	andi	r24, 0xF0	; 240
     234:	96 81       	ldd	r25, Z+6	; 0x06
     236:	89 2b       	or	r24, r25
     238:	8c 93       	st	X, r24
     23a:	59 c0       	rjmp	.+178    	; 0x2ee <writeChar+0x1d0>
     23c:	ad ee       	ldi	r26, 0xED	; 237
     23e:	b0 e0       	ldi	r27, 0x00	; 0
     240:	2c 91       	ld	r18, X
     242:	80 81       	ld	r24, Z
     244:	91 81       	ldd	r25, Z+1	; 0x01
     246:	82 95       	swap	r24
     248:	92 95       	swap	r25
     24a:	90 7f       	andi	r25, 0xF0	; 240
     24c:	98 27       	eor	r25, r24
     24e:	80 7f       	andi	r24, 0xF0	; 240
     250:	98 27       	eor	r25, r24
     252:	92 2f       	mov	r25, r18
     254:	9f 70       	andi	r25, 0x0F	; 15
     256:	89 2b       	or	r24, r25
     258:	8c 93       	st	X, r24
     25a:	a2 ef       	ldi	r26, 0xF2	; 242
     25c:	b0 e0       	ldi	r27, 0x00	; 0
     25e:	2c 91       	ld	r18, X
     260:	82 81       	ldd	r24, Z+2	; 0x02
     262:	93 81       	ldd	r25, Z+3	; 0x03
     264:	82 95       	swap	r24
     266:	92 95       	swap	r25
     268:	90 7f       	andi	r25, 0xF0	; 240
     26a:	98 27       	eor	r25, r24
     26c:	80 7f       	andi	r24, 0xF0	; 240
     26e:	98 27       	eor	r25, r24
     270:	92 2f       	mov	r25, r18
     272:	9f 70       	andi	r25, 0x0F	; 15
     274:	89 2b       	or	r24, r25
     276:	8c 93       	st	X, r24
     278:	a7 ef       	ldi	r26, 0xF7	; 247
     27a:	b0 e0       	ldi	r27, 0x00	; 0
     27c:	2c 91       	ld	r18, X
     27e:	84 81       	ldd	r24, Z+4	; 0x04
     280:	95 81       	ldd	r25, Z+5	; 0x05
     282:	82 95       	swap	r24
     284:	92 95       	swap	r25
     286:	90 7f       	andi	r25, 0xF0	; 240
     288:	98 27       	eor	r25, r24
     28a:	80 7f       	andi	r24, 0xF0	; 240
     28c:	98 27       	eor	r25, r24
     28e:	92 2f       	mov	r25, r18
     290:	9f 70       	andi	r25, 0x0F	; 15
     292:	89 2b       	or	r24, r25
     294:	8c 93       	st	X, r24
     296:	ac ef       	ldi	r26, 0xFC	; 252
     298:	b0 e0       	ldi	r27, 0x00	; 0
     29a:	2c 91       	ld	r18, X
     29c:	86 81       	ldd	r24, Z+6	; 0x06
     29e:	97 81       	ldd	r25, Z+7	; 0x07
     2a0:	82 95       	swap	r24
     2a2:	92 95       	swap	r25
     2a4:	90 7f       	andi	r25, 0xF0	; 240
     2a6:	98 27       	eor	r25, r24
     2a8:	80 7f       	andi	r24, 0xF0	; 240
     2aa:	98 27       	eor	r25, r24
     2ac:	92 2f       	mov	r25, r18
     2ae:	9f 70       	andi	r25, 0x0F	; 15
     2b0:	89 2b       	or	r24, r25
     2b2:	8c 93       	st	X, r24
     2b4:	1c c0       	rjmp	.+56     	; 0x2ee <writeChar+0x1d0>
     2b6:	ae ee       	ldi	r26, 0xEE	; 238
     2b8:	b0 e0       	ldi	r27, 0x00	; 0
     2ba:	8c 91       	ld	r24, X
     2bc:	80 7f       	andi	r24, 0xF0	; 240
     2be:	90 81       	ld	r25, Z
     2c0:	89 2b       	or	r24, r25
     2c2:	8c 93       	st	X, r24
     2c4:	a3 ef       	ldi	r26, 0xF3	; 243
     2c6:	b0 e0       	ldi	r27, 0x00	; 0
     2c8:	8c 91       	ld	r24, X
     2ca:	80 7f       	andi	r24, 0xF0	; 240
     2cc:	92 81       	ldd	r25, Z+2	; 0x02
     2ce:	89 2b       	or	r24, r25
     2d0:	8c 93       	st	X, r24
     2d2:	a8 ef       	ldi	r26, 0xF8	; 248
     2d4:	b0 e0       	ldi	r27, 0x00	; 0
     2d6:	8c 91       	ld	r24, X
     2d8:	80 7f       	andi	r24, 0xF0	; 240
     2da:	94 81       	ldd	r25, Z+4	; 0x04
     2dc:	89 2b       	or	r24, r25
     2de:	8c 93       	st	X, r24
     2e0:	ad ef       	ldi	r26, 0xFD	; 253
     2e2:	b0 e0       	ldi	r27, 0x00	; 0
     2e4:	8c 91       	ld	r24, X
     2e6:	80 7f       	andi	r24, 0xF0	; 240
     2e8:	96 81       	ldd	r25, Z+6	; 0x06
     2ea:	89 2b       	or	r24, r25
     2ec:	8c 93       	st	X, r24
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <printAt>:
     2f2:	8f 92       	push	r8
     2f4:	9f 92       	push	r9
     2f6:	af 92       	push	r10
     2f8:	bf 92       	push	r11
     2fa:	cf 92       	push	r12
     2fc:	df 92       	push	r13
     2fe:	ef 92       	push	r14
     300:	ff 92       	push	r15
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
     306:	4b 01       	movw	r8, r22
     308:	5c 01       	movw	r10, r24
     30a:	ea 01       	movw	r28, r20
     30c:	24 e6       	ldi	r18, 0x64	; 100
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	40 e0       	ldi	r20, 0x00	; 0
     312:	50 e0       	ldi	r21, 0x00	; 0
     314:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__divmodsi4>
     318:	0f 2e       	mov	r0, r31
     31a:	fa e0       	ldi	r31, 0x0A	; 10
     31c:	cf 2e       	mov	r12, r31
     31e:	d1 2c       	mov	r13, r1
     320:	e1 2c       	mov	r14, r1
     322:	f1 2c       	mov	r15, r1
     324:	f0 2d       	mov	r31, r0
     326:	a7 01       	movw	r20, r14
     328:	96 01       	movw	r18, r12
     32a:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__divmodsi4>
     32e:	6c 2f       	mov	r22, r28
     330:	80 e3       	ldi	r24, 0x30	; 48
     332:	82 0f       	add	r24, r18
     334:	0e 94 8f 00 	call	0x11e	; 0x11e <writeChar>
     338:	21 96       	adiw	r28, 0x01	; 1
     33a:	c5 01       	movw	r24, r10
     33c:	b4 01       	movw	r22, r8
     33e:	a7 01       	movw	r20, r14
     340:	96 01       	movw	r18, r12
     342:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__divmodsi4>
     346:	86 2f       	mov	r24, r22
     348:	6c 2f       	mov	r22, r28
     34a:	80 5d       	subi	r24, 0xD0	; 208
     34c:	0e 94 8f 00 	call	0x11e	; 0x11e <writeChar>
     350:	df 91       	pop	r29
     352:	cf 91       	pop	r28
     354:	ff 90       	pop	r15
     356:	ef 90       	pop	r14
     358:	df 90       	pop	r13
     35a:	cf 90       	pop	r12
     35c:	bf 90       	pop	r11
     35e:	af 90       	pop	r10
     360:	9f 90       	pop	r9
     362:	8f 90       	pop	r8
     364:	08 95       	ret

00000366 <updateOneOrTwo>:
     366:	ec ee       	ldi	r30, 0xEC	; 236
     368:	f0 e0       	ldi	r31, 0x00	; 0
     36a:	20 81       	ld	r18, Z
     36c:	2b 7b       	andi	r18, 0xBB	; 187
     36e:	20 83       	st	Z, r18
     370:	fc 01       	movw	r30, r24
     372:	80 85       	ldd	r24, Z+8	; 0x08
     374:	91 85       	ldd	r25, Z+9	; 0x09
     376:	89 2b       	or	r24, r25
     378:	31 f0       	breq	.+12     	; 0x386 <updateOneOrTwo+0x20>
     37a:	ec ee       	ldi	r30, 0xEC	; 236
     37c:	f0 e0       	ldi	r31, 0x00	; 0
     37e:	80 81       	ld	r24, Z
     380:	80 64       	ori	r24, 0x40	; 64
     382:	80 83       	st	Z, r24
     384:	08 95       	ret
     386:	ec ee       	ldi	r30, 0xEC	; 236
     388:	f0 e0       	ldi	r31, 0x00	; 0
     38a:	80 81       	ld	r24, Z
     38c:	84 60       	ori	r24, 0x04	; 4
     38e:	80 83       	st	Z, r24
     390:	08 95       	ret

00000392 <updateDisplay>:
     392:	0f 93       	push	r16
     394:	1f 93       	push	r17
     396:	cf 93       	push	r28
     398:	df 93       	push	r29
     39a:	ec 01       	movw	r28, r24
     39c:	0e 94 b3 01 	call	0x366	; 0x366 <updateOneOrTwo>
     3a0:	40 e0       	ldi	r20, 0x00	; 0
     3a2:	50 e0       	ldi	r21, 0x00	; 0
     3a4:	67 e1       	ldi	r22, 0x17	; 23
     3a6:	73 e0       	ldi	r23, 0x03	; 3
     3a8:	8c 81       	ldd	r24, Y+4	; 0x04
     3aa:	9d 81       	ldd	r25, Y+5	; 0x05
     3ac:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <sync>
     3b0:	8c 01       	movw	r16, r24
     3b2:	40 e0       	ldi	r20, 0x00	; 0
     3b4:	50 e0       	ldi	r21, 0x00	; 0
     3b6:	67 e1       	ldi	r22, 0x17	; 23
     3b8:	73 e0       	ldi	r23, 0x03	; 3
     3ba:	8e 81       	ldd	r24, Y+6	; 0x06
     3bc:	9f 81       	ldd	r25, Y+7	; 0x07
     3be:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <sync>
     3c2:	ec 01       	movw	r28, r24
     3c4:	b8 01       	movw	r22, r16
     3c6:	11 0f       	add	r17, r17
     3c8:	88 0b       	sbc	r24, r24
     3ca:	99 0b       	sbc	r25, r25
     3cc:	40 e0       	ldi	r20, 0x00	; 0
     3ce:	50 e0       	ldi	r21, 0x00	; 0
     3d0:	0e 94 79 01 	call	0x2f2	; 0x2f2 <printAt>
     3d4:	be 01       	movw	r22, r28
     3d6:	dd 0f       	add	r29, r29
     3d8:	88 0b       	sbc	r24, r24
     3da:	99 0b       	sbc	r25, r25
     3dc:	43 e0       	ldi	r20, 0x03	; 3
     3de:	50 e0       	ldi	r21, 0x00	; 0
     3e0:	0e 94 79 01 	call	0x2f2	; 0x2f2 <printAt>
     3e4:	df 91       	pop	r29
     3e6:	cf 91       	pop	r28
     3e8:	1f 91       	pop	r17
     3ea:	0f 91       	pop	r16
     3ec:	08 95       	ret

000003ee <adjustFrequency>:

void adjustFrequency(GUI *self, int delta) {
     3ee:	cf 92       	push	r12
     3f0:	df 92       	push	r13
     3f2:	ef 92       	push	r14
     3f4:	ff 92       	push	r15
     3f6:	0f 93       	push	r16
     3f8:	1f 93       	push	r17
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	8c 01       	movw	r16, r24
     400:	eb 01       	movw	r28, r22
	// Get right target gen
	PulseGen *target = getCurrentGen(self);
	int newFreq = SYNC(self->gen1, getFrequency, 0) + delta;
     402:	40 e0       	ldi	r20, 0x00	; 0
     404:	50 e0       	ldi	r21, 0x00	; 0
     406:	67 e1       	ldi	r22, 0x17	; 23
     408:	73 e0       	ldi	r23, 0x03	; 3
     40a:	fc 01       	movw	r30, r24
     40c:	84 81       	ldd	r24, Z+4	; 0x04
     40e:	95 81       	ldd	r25, Z+5	; 0x05
     410:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <sync>
     414:	ac 01       	movw	r20, r24
     416:	4c 0f       	add	r20, r28
     418:	5d 1f       	adc	r21, r29
	if (newFreq < 0) newFreq = 0;
	// Update everything
	SYNC(self->gen1, setFrequency, newFreq);
     41a:	55 23       	and	r21, r21
     41c:	14 f4       	brge	.+4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     41e:	40 e0       	ldi	r20, 0x00	; 0
     420:	50 e0       	ldi	r21, 0x00	; 0
     422:	67 e0       	ldi	r22, 0x07	; 7
     424:	73 e0       	ldi	r23, 0x03	; 3
     426:	f8 01       	movw	r30, r16
     428:	84 81       	ldd	r24, Z+4	; 0x04
     42a:	95 81       	ldd	r25, Z+5	; 0x05
     42c:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <sync>
	ASYNC(self, updateDisplay, 0);
     430:	c1 2c       	mov	r12, r1
     432:	d1 2c       	mov	r13, r1
     434:	0f 2e       	mov	r0, r31
     436:	f9 ec       	ldi	r31, 0xC9	; 201
     438:	ef 2e       	mov	r14, r31
     43a:	f1 e0       	ldi	r31, 0x01	; 1
     43c:	ff 2e       	mov	r15, r31
     43e:	f0 2d       	mov	r31, r0
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	a9 01       	movw	r20, r18
     446:	60 e0       	ldi	r22, 0x00	; 0
     448:	70 e0       	ldi	r23, 0x00	; 0
     44a:	cb 01       	movw	r24, r22
     44c:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <async>
}
     450:	df 91       	pop	r29
     452:	cf 91       	pop	r28
     454:	1f 91       	pop	r17
     456:	0f 91       	pop	r16
     458:	ff 90       	pop	r15
     45a:	ef 90       	pop	r14
     45c:	df 90       	pop	r13
     45e:	cf 90       	pop	r12
     460:	08 95       	ret

00000462 <switchFocus>:
	int gen2Freq = SYNC(self->gen2, getFrequency, 0);
    printAt(gen1Freq, 0); //gen1 hz at pos 0-1
    printAt(gen2Freq, 3); //gen2 hz at pos 3-4	
}

void switchFocus(GUI *self, int newActive) {
     462:	cf 92       	push	r12
     464:	df 92       	push	r13
     466:	ef 92       	push	r14
     468:	ff 92       	push	r15
     46a:	0f 93       	push	r16
     46c:	1f 93       	push	r17
	self->activeGen = newActive;
     46e:	fc 01       	movw	r30, r24
     470:	71 87       	std	Z+9, r23	; 0x09
     472:	60 87       	std	Z+8, r22	; 0x08
	PulseGen *target = getCurrentGen(self);
	//SYNC(target, toggle, 0)
	ASYNC(self, updateDisplay, 0);
     474:	c1 2c       	mov	r12, r1
     476:	d1 2c       	mov	r13, r1
     478:	0f 2e       	mov	r0, r31
     47a:	f9 ec       	ldi	r31, 0xC9	; 201
     47c:	ef 2e       	mov	r14, r31
     47e:	f1 e0       	ldi	r31, 0x01	; 1
     480:	ff 2e       	mov	r15, r31
     482:	f0 2d       	mov	r31, r0
     484:	8c 01       	movw	r16, r24
     486:	20 e0       	ldi	r18, 0x00	; 0
     488:	30 e0       	ldi	r19, 0x00	; 0
     48a:	a9 01       	movw	r20, r18
     48c:	60 e0       	ldi	r22, 0x00	; 0
     48e:	70 e0       	ldi	r23, 0x00	; 0
     490:	cb 01       	movw	r24, r22
     492:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <async>
}
     496:	1f 91       	pop	r17
     498:	0f 91       	pop	r16
     49a:	ff 90       	pop	r15
     49c:	ef 90       	pop	r14
     49e:	df 90       	pop	r13
     4a0:	cf 90       	pop	r12
     4a2:	08 95       	ret

000004a4 <saveRestore>:

void saveRestore(GUI *self) {
     4a4:	cf 92       	push	r12
     4a6:	df 92       	push	r13
     4a8:	ef 92       	push	r14
     4aa:	ff 92       	push	r15
     4ac:	0f 93       	push	r16
     4ae:	1f 93       	push	r17
     4b0:	cf 93       	push	r28
     4b2:	df 93       	push	r29
     4b4:	8c 01       	movw	r16, r24
	}
}

PulseGen* getCurrentGen(GUI *self) {
    //activeGen = 1 => gen2
    if(self->activeGen) {
     4b6:	fc 01       	movw	r30, r24
     4b8:	80 85       	ldd	r24, Z+8	; 0x08
     4ba:	91 85       	ldd	r25, Z+9	; 0x09
     4bc:	89 2b       	or	r24, r25
     4be:	19 f0       	breq	.+6      	; 0x4c6 <saveRestore+0x22>
        return &(self->gen2);
     4c0:	e8 01       	movw	r28, r16
     4c2:	26 96       	adiw	r28, 0x06	; 6
     4c4:	02 c0       	rjmp	.+4      	; 0x4ca <saveRestore+0x26>
    } else {
        return &(self->gen1);
     4c6:	e8 01       	movw	r28, r16
     4c8:	24 96       	adiw	r28, 0x04	; 4
	ASYNC(self, updateDisplay, 0);
}

void saveRestore(GUI *self) {
	PulseGen *target = getCurrentGen(self);
	if (target->frequency == 0) {
     4ca:	88 85       	ldd	r24, Y+8	; 0x08
     4cc:	99 85       	ldd	r25, Y+9	; 0x09
     4ce:	89 2b       	or	r24, r25
     4d0:	41 f4       	brne	.+16     	; 0x4e2 <saveRestore+0x3e>
		SYNC(target, restore, 0);
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	61 e1       	ldi	r22, 0x11	; 17
     4d8:	73 e0       	ldi	r23, 0x03	; 3
     4da:	ce 01       	movw	r24, r28
     4dc:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <sync>
     4e0:	0e c0       	rjmp	.+28     	; 0x4fe <saveRestore+0x5a>
		} else {
		SYNC(target, save, 0);
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	6b e0       	ldi	r22, 0x0B	; 11
     4e8:	73 e0       	ldi	r23, 0x03	; 3
     4ea:	ce 01       	movw	r24, r28
     4ec:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <sync>
		SYNC(target, setFrequency, 0);
     4f0:	40 e0       	ldi	r20, 0x00	; 0
     4f2:	50 e0       	ldi	r21, 0x00	; 0
     4f4:	67 e0       	ldi	r22, 0x07	; 7
     4f6:	73 e0       	ldi	r23, 0x03	; 3
     4f8:	ce 01       	movw	r24, r28
     4fa:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <sync>
	}
	ASYNC(self, updateDisplay, 0);
     4fe:	c1 2c       	mov	r12, r1
     500:	d1 2c       	mov	r13, r1
     502:	0f 2e       	mov	r0, r31
     504:	f9 ec       	ldi	r31, 0xC9	; 201
     506:	ef 2e       	mov	r14, r31
     508:	f1 e0       	ldi	r31, 0x01	; 1
     50a:	ff 2e       	mov	r15, r31
     50c:	f0 2d       	mov	r31, r0
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	a9 01       	movw	r20, r18
     514:	60 e0       	ldi	r22, 0x00	; 0
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	cb 01       	movw	r24, r22
     51a:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <async>
     51e:	df 91       	pop	r29
     520:	cf 91       	pop	r28
     522:	1f 91       	pop	r17
     524:	0f 91       	pop	r16
     526:	ff 90       	pop	r15
     528:	ef 90       	pop	r14
     52a:	df 90       	pop	r13
     52c:	cf 90       	pop	r12
     52e:	08 95       	ret

00000530 <joystickInit>:
#include "PulseGen.h"


void joystickInit() {
    //sätter på upp, ner och inåt som input
    PORTB = PORTB | 0b11010000;
     530:	85 b1       	in	r24, 0x05	; 5
     532:	80 6d       	ori	r24, 0xD0	; 208
     534:	85 b9       	out	0x05, r24	; 5
    //sätter på höger och vänster  som input
    PORTE = PORTE | 0b00001100;
     536:	8e b1       	in	r24, 0x0e	; 14
     538:	8c 60       	ori	r24, 0x0C	; 12
     53a:	8e b9       	out	0x0e, r24	; 14
    //DDRE = 0b01010000;
    //sätter på upp,ner,in (15) hög,ven (14) //sida 53 AVr..169 nånitng
    EIMSK = EIMSK | (1<<PCINT15) | (1<<PCINT14);
     53c:	8d b3       	in	r24, 0x1d	; 29
     53e:	80 6c       	ori	r24, 0xC0	; 192
     540:	8d bb       	out	0x1d, r24	; 29

    //sätter på upp, ner och inåt på joystick (som interrupt)
    PCMSK1 = PCMSK1 | (1<<PCINT15) | (1<<PCINT14) | (1<<PCINT12);
     542:	ec e6       	ldi	r30, 0x6C	; 108
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	80 81       	ld	r24, Z
     548:	80 6d       	ori	r24, 0xD0	; 208
     54a:	80 83       	st	Z, r24
    //sätter på höger och vänster på joystick (som interrupt)
    PCMSK0 = PCMSK0 | (1<<PCINT3) | (1<<PCINT2);
     54c:	eb e6       	ldi	r30, 0x6B	; 107
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	80 81       	ld	r24, Z
     552:	8c 60       	ori	r24, 0x0C	; 12
     554:	80 83       	st	Z, r24
     556:	08 95       	ret

00000558 <interruptPinB>:
}


// Joystick input handler
void interruptPinB(JoystickHandler *self) { 
     558:	cf 93       	push	r28
     55a:	df 93       	push	r29
     55c:	ec 01       	movw	r28, r24
    if((PINB & 0b10000000) >> 7 == 0){ //down press on joystick
     55e:	1f 99       	sbic	0x03, 7	; 3
     560:	06 c0       	rjmp	.+12     	; 0x56e <interruptPinB+0x16>
        adjustFrequency(self->gui, -1);
     562:	6f ef       	ldi	r22, 0xFF	; 255
     564:	7f ef       	ldi	r23, 0xFF	; 255
     566:	8c 81       	ldd	r24, Y+4	; 0x04
     568:	9d 81       	ldd	r25, Y+5	; 0x05
     56a:	0e 94 f7 01 	call	0x3ee	; 0x3ee <adjustFrequency>
    }

    if((PINB & 0b01000000) >> 6 == 0){ //up press on joystick
     56e:	1e 99       	sbic	0x03, 6	; 3
     570:	06 c0       	rjmp	.+12     	; 0x57e <interruptPinB+0x26>
        adjustFrequency(self->gui, 1);
     572:	61 e0       	ldi	r22, 0x01	; 1
     574:	70 e0       	ldi	r23, 0x00	; 0
     576:	8c 81       	ldd	r24, Y+4	; 0x04
     578:	9d 81       	ldd	r25, Y+5	; 0x05
     57a:	0e 94 f7 01 	call	0x3ee	; 0x3ee <adjustFrequency>
    }

    if((PINB & 0b00010000) >> 4 == 0){ //middle press
     57e:	1c 99       	sbic	0x03, 4	; 3
     580:	04 c0       	rjmp	.+8      	; 0x58a <interruptPinB+0x32>
        saveRestore(self->gui);
     582:	8c 81       	ldd	r24, Y+4	; 0x04
     584:	9d 81       	ldd	r25, Y+5	; 0x05
     586:	0e 94 52 02 	call	0x4a4	; 0x4a4 <saveRestore>
    }
}
     58a:	df 91       	pop	r29
     58c:	cf 91       	pop	r28
     58e:	08 95       	ret

00000590 <interruptPinE>:

void interruptPinE(JoystickHandler *self) {  
     590:	cf 93       	push	r28
     592:	df 93       	push	r29
     594:	ec 01       	movw	r28, r24
    if((PINE & 0b00000100) >> 2 == 0){ //left press
     596:	62 99       	sbic	0x0c, 2	; 12
     598:	06 c0       	rjmp	.+12     	; 0x5a6 <interruptPinE+0x16>
       switchFocus(self->gui, 0);
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	70 e0       	ldi	r23, 0x00	; 0
     59e:	8c 81       	ldd	r24, Y+4	; 0x04
     5a0:	9d 81       	ldd	r25, Y+5	; 0x05
     5a2:	0e 94 31 02 	call	0x462	; 0x462 <switchFocus>
    }

    if((PINE & 0b00001000) >> 3 == 0){  //right press
     5a6:	63 99       	sbic	0x0c, 3	; 12
     5a8:	06 c0       	rjmp	.+12     	; 0x5b6 <interruptPinE+0x26>
       switchFocus(self->gui, 1);
     5aa:	61 e0       	ldi	r22, 0x01	; 1
     5ac:	70 e0       	ldi	r23, 0x00	; 0
     5ae:	8c 81       	ldd	r24, Y+4	; 0x04
     5b0:	9d 81       	ldd	r25, Y+5	; 0x05
     5b2:	0e 94 31 02 	call	0x462	; 0x462 <switchFocus>
    }
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	08 95       	ret

000005bc <sysInit>:
GUI gui = initGUI(&gen1, &gen2);
JoystickHandler joystick = initJoystickHandler(&gui);

void sysInit(){
    // Clock Prescale Register "maximum speed"
	CLKPR = 0b10000000; // Clock Prescaler Change Enable
     5bc:	e1 e6       	ldi	r30, 0x61	; 97
     5be:	f0 e0       	ldi	r31, 0x00	; 0
     5c0:	80 e8       	ldi	r24, 0x80	; 128
     5c2:	80 83       	st	Z, r24
	CLKPR = 0b00000000; // Set 0 for sysclock
     5c4:	10 82       	st	Z, r1
     5c6:	08 95       	ret

000005c8 <pinOutputInit>:
}

void pinOutputInit(){
    // Initialize Port E as output for PE4 and PE6
	DDRE |= (1 << PE4) | (1 << PE6);
     5c8:	8d b1       	in	r24, 0x0d	; 13
     5ca:	80 65       	ori	r24, 0x50	; 80
     5cc:	8d b9       	out	0x0d, r24	; 13
     5ce:	08 95       	ret

000005d0 <main>:
}


int main() {
    sysInit();
     5d0:	0e 94 de 02 	call	0x5bc	; 0x5bc <sysInit>
    pinOutputInit();
     5d4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <pinOutputInit>
    joystickInit();
     5d8:	0e 94 98 02 	call	0x530	; 0x530 <joystickInit>
    LCD_init();
     5dc:	0e 94 57 00 	call	0xae	; 0xae <LCD_init>
	//LCDDR0 = 0b01000100;
	//LCDDR0 = 0b01000100;
	
    // Instal interupt handler
    //when the joystick's vertical state changes
    INSTALL(&joystick, interruptPinB, IRQ_PCINT1);
     5e0:	42 e0       	ldi	r20, 0x02	; 2
     5e2:	6c ea       	ldi	r22, 0xAC	; 172
     5e4:	72 e0       	ldi	r23, 0x02	; 2
     5e6:	80 e5       	ldi	r24, 0x50	; 80
     5e8:	91 e0       	ldi	r25, 0x01	; 1
     5ea:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <install>
    //when the joystick's horizontal (minus middle) state changes
    INSTALL(&joystick, interruptPinE, IRQ_PCINT0);
     5ee:	41 e0       	ldi	r20, 0x01	; 1
     5f0:	68 ec       	ldi	r22, 0xC8	; 200
     5f2:	72 e0       	ldi	r23, 0x02	; 2
     5f4:	80 e5       	ldi	r24, 0x50	; 80
     5f6:	91 e0       	ldi	r25, 0x01	; 1
     5f8:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <install>
    
    // Start kernel
    return TINYTIMBER(&gui, NULL, NULL);
     5fc:	40 e0       	ldi	r20, 0x00	; 0
     5fe:	50 e0       	ldi	r21, 0x00	; 0
     600:	60 e0       	ldi	r22, 0x00	; 0
     602:	70 e0       	ldi	r23, 0x00	; 0
     604:	86 e5       	ldi	r24, 0x56	; 86
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <tinytimber>
}
     60c:	08 95       	ret

0000060e <setFrequency>:
#include "PortWrite.h"
#include "TinyTimber.h"


void setFrequency(PulseGen *self, int freq) {
	self->frequency = freq;
     60e:	fc 01       	movw	r30, r24
     610:	71 87       	std	Z+9, r23	; 0x09
     612:	60 87       	std	Z+8, r22	; 0x08
     614:	08 95       	ret

00000616 <save>:
    }
}

// Saves the freq
void save(PulseGen *self) {
	self->saved_freq = self->frequency;
     616:	fc 01       	movw	r30, r24
     618:	20 85       	ldd	r18, Z+8	; 0x08
     61a:	31 85       	ldd	r19, Z+9	; 0x09
     61c:	33 87       	std	Z+11, r19	; 0x0b
     61e:	22 87       	std	Z+10, r18	; 0x0a
     620:	08 95       	ret

00000622 <restore>:
}

// Restores freq to last saved
void restore(PulseGen *self) {
	self->frequency = self->saved_freq;
     622:	fc 01       	movw	r30, r24
     624:	22 85       	ldd	r18, Z+10	; 0x0a
     626:	33 85       	ldd	r19, Z+11	; 0x0b
     628:	31 87       	std	Z+9, r19	; 0x09
     62a:	20 87       	std	Z+8, r18	; 0x08
     62c:	08 95       	ret

0000062e <getFrequency>:
}

int getFrequency(PulseGen *self) {
	return self->frequency;
}
     62e:	fc 01       	movw	r30, r24
     630:	80 85       	ldd	r24, Z+8	; 0x08
     632:	91 85       	ldd	r25, Z+9	; 0x09
     634:	08 95       	ret

00000636 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     636:	cf 93       	push	r28
     638:	df 93       	push	r29
     63a:	00 d0       	rcall	.+0      	; 0x63c <initialize+0x6>
     63c:	00 d0       	rcall	.+0      	; 0x63e <initialize+0x8>
     63e:	cd b7       	in	r28, 0x3d	; 61
     640:	de b7       	in	r29, 0x3e	; 62
     642:	8f e7       	ldi	r24, 0x7F	; 127
     644:	92 e0       	ldi	r25, 0x02	; 2
     646:	2f e5       	ldi	r18, 0x5F	; 95
     648:	33 e0       	ldi	r19, 0x03	; 3
     64a:	fc 01       	movw	r30, r24
     64c:	70 97       	sbiw	r30, 0x10	; 16
     64e:	91 83       	std	Z+1, r25	; 0x01
     650:	80 83       	st	Z, r24
     652:	40 96       	adiw	r24, 0x10	; 16
     654:	82 17       	cp	r24, r18
     656:	93 07       	cpc	r25, r19
     658:	c1 f7       	brne	.-16     	; 0x64a <initialize+0x14>
     65a:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <messages+0xe1>
     65e:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <messages+0xe0>
     662:	ea eb       	ldi	r30, 0xBA	; 186
     664:	f1 e0       	ldi	r31, 0x01	; 1
     666:	87 ed       	ldi	r24, 0xD7	; 215
     668:	91 e0       	ldi	r25, 0x01	; 1
     66a:	91 83       	std	Z+1, r25	; 0x01
     66c:	80 83       	st	Z, r24
     66e:	84 ef       	ldi	r24, 0xF4	; 244
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	96 8f       	std	Z+30, r25	; 0x1e
     674:	85 8f       	std	Z+29, r24	; 0x1d
     676:	a1 e1       	ldi	r26, 0x11	; 17
     678:	b2 e0       	ldi	r27, 0x02	; 2
     67a:	b3 af       	std	Z+59, r27	; 0x3b
     67c:	a2 af       	std	Z+58, r26	; 0x3a
     67e:	1d 92       	st	X+, r1
     680:	1c 92       	st	X, r1
     682:	fa 83       	std	Y+2, r31	; 0x02
     684:	e9 83       	std	Y+1, r30	; 0x01
     686:	eb eb       	ldi	r30, 0xBB	; 187
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	fc 83       	std	Y+4, r31	; 0x04
     68c:	eb 83       	std	Y+3, r30	; 0x03
     68e:	89 81       	ldd	r24, Y+1	; 0x01
     690:	9a 81       	ldd	r25, Y+2	; 0x02
     692:	06 96       	adiw	r24, 0x06	; 6
     694:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <setjmp>
     698:	8b 81       	ldd	r24, Y+3	; 0x03
     69a:	9c 81       	ldd	r25, Y+4	; 0x04
     69c:	e9 81       	ldd	r30, Y+1	; 0x01
     69e:	fa 81       	ldd	r31, Y+2	; 0x02
     6a0:	97 8b       	std	Z+23, r25	; 0x17
     6a2:	86 8b       	std	Z+22, r24	; 0x16
     6a4:	91 8f       	std	Z+25, r25	; 0x19
     6a6:	80 8f       	std	Z+24, r24	; 0x18
     6a8:	8b eb       	ldi	r24, 0xBB	; 187
     6aa:	9e e0       	ldi	r25, 0x0E	; 14
     6ac:	94 8f       	std	Z+28, r25	; 0x1c
     6ae:	83 8f       	std	Z+27, r24	; 0x1b
     6b0:	15 82       	std	Z+5, r1	; 0x05
     6b2:	14 82       	std	Z+4, r1	; 0x04
     6b4:	7d 96       	adiw	r30, 0x1d	; 29
     6b6:	fa 83       	std	Y+2, r31	; 0x02
     6b8:	e9 83       	std	Y+1, r30	; 0x01
     6ba:	eb 81       	ldd	r30, Y+3	; 0x03
     6bc:	fc 81       	ldd	r31, Y+4	; 0x04
     6be:	e0 5a       	subi	r30, 0xA0	; 160
     6c0:	ff 4f       	sbci	r31, 0xFF	; 255
     6c2:	fc 83       	std	Y+4, r31	; 0x04
     6c4:	eb 83       	std	Y+3, r30	; 0x03
     6c6:	89 81       	ldd	r24, Y+1	; 0x01
     6c8:	9a 81       	ldd	r25, Y+2	; 0x02
     6ca:	8e 52       	subi	r24, 0x2E	; 46
     6cc:	92 40       	sbci	r25, 0x02	; 2
     6ce:	f9 f6       	brne	.-66     	; 0x68e <initialize+0x58>
     6d0:	e2 e5       	ldi	r30, 0x52	; 82
     6d2:	f2 e0       	ldi	r31, 0x02	; 2
     6d4:	11 82       	std	Z+1, r1	; 0x01
     6d6:	10 82       	st	Z, r1
     6d8:	15 82       	std	Z+5, r1	; 0x05
     6da:	14 82       	std	Z+4, r1	; 0x04
     6dc:	13 82       	std	Z+3, r1	; 0x03
     6de:	12 82       	std	Z+2, r1	; 0x02
     6e0:	e1 e6       	ldi	r30, 0x61	; 97
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	80 e8       	ldi	r24, 0x80	; 128
     6e6:	80 83       	st	Z, r24
     6e8:	10 82       	st	Z, r1
     6ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     6ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     6f2:	84 e0       	ldi	r24, 0x04	; 4
     6f4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
     6fe:	0f 90       	pop	r0
     700:	0f 90       	pop	r0
     702:	0f 90       	pop	r0
     704:	0f 90       	pop	r0
     706:	df 91       	pop	r29
     708:	cf 91       	pop	r28
     70a:	08 95       	ret

0000070c <dispatch>:
     70c:	cf 93       	push	r28
     70e:	df 93       	push	r29
     710:	00 d0       	rcall	.+0      	; 0x712 <dispatch+0x6>
     712:	cd b7       	in	r28, 0x3d	; 61
     714:	de b7       	in	r29, 0x3e	; 62
     716:	9a 83       	std	Y+2, r25	; 0x02
     718:	89 83       	std	Y+1, r24	; 0x01
     71a:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current>
     71e:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current+0x1>
     722:	06 96       	adiw	r24, 0x06	; 6
     724:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <setjmp>
     728:	89 2b       	or	r24, r25
     72a:	59 f4       	brne	.+22     	; 0x742 <dispatch+0x36>
     72c:	89 81       	ldd	r24, Y+1	; 0x01
     72e:	9a 81       	ldd	r25, Y+2	; 0x02
     730:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current+0x1>
     734:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current>
     738:	61 e0       	ldi	r22, 0x01	; 1
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	06 96       	adiw	r24, 0x06	; 6
     73e:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <longjmp>
     742:	0f 90       	pop	r0
     744:	0f 90       	pop	r0
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	08 95       	ret

0000074c <schedule>:
     74c:	0f 93       	push	r16
     74e:	1f 93       	push	r17
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <msgQ>
     758:	f0 91 95 01 	lds	r31, 0x0195	; 0x800195 <msgQ+0x1>
     75c:	30 97       	sbiw	r30, 0x00	; 0
     75e:	61 f1       	breq	.+88     	; 0x7b8 <schedule+0x6c>
     760:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
     764:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
     768:	00 97       	sbiw	r24, 0x00	; 0
     76a:	31 f1       	breq	.+76     	; 0x7b8 <schedule+0x6c>
     76c:	c0 91 7e 01 	lds	r28, 0x017E	; 0x80017e <activeStack>
     770:	d0 91 7f 01 	lds	r29, 0x017F	; 0x80017f <activeStack+0x1>
     774:	aa 81       	ldd	r26, Y+2	; 0x02
     776:	bb 81       	ldd	r27, Y+3	; 0x03
     778:	10 97       	sbiw	r26, 0x00	; 0
     77a:	79 f0       	breq	.+30     	; 0x79a <schedule+0x4e>
     77c:	46 81       	ldd	r20, Z+6	; 0x06
     77e:	57 81       	ldd	r21, Z+7	; 0x07
     780:	60 85       	ldd	r22, Z+8	; 0x08
     782:	71 85       	ldd	r23, Z+9	; 0x09
     784:	16 96       	adiw	r26, 0x06	; 6
     786:	0d 91       	ld	r16, X+
     788:	1d 91       	ld	r17, X+
     78a:	2d 91       	ld	r18, X+
     78c:	3c 91       	ld	r19, X
     78e:	19 97       	sbiw	r26, 0x09	; 9
     790:	40 1b       	sub	r20, r16
     792:	51 0b       	sbc	r21, r17
     794:	62 0b       	sbc	r22, r18
     796:	73 0b       	sbc	r23, r19
     798:	7a f4       	brpl	.+30     	; 0x7b8 <schedule+0x6c>
     79a:	fc 01       	movw	r30, r24
     79c:	20 81       	ld	r18, Z
     79e:	31 81       	ldd	r19, Z+1	; 0x01
     7a0:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <threadPool+0x1>
     7a4:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <threadPool>
     7a8:	d1 83       	std	Z+1, r29	; 0x01
     7aa:	c0 83       	st	Z, r28
     7ac:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <activeStack+0x1>
     7b0:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <activeStack>
     7b4:	0e 94 86 03 	call	0x70c	; 0x70c <dispatch>
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	1f 91       	pop	r17
     7be:	0f 91       	pop	r16
     7c0:	08 95       	ret

000007c2 <__vector_1>:
     7c2:	1f 92       	push	r1
     7c4:	0f 92       	push	r0
     7c6:	0f b6       	in	r0, 0x3f	; 63
     7c8:	0f 92       	push	r0
     7ca:	11 24       	eor	r1, r1
     7cc:	2f 93       	push	r18
     7ce:	3f 93       	push	r19
     7d0:	4f 93       	push	r20
     7d2:	5f 93       	push	r21
     7d4:	6f 93       	push	r22
     7d6:	7f 93       	push	r23
     7d8:	8f 93       	push	r24
     7da:	9f 93       	push	r25
     7dc:	af 93       	push	r26
     7de:	bf 93       	push	r27
     7e0:	ef 93       	push	r30
     7e2:	ff 93       	push	r31
     7e4:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     7e8:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     7ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     7f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     7f4:	c9 01       	movw	r24, r18
     7f6:	03 2e       	mov	r0, r19
     7f8:	00 0c       	add	r0, r0
     7fa:	aa 0b       	sbc	r26, r26
     7fc:	bb 0b       	sbc	r27, r27
     7fe:	dc 01       	movw	r26, r24
     800:	99 27       	eor	r25, r25
     802:	88 27       	eor	r24, r24
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	84 2b       	or	r24, r20
     80a:	95 2b       	or	r25, r21
     80c:	a6 2b       	or	r26, r22
     80e:	b7 2b       	or	r27, r23
     810:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     814:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     818:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     81c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     820:	b0 9b       	sbis	0x16, 0	; 22
     822:	1b c0       	rjmp	.+54     	; 0x85a <__vector_1+0x98>
     824:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     828:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     82c:	c9 01       	movw	r24, r18
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	09 2e       	mov	r0, r25
     832:	00 0c       	add	r0, r0
     834:	aa 0b       	sbc	r26, r26
     836:	bb 0b       	sbc	r27, r27
     838:	dc 01       	movw	r26, r24
     83a:	99 27       	eor	r25, r25
     83c:	88 27       	eor	r24, r24
     83e:	60 e0       	ldi	r22, 0x00	; 0
     840:	70 e0       	ldi	r23, 0x00	; 0
     842:	84 2b       	or	r24, r20
     844:	95 2b       	or	r25, r21
     846:	a6 2b       	or	r26, r22
     848:	b7 2b       	or	r27, r23
     84a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     84e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     852:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     856:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     85a:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <mtable>
     85e:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <mtable+0x1>
     862:	30 97       	sbiw	r30, 0x00	; 0
     864:	39 f0       	breq	.+14     	; 0x874 <__vector_1+0xb2>
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <otable>
     86e:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <otable+0x1>
     872:	09 95       	icall
     874:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     878:	ff 91       	pop	r31
     87a:	ef 91       	pop	r30
     87c:	bf 91       	pop	r27
     87e:	af 91       	pop	r26
     880:	9f 91       	pop	r25
     882:	8f 91       	pop	r24
     884:	7f 91       	pop	r23
     886:	6f 91       	pop	r22
     888:	5f 91       	pop	r21
     88a:	4f 91       	pop	r20
     88c:	3f 91       	pop	r19
     88e:	2f 91       	pop	r18
     890:	0f 90       	pop	r0
     892:	0f be       	out	0x3f, r0	; 63
     894:	0f 90       	pop	r0
     896:	1f 90       	pop	r1
     898:	18 95       	reti

0000089a <__vector_2>:
     89a:	1f 92       	push	r1
     89c:	0f 92       	push	r0
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	0f 92       	push	r0
     8a2:	11 24       	eor	r1, r1
     8a4:	2f 93       	push	r18
     8a6:	3f 93       	push	r19
     8a8:	4f 93       	push	r20
     8aa:	5f 93       	push	r21
     8ac:	6f 93       	push	r22
     8ae:	7f 93       	push	r23
     8b0:	8f 93       	push	r24
     8b2:	9f 93       	push	r25
     8b4:	af 93       	push	r26
     8b6:	bf 93       	push	r27
     8b8:	ef 93       	push	r30
     8ba:	ff 93       	push	r31
     8bc:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     8c0:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     8c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     8c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     8cc:	c9 01       	movw	r24, r18
     8ce:	03 2e       	mov	r0, r19
     8d0:	00 0c       	add	r0, r0
     8d2:	aa 0b       	sbc	r26, r26
     8d4:	bb 0b       	sbc	r27, r27
     8d6:	dc 01       	movw	r26, r24
     8d8:	99 27       	eor	r25, r25
     8da:	88 27       	eor	r24, r24
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	70 e0       	ldi	r23, 0x00	; 0
     8e0:	84 2b       	or	r24, r20
     8e2:	95 2b       	or	r25, r21
     8e4:	a6 2b       	or	r26, r22
     8e6:	b7 2b       	or	r27, r23
     8e8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     8ec:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     8f0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     8f4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     8f8:	b0 9b       	sbis	0x16, 0	; 22
     8fa:	1b c0       	rjmp	.+54     	; 0x932 <__vector_2+0x98>
     8fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     900:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     904:	c9 01       	movw	r24, r18
     906:	01 96       	adiw	r24, 0x01	; 1
     908:	09 2e       	mov	r0, r25
     90a:	00 0c       	add	r0, r0
     90c:	aa 0b       	sbc	r26, r26
     90e:	bb 0b       	sbc	r27, r27
     910:	dc 01       	movw	r26, r24
     912:	99 27       	eor	r25, r25
     914:	88 27       	eor	r24, r24
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	70 e0       	ldi	r23, 0x00	; 0
     91a:	84 2b       	or	r24, r20
     91c:	95 2b       	or	r25, r21
     91e:	a6 2b       	or	r26, r22
     920:	b7 2b       	or	r27, r23
     922:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     926:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     92a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     92e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     932:	e0 91 30 02 	lds	r30, 0x0230	; 0x800230 <mtable+0x2>
     936:	f0 91 31 02 	lds	r31, 0x0231	; 0x800231 <mtable+0x3>
     93a:	30 97       	sbiw	r30, 0x00	; 0
     93c:	39 f0       	breq	.+14     	; 0x94c <__vector_2+0xb2>
     93e:	61 e0       	ldi	r22, 0x01	; 1
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <otable+0x2>
     946:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <otable+0x3>
     94a:	09 95       	icall
     94c:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     950:	ff 91       	pop	r31
     952:	ef 91       	pop	r30
     954:	bf 91       	pop	r27
     956:	af 91       	pop	r26
     958:	9f 91       	pop	r25
     95a:	8f 91       	pop	r24
     95c:	7f 91       	pop	r23
     95e:	6f 91       	pop	r22
     960:	5f 91       	pop	r21
     962:	4f 91       	pop	r20
     964:	3f 91       	pop	r19
     966:	2f 91       	pop	r18
     968:	0f 90       	pop	r0
     96a:	0f be       	out	0x3f, r0	; 63
     96c:	0f 90       	pop	r0
     96e:	1f 90       	pop	r1
     970:	18 95       	reti

00000972 <__vector_3>:
     972:	1f 92       	push	r1
     974:	0f 92       	push	r0
     976:	0f b6       	in	r0, 0x3f	; 63
     978:	0f 92       	push	r0
     97a:	11 24       	eor	r1, r1
     97c:	2f 93       	push	r18
     97e:	3f 93       	push	r19
     980:	4f 93       	push	r20
     982:	5f 93       	push	r21
     984:	6f 93       	push	r22
     986:	7f 93       	push	r23
     988:	8f 93       	push	r24
     98a:	9f 93       	push	r25
     98c:	af 93       	push	r26
     98e:	bf 93       	push	r27
     990:	ef 93       	push	r30
     992:	ff 93       	push	r31
     994:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     998:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     99c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     9a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     9a4:	c9 01       	movw	r24, r18
     9a6:	03 2e       	mov	r0, r19
     9a8:	00 0c       	add	r0, r0
     9aa:	aa 0b       	sbc	r26, r26
     9ac:	bb 0b       	sbc	r27, r27
     9ae:	dc 01       	movw	r26, r24
     9b0:	99 27       	eor	r25, r25
     9b2:	88 27       	eor	r24, r24
     9b4:	60 e0       	ldi	r22, 0x00	; 0
     9b6:	70 e0       	ldi	r23, 0x00	; 0
     9b8:	84 2b       	or	r24, r20
     9ba:	95 2b       	or	r25, r21
     9bc:	a6 2b       	or	r26, r22
     9be:	b7 2b       	or	r27, r23
     9c0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     9c4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     9c8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     9cc:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     9d0:	b0 9b       	sbis	0x16, 0	; 22
     9d2:	1b c0       	rjmp	.+54     	; 0xa0a <__vector_3+0x98>
     9d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     9d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     9dc:	c9 01       	movw	r24, r18
     9de:	01 96       	adiw	r24, 0x01	; 1
     9e0:	09 2e       	mov	r0, r25
     9e2:	00 0c       	add	r0, r0
     9e4:	aa 0b       	sbc	r26, r26
     9e6:	bb 0b       	sbc	r27, r27
     9e8:	dc 01       	movw	r26, r24
     9ea:	99 27       	eor	r25, r25
     9ec:	88 27       	eor	r24, r24
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	84 2b       	or	r24, r20
     9f4:	95 2b       	or	r25, r21
     9f6:	a6 2b       	or	r26, r22
     9f8:	b7 2b       	or	r27, r23
     9fa:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     9fe:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     a02:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     a06:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     a0a:	e0 91 32 02 	lds	r30, 0x0232	; 0x800232 <mtable+0x4>
     a0e:	f0 91 33 02 	lds	r31, 0x0233	; 0x800233 <mtable+0x5>
     a12:	30 97       	sbiw	r30, 0x00	; 0
     a14:	39 f0       	breq	.+14     	; 0xa24 <__vector_3+0xb2>
     a16:	62 e0       	ldi	r22, 0x02	; 2
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <otable+0x4>
     a1e:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <otable+0x5>
     a22:	09 95       	icall
     a24:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     a28:	ff 91       	pop	r31
     a2a:	ef 91       	pop	r30
     a2c:	bf 91       	pop	r27
     a2e:	af 91       	pop	r26
     a30:	9f 91       	pop	r25
     a32:	8f 91       	pop	r24
     a34:	7f 91       	pop	r23
     a36:	6f 91       	pop	r22
     a38:	5f 91       	pop	r21
     a3a:	4f 91       	pop	r20
     a3c:	3f 91       	pop	r19
     a3e:	2f 91       	pop	r18
     a40:	0f 90       	pop	r0
     a42:	0f be       	out	0x3f, r0	; 63
     a44:	0f 90       	pop	r0
     a46:	1f 90       	pop	r1
     a48:	18 95       	reti

00000a4a <__vector_4>:
     a4a:	1f 92       	push	r1
     a4c:	0f 92       	push	r0
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	0f 92       	push	r0
     a52:	11 24       	eor	r1, r1
     a54:	2f 93       	push	r18
     a56:	3f 93       	push	r19
     a58:	4f 93       	push	r20
     a5a:	5f 93       	push	r21
     a5c:	6f 93       	push	r22
     a5e:	7f 93       	push	r23
     a60:	8f 93       	push	r24
     a62:	9f 93       	push	r25
     a64:	af 93       	push	r26
     a66:	bf 93       	push	r27
     a68:	ef 93       	push	r30
     a6a:	ff 93       	push	r31
     a6c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     a70:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     a74:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     a78:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     a7c:	c9 01       	movw	r24, r18
     a7e:	03 2e       	mov	r0, r19
     a80:	00 0c       	add	r0, r0
     a82:	aa 0b       	sbc	r26, r26
     a84:	bb 0b       	sbc	r27, r27
     a86:	dc 01       	movw	r26, r24
     a88:	99 27       	eor	r25, r25
     a8a:	88 27       	eor	r24, r24
     a8c:	60 e0       	ldi	r22, 0x00	; 0
     a8e:	70 e0       	ldi	r23, 0x00	; 0
     a90:	84 2b       	or	r24, r20
     a92:	95 2b       	or	r25, r21
     a94:	a6 2b       	or	r26, r22
     a96:	b7 2b       	or	r27, r23
     a98:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     a9c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     aa0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     aa4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     aa8:	b0 9b       	sbis	0x16, 0	; 22
     aaa:	1b c0       	rjmp	.+54     	; 0xae2 <__vector_4+0x98>
     aac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ab0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     ab4:	c9 01       	movw	r24, r18
     ab6:	01 96       	adiw	r24, 0x01	; 1
     ab8:	09 2e       	mov	r0, r25
     aba:	00 0c       	add	r0, r0
     abc:	aa 0b       	sbc	r26, r26
     abe:	bb 0b       	sbc	r27, r27
     ac0:	dc 01       	movw	r26, r24
     ac2:	99 27       	eor	r25, r25
     ac4:	88 27       	eor	r24, r24
     ac6:	60 e0       	ldi	r22, 0x00	; 0
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	84 2b       	or	r24, r20
     acc:	95 2b       	or	r25, r21
     ace:	a6 2b       	or	r26, r22
     ad0:	b7 2b       	or	r27, r23
     ad2:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     ad6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     ada:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     ade:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     ae2:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <mtable+0x6>
     ae6:	f0 91 35 02 	lds	r31, 0x0235	; 0x800235 <mtable+0x7>
     aea:	30 97       	sbiw	r30, 0x00	; 0
     aec:	39 f0       	breq	.+14     	; 0xafc <__vector_4+0xb2>
     aee:	63 e0       	ldi	r22, 0x03	; 3
     af0:	70 e0       	ldi	r23, 0x00	; 0
     af2:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <otable+0x6>
     af6:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <otable+0x7>
     afa:	09 95       	icall
     afc:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     b00:	ff 91       	pop	r31
     b02:	ef 91       	pop	r30
     b04:	bf 91       	pop	r27
     b06:	af 91       	pop	r26
     b08:	9f 91       	pop	r25
     b0a:	8f 91       	pop	r24
     b0c:	7f 91       	pop	r23
     b0e:	6f 91       	pop	r22
     b10:	5f 91       	pop	r21
     b12:	4f 91       	pop	r20
     b14:	3f 91       	pop	r19
     b16:	2f 91       	pop	r18
     b18:	0f 90       	pop	r0
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	0f 90       	pop	r0
     b1e:	1f 90       	pop	r1
     b20:	18 95       	reti

00000b22 <__vector_5>:
     b22:	1f 92       	push	r1
     b24:	0f 92       	push	r0
     b26:	0f b6       	in	r0, 0x3f	; 63
     b28:	0f 92       	push	r0
     b2a:	11 24       	eor	r1, r1
     b2c:	2f 93       	push	r18
     b2e:	3f 93       	push	r19
     b30:	4f 93       	push	r20
     b32:	5f 93       	push	r21
     b34:	6f 93       	push	r22
     b36:	7f 93       	push	r23
     b38:	8f 93       	push	r24
     b3a:	9f 93       	push	r25
     b3c:	af 93       	push	r26
     b3e:	bf 93       	push	r27
     b40:	ef 93       	push	r30
     b42:	ff 93       	push	r31
     b44:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     b48:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     b4c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     b50:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     b54:	c9 01       	movw	r24, r18
     b56:	03 2e       	mov	r0, r19
     b58:	00 0c       	add	r0, r0
     b5a:	aa 0b       	sbc	r26, r26
     b5c:	bb 0b       	sbc	r27, r27
     b5e:	dc 01       	movw	r26, r24
     b60:	99 27       	eor	r25, r25
     b62:	88 27       	eor	r24, r24
     b64:	60 e0       	ldi	r22, 0x00	; 0
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	84 2b       	or	r24, r20
     b6a:	95 2b       	or	r25, r21
     b6c:	a6 2b       	or	r26, r22
     b6e:	b7 2b       	or	r27, r23
     b70:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     b74:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     b78:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     b7c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     b80:	b0 9b       	sbis	0x16, 0	; 22
     b82:	1b c0       	rjmp	.+54     	; 0xbba <__vector_5+0x98>
     b84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     b88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     b8c:	c9 01       	movw	r24, r18
     b8e:	01 96       	adiw	r24, 0x01	; 1
     b90:	09 2e       	mov	r0, r25
     b92:	00 0c       	add	r0, r0
     b94:	aa 0b       	sbc	r26, r26
     b96:	bb 0b       	sbc	r27, r27
     b98:	dc 01       	movw	r26, r24
     b9a:	99 27       	eor	r25, r25
     b9c:	88 27       	eor	r24, r24
     b9e:	60 e0       	ldi	r22, 0x00	; 0
     ba0:	70 e0       	ldi	r23, 0x00	; 0
     ba2:	84 2b       	or	r24, r20
     ba4:	95 2b       	or	r25, r21
     ba6:	a6 2b       	or	r26, r22
     ba8:	b7 2b       	or	r27, r23
     baa:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     bae:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     bb2:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     bb6:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     bba:	e0 91 36 02 	lds	r30, 0x0236	; 0x800236 <mtable+0x8>
     bbe:	f0 91 37 02 	lds	r31, 0x0237	; 0x800237 <mtable+0x9>
     bc2:	30 97       	sbiw	r30, 0x00	; 0
     bc4:	39 f0       	breq	.+14     	; 0xbd4 <__vector_5+0xb2>
     bc6:	64 e0       	ldi	r22, 0x04	; 4
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <otable+0x8>
     bce:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <otable+0x9>
     bd2:	09 95       	icall
     bd4:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     bd8:	ff 91       	pop	r31
     bda:	ef 91       	pop	r30
     bdc:	bf 91       	pop	r27
     bde:	af 91       	pop	r26
     be0:	9f 91       	pop	r25
     be2:	8f 91       	pop	r24
     be4:	7f 91       	pop	r23
     be6:	6f 91       	pop	r22
     be8:	5f 91       	pop	r21
     bea:	4f 91       	pop	r20
     bec:	3f 91       	pop	r19
     bee:	2f 91       	pop	r18
     bf0:	0f 90       	pop	r0
     bf2:	0f be       	out	0x3f, r0	; 63
     bf4:	0f 90       	pop	r0
     bf6:	1f 90       	pop	r1
     bf8:	18 95       	reti

00000bfa <__vector_10>:
     bfa:	1f 92       	push	r1
     bfc:	0f 92       	push	r0
     bfe:	0f b6       	in	r0, 0x3f	; 63
     c00:	0f 92       	push	r0
     c02:	11 24       	eor	r1, r1
     c04:	2f 93       	push	r18
     c06:	3f 93       	push	r19
     c08:	4f 93       	push	r20
     c0a:	5f 93       	push	r21
     c0c:	6f 93       	push	r22
     c0e:	7f 93       	push	r23
     c10:	8f 93       	push	r24
     c12:	9f 93       	push	r25
     c14:	af 93       	push	r26
     c16:	bf 93       	push	r27
     c18:	ef 93       	push	r30
     c1a:	ff 93       	push	r31
     c1c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     c20:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     c24:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     c28:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     c2c:	c9 01       	movw	r24, r18
     c2e:	03 2e       	mov	r0, r19
     c30:	00 0c       	add	r0, r0
     c32:	aa 0b       	sbc	r26, r26
     c34:	bb 0b       	sbc	r27, r27
     c36:	dc 01       	movw	r26, r24
     c38:	99 27       	eor	r25, r25
     c3a:	88 27       	eor	r24, r24
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	84 2b       	or	r24, r20
     c42:	95 2b       	or	r25, r21
     c44:	a6 2b       	or	r26, r22
     c46:	b7 2b       	or	r27, r23
     c48:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     c4c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     c50:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     c54:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     c58:	b0 9b       	sbis	0x16, 0	; 22
     c5a:	1b c0       	rjmp	.+54     	; 0xc92 <__vector_10+0x98>
     c5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     c60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     c64:	c9 01       	movw	r24, r18
     c66:	01 96       	adiw	r24, 0x01	; 1
     c68:	09 2e       	mov	r0, r25
     c6a:	00 0c       	add	r0, r0
     c6c:	aa 0b       	sbc	r26, r26
     c6e:	bb 0b       	sbc	r27, r27
     c70:	dc 01       	movw	r26, r24
     c72:	99 27       	eor	r25, r25
     c74:	88 27       	eor	r24, r24
     c76:	60 e0       	ldi	r22, 0x00	; 0
     c78:	70 e0       	ldi	r23, 0x00	; 0
     c7a:	84 2b       	or	r24, r20
     c7c:	95 2b       	or	r25, r21
     c7e:	a6 2b       	or	r26, r22
     c80:	b7 2b       	or	r27, r23
     c82:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     c86:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     c8a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     c8e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     c92:	e0 91 38 02 	lds	r30, 0x0238	; 0x800238 <mtable+0xa>
     c96:	f0 91 39 02 	lds	r31, 0x0239	; 0x800239 <mtable+0xb>
     c9a:	30 97       	sbiw	r30, 0x00	; 0
     c9c:	39 f0       	breq	.+14     	; 0xcac <__vector_10+0xb2>
     c9e:	65 e0       	ldi	r22, 0x05	; 5
     ca0:	70 e0       	ldi	r23, 0x00	; 0
     ca2:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <otable+0xa>
     ca6:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <otable+0xb>
     caa:	09 95       	icall
     cac:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     cb0:	ff 91       	pop	r31
     cb2:	ef 91       	pop	r30
     cb4:	bf 91       	pop	r27
     cb6:	af 91       	pop	r26
     cb8:	9f 91       	pop	r25
     cba:	8f 91       	pop	r24
     cbc:	7f 91       	pop	r23
     cbe:	6f 91       	pop	r22
     cc0:	5f 91       	pop	r21
     cc2:	4f 91       	pop	r20
     cc4:	3f 91       	pop	r19
     cc6:	2f 91       	pop	r18
     cc8:	0f 90       	pop	r0
     cca:	0f be       	out	0x3f, r0	; 63
     ccc:	0f 90       	pop	r0
     cce:	1f 90       	pop	r1
     cd0:	18 95       	reti

00000cd2 <__vector_11>:
     cd2:	1f 92       	push	r1
     cd4:	0f 92       	push	r0
     cd6:	0f b6       	in	r0, 0x3f	; 63
     cd8:	0f 92       	push	r0
     cda:	11 24       	eor	r1, r1
     cdc:	2f 93       	push	r18
     cde:	3f 93       	push	r19
     ce0:	4f 93       	push	r20
     ce2:	5f 93       	push	r21
     ce4:	6f 93       	push	r22
     ce6:	7f 93       	push	r23
     ce8:	8f 93       	push	r24
     cea:	9f 93       	push	r25
     cec:	af 93       	push	r26
     cee:	bf 93       	push	r27
     cf0:	ef 93       	push	r30
     cf2:	ff 93       	push	r31
     cf4:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     cf8:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     cfc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d00:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d04:	c9 01       	movw	r24, r18
     d06:	03 2e       	mov	r0, r19
     d08:	00 0c       	add	r0, r0
     d0a:	aa 0b       	sbc	r26, r26
     d0c:	bb 0b       	sbc	r27, r27
     d0e:	dc 01       	movw	r26, r24
     d10:	99 27       	eor	r25, r25
     d12:	88 27       	eor	r24, r24
     d14:	60 e0       	ldi	r22, 0x00	; 0
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	84 2b       	or	r24, r20
     d1a:	95 2b       	or	r25, r21
     d1c:	a6 2b       	or	r26, r22
     d1e:	b7 2b       	or	r27, r23
     d20:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     d24:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     d28:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     d2c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     d30:	b0 9b       	sbis	0x16, 0	; 22
     d32:	1b c0       	rjmp	.+54     	; 0xd6a <__vector_11+0x98>
     d34:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d38:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d3c:	c9 01       	movw	r24, r18
     d3e:	01 96       	adiw	r24, 0x01	; 1
     d40:	09 2e       	mov	r0, r25
     d42:	00 0c       	add	r0, r0
     d44:	aa 0b       	sbc	r26, r26
     d46:	bb 0b       	sbc	r27, r27
     d48:	dc 01       	movw	r26, r24
     d4a:	99 27       	eor	r25, r25
     d4c:	88 27       	eor	r24, r24
     d4e:	60 e0       	ldi	r22, 0x00	; 0
     d50:	70 e0       	ldi	r23, 0x00	; 0
     d52:	84 2b       	or	r24, r20
     d54:	95 2b       	or	r25, r21
     d56:	a6 2b       	or	r26, r22
     d58:	b7 2b       	or	r27, r23
     d5a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     d5e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     d62:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     d66:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     d6a:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <mtable+0xc>
     d6e:	f0 91 3b 02 	lds	r31, 0x023B	; 0x80023b <mtable+0xd>
     d72:	30 97       	sbiw	r30, 0x00	; 0
     d74:	39 f0       	breq	.+14     	; 0xd84 <__vector_11+0xb2>
     d76:	66 e0       	ldi	r22, 0x06	; 6
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <otable+0xc>
     d7e:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <otable+0xd>
     d82:	09 95       	icall
     d84:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     d88:	ff 91       	pop	r31
     d8a:	ef 91       	pop	r30
     d8c:	bf 91       	pop	r27
     d8e:	af 91       	pop	r26
     d90:	9f 91       	pop	r25
     d92:	8f 91       	pop	r24
     d94:	7f 91       	pop	r23
     d96:	6f 91       	pop	r22
     d98:	5f 91       	pop	r21
     d9a:	4f 91       	pop	r20
     d9c:	3f 91       	pop	r19
     d9e:	2f 91       	pop	r18
     da0:	0f 90       	pop	r0
     da2:	0f be       	out	0x3f, r0	; 63
     da4:	0f 90       	pop	r0
     da6:	1f 90       	pop	r1
     da8:	18 95       	reti

00000daa <__vector_12>:
     daa:	1f 92       	push	r1
     dac:	0f 92       	push	r0
     dae:	0f b6       	in	r0, 0x3f	; 63
     db0:	0f 92       	push	r0
     db2:	11 24       	eor	r1, r1
     db4:	2f 93       	push	r18
     db6:	3f 93       	push	r19
     db8:	4f 93       	push	r20
     dba:	5f 93       	push	r21
     dbc:	6f 93       	push	r22
     dbe:	7f 93       	push	r23
     dc0:	8f 93       	push	r24
     dc2:	9f 93       	push	r25
     dc4:	af 93       	push	r26
     dc6:	bf 93       	push	r27
     dc8:	ef 93       	push	r30
     dca:	ff 93       	push	r31
     dcc:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     dd0:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     dd4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     dd8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     ddc:	c9 01       	movw	r24, r18
     dde:	03 2e       	mov	r0, r19
     de0:	00 0c       	add	r0, r0
     de2:	aa 0b       	sbc	r26, r26
     de4:	bb 0b       	sbc	r27, r27
     de6:	dc 01       	movw	r26, r24
     de8:	99 27       	eor	r25, r25
     dea:	88 27       	eor	r24, r24
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	84 2b       	or	r24, r20
     df2:	95 2b       	or	r25, r21
     df4:	a6 2b       	or	r26, r22
     df6:	b7 2b       	or	r27, r23
     df8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     dfc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     e00:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     e04:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     e08:	b0 9b       	sbis	0x16, 0	; 22
     e0a:	1b c0       	rjmp	.+54     	; 0xe42 <__vector_12+0x98>
     e0c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     e10:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     e14:	c9 01       	movw	r24, r18
     e16:	01 96       	adiw	r24, 0x01	; 1
     e18:	09 2e       	mov	r0, r25
     e1a:	00 0c       	add	r0, r0
     e1c:	aa 0b       	sbc	r26, r26
     e1e:	bb 0b       	sbc	r27, r27
     e20:	dc 01       	movw	r26, r24
     e22:	99 27       	eor	r25, r25
     e24:	88 27       	eor	r24, r24
     e26:	60 e0       	ldi	r22, 0x00	; 0
     e28:	70 e0       	ldi	r23, 0x00	; 0
     e2a:	84 2b       	or	r24, r20
     e2c:	95 2b       	or	r25, r21
     e2e:	a6 2b       	or	r26, r22
     e30:	b7 2b       	or	r27, r23
     e32:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     e36:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     e3a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     e3e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     e42:	e0 91 3c 02 	lds	r30, 0x023C	; 0x80023c <mtable+0xe>
     e46:	f0 91 3d 02 	lds	r31, 0x023D	; 0x80023d <mtable+0xf>
     e4a:	30 97       	sbiw	r30, 0x00	; 0
     e4c:	39 f0       	breq	.+14     	; 0xe5c <__vector_12+0xb2>
     e4e:	67 e0       	ldi	r22, 0x07	; 7
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <otable+0xe>
     e56:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <otable+0xf>
     e5a:	09 95       	icall
     e5c:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     e60:	ff 91       	pop	r31
     e62:	ef 91       	pop	r30
     e64:	bf 91       	pop	r27
     e66:	af 91       	pop	r26
     e68:	9f 91       	pop	r25
     e6a:	8f 91       	pop	r24
     e6c:	7f 91       	pop	r23
     e6e:	6f 91       	pop	r22
     e70:	5f 91       	pop	r21
     e72:	4f 91       	pop	r20
     e74:	3f 91       	pop	r19
     e76:	2f 91       	pop	r18
     e78:	0f 90       	pop	r0
     e7a:	0f be       	out	0x3f, r0	; 63
     e7c:	0f 90       	pop	r0
     e7e:	1f 90       	pop	r1
     e80:	18 95       	reti

00000e82 <__vector_13>:
     e82:	1f 92       	push	r1
     e84:	0f 92       	push	r0
     e86:	0f b6       	in	r0, 0x3f	; 63
     e88:	0f 92       	push	r0
     e8a:	11 24       	eor	r1, r1
     e8c:	2f 93       	push	r18
     e8e:	3f 93       	push	r19
     e90:	4f 93       	push	r20
     e92:	5f 93       	push	r21
     e94:	6f 93       	push	r22
     e96:	7f 93       	push	r23
     e98:	8f 93       	push	r24
     e9a:	9f 93       	push	r25
     e9c:	af 93       	push	r26
     e9e:	bf 93       	push	r27
     ea0:	ef 93       	push	r30
     ea2:	ff 93       	push	r31
     ea4:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     ea8:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     eac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     eb0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     eb4:	c9 01       	movw	r24, r18
     eb6:	03 2e       	mov	r0, r19
     eb8:	00 0c       	add	r0, r0
     eba:	aa 0b       	sbc	r26, r26
     ebc:	bb 0b       	sbc	r27, r27
     ebe:	dc 01       	movw	r26, r24
     ec0:	99 27       	eor	r25, r25
     ec2:	88 27       	eor	r24, r24
     ec4:	60 e0       	ldi	r22, 0x00	; 0
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	84 2b       	or	r24, r20
     eca:	95 2b       	or	r25, r21
     ecc:	a6 2b       	or	r26, r22
     ece:	b7 2b       	or	r27, r23
     ed0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     ed4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     ed8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     edc:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     ee0:	b0 9b       	sbis	0x16, 0	; 22
     ee2:	1b c0       	rjmp	.+54     	; 0xf1a <__vector_13+0x98>
     ee4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ee8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     eec:	c9 01       	movw	r24, r18
     eee:	01 96       	adiw	r24, 0x01	; 1
     ef0:	09 2e       	mov	r0, r25
     ef2:	00 0c       	add	r0, r0
     ef4:	aa 0b       	sbc	r26, r26
     ef6:	bb 0b       	sbc	r27, r27
     ef8:	dc 01       	movw	r26, r24
     efa:	99 27       	eor	r25, r25
     efc:	88 27       	eor	r24, r24
     efe:	60 e0       	ldi	r22, 0x00	; 0
     f00:	70 e0       	ldi	r23, 0x00	; 0
     f02:	84 2b       	or	r24, r20
     f04:	95 2b       	or	r25, r21
     f06:	a6 2b       	or	r26, r22
     f08:	b7 2b       	or	r27, r23
     f0a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     f0e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     f12:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     f16:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     f1a:	e0 91 3e 02 	lds	r30, 0x023E	; 0x80023e <mtable+0x10>
     f1e:	f0 91 3f 02 	lds	r31, 0x023F	; 0x80023f <mtable+0x11>
     f22:	30 97       	sbiw	r30, 0x00	; 0
     f24:	39 f0       	breq	.+14     	; 0xf34 <__vector_13+0xb2>
     f26:	68 e0       	ldi	r22, 0x08	; 8
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <otable+0x10>
     f2e:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <otable+0x11>
     f32:	09 95       	icall
     f34:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
     f38:	ff 91       	pop	r31
     f3a:	ef 91       	pop	r30
     f3c:	bf 91       	pop	r27
     f3e:	af 91       	pop	r26
     f40:	9f 91       	pop	r25
     f42:	8f 91       	pop	r24
     f44:	7f 91       	pop	r23
     f46:	6f 91       	pop	r22
     f48:	5f 91       	pop	r21
     f4a:	4f 91       	pop	r20
     f4c:	3f 91       	pop	r19
     f4e:	2f 91       	pop	r18
     f50:	0f 90       	pop	r0
     f52:	0f be       	out	0x3f, r0	; 63
     f54:	0f 90       	pop	r0
     f56:	1f 90       	pop	r1
     f58:	18 95       	reti

00000f5a <__vector_14>:
     f5a:	1f 92       	push	r1
     f5c:	0f 92       	push	r0
     f5e:	0f b6       	in	r0, 0x3f	; 63
     f60:	0f 92       	push	r0
     f62:	11 24       	eor	r1, r1
     f64:	2f 93       	push	r18
     f66:	3f 93       	push	r19
     f68:	4f 93       	push	r20
     f6a:	5f 93       	push	r21
     f6c:	6f 93       	push	r22
     f6e:	7f 93       	push	r23
     f70:	8f 93       	push	r24
     f72:	9f 93       	push	r25
     f74:	af 93       	push	r26
     f76:	bf 93       	push	r27
     f78:	ef 93       	push	r30
     f7a:	ff 93       	push	r31
     f7c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     f80:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     f84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     f88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     f8c:	c9 01       	movw	r24, r18
     f8e:	03 2e       	mov	r0, r19
     f90:	00 0c       	add	r0, r0
     f92:	aa 0b       	sbc	r26, r26
     f94:	bb 0b       	sbc	r27, r27
     f96:	dc 01       	movw	r26, r24
     f98:	99 27       	eor	r25, r25
     f9a:	88 27       	eor	r24, r24
     f9c:	60 e0       	ldi	r22, 0x00	; 0
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	84 2b       	or	r24, r20
     fa2:	95 2b       	or	r25, r21
     fa4:	a6 2b       	or	r26, r22
     fa6:	b7 2b       	or	r27, r23
     fa8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     fac:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     fb0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     fb4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     fb8:	b0 9b       	sbis	0x16, 0	; 22
     fba:	1b c0       	rjmp	.+54     	; 0xff2 <__vector_14+0x98>
     fbc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     fc0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     fc4:	c9 01       	movw	r24, r18
     fc6:	01 96       	adiw	r24, 0x01	; 1
     fc8:	09 2e       	mov	r0, r25
     fca:	00 0c       	add	r0, r0
     fcc:	aa 0b       	sbc	r26, r26
     fce:	bb 0b       	sbc	r27, r27
     fd0:	dc 01       	movw	r26, r24
     fd2:	99 27       	eor	r25, r25
     fd4:	88 27       	eor	r24, r24
     fd6:	60 e0       	ldi	r22, 0x00	; 0
     fd8:	70 e0       	ldi	r23, 0x00	; 0
     fda:	84 2b       	or	r24, r20
     fdc:	95 2b       	or	r25, r21
     fde:	a6 2b       	or	r26, r22
     fe0:	b7 2b       	or	r27, r23
     fe2:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     fe6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     fea:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     fee:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     ff2:	e0 91 40 02 	lds	r30, 0x0240	; 0x800240 <mtable+0x12>
     ff6:	f0 91 41 02 	lds	r31, 0x0241	; 0x800241 <mtable+0x13>
     ffa:	30 97       	sbiw	r30, 0x00	; 0
     ffc:	39 f0       	breq	.+14     	; 0x100c <__vector_14+0xb2>
     ffe:	69 e0       	ldi	r22, 0x09	; 9
    1000:	70 e0       	ldi	r23, 0x00	; 0
    1002:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <otable+0x12>
    1006:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <otable+0x13>
    100a:	09 95       	icall
    100c:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    1010:	ff 91       	pop	r31
    1012:	ef 91       	pop	r30
    1014:	bf 91       	pop	r27
    1016:	af 91       	pop	r26
    1018:	9f 91       	pop	r25
    101a:	8f 91       	pop	r24
    101c:	7f 91       	pop	r23
    101e:	6f 91       	pop	r22
    1020:	5f 91       	pop	r21
    1022:	4f 91       	pop	r20
    1024:	3f 91       	pop	r19
    1026:	2f 91       	pop	r18
    1028:	0f 90       	pop	r0
    102a:	0f be       	out	0x3f, r0	; 63
    102c:	0f 90       	pop	r0
    102e:	1f 90       	pop	r1
    1030:	18 95       	reti

00001032 <__vector_15>:
    1032:	1f 92       	push	r1
    1034:	0f 92       	push	r0
    1036:	0f b6       	in	r0, 0x3f	; 63
    1038:	0f 92       	push	r0
    103a:	11 24       	eor	r1, r1
    103c:	2f 93       	push	r18
    103e:	3f 93       	push	r19
    1040:	4f 93       	push	r20
    1042:	5f 93       	push	r21
    1044:	6f 93       	push	r22
    1046:	7f 93       	push	r23
    1048:	8f 93       	push	r24
    104a:	9f 93       	push	r25
    104c:	af 93       	push	r26
    104e:	bf 93       	push	r27
    1050:	ef 93       	push	r30
    1052:	ff 93       	push	r31
    1054:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1058:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    105c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1060:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1064:	c9 01       	movw	r24, r18
    1066:	03 2e       	mov	r0, r19
    1068:	00 0c       	add	r0, r0
    106a:	aa 0b       	sbc	r26, r26
    106c:	bb 0b       	sbc	r27, r27
    106e:	dc 01       	movw	r26, r24
    1070:	99 27       	eor	r25, r25
    1072:	88 27       	eor	r24, r24
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	84 2b       	or	r24, r20
    107a:	95 2b       	or	r25, r21
    107c:	a6 2b       	or	r26, r22
    107e:	b7 2b       	or	r27, r23
    1080:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1084:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1088:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    108c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1090:	b0 9b       	sbis	0x16, 0	; 22
    1092:	1b c0       	rjmp	.+54     	; 0x10ca <__vector_15+0x98>
    1094:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1098:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    109c:	c9 01       	movw	r24, r18
    109e:	01 96       	adiw	r24, 0x01	; 1
    10a0:	09 2e       	mov	r0, r25
    10a2:	00 0c       	add	r0, r0
    10a4:	aa 0b       	sbc	r26, r26
    10a6:	bb 0b       	sbc	r27, r27
    10a8:	dc 01       	movw	r26, r24
    10aa:	99 27       	eor	r25, r25
    10ac:	88 27       	eor	r24, r24
    10ae:	60 e0       	ldi	r22, 0x00	; 0
    10b0:	70 e0       	ldi	r23, 0x00	; 0
    10b2:	84 2b       	or	r24, r20
    10b4:	95 2b       	or	r25, r21
    10b6:	a6 2b       	or	r26, r22
    10b8:	b7 2b       	or	r27, r23
    10ba:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    10be:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    10c2:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    10c6:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    10ca:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <mtable+0x14>
    10ce:	f0 91 43 02 	lds	r31, 0x0243	; 0x800243 <mtable+0x15>
    10d2:	30 97       	sbiw	r30, 0x00	; 0
    10d4:	39 f0       	breq	.+14     	; 0x10e4 <__vector_15+0xb2>
    10d6:	6a e0       	ldi	r22, 0x0A	; 10
    10d8:	70 e0       	ldi	r23, 0x00	; 0
    10da:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <otable+0x14>
    10de:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <otable+0x15>
    10e2:	09 95       	icall
    10e4:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    10e8:	ff 91       	pop	r31
    10ea:	ef 91       	pop	r30
    10ec:	bf 91       	pop	r27
    10ee:	af 91       	pop	r26
    10f0:	9f 91       	pop	r25
    10f2:	8f 91       	pop	r24
    10f4:	7f 91       	pop	r23
    10f6:	6f 91       	pop	r22
    10f8:	5f 91       	pop	r21
    10fa:	4f 91       	pop	r20
    10fc:	3f 91       	pop	r19
    10fe:	2f 91       	pop	r18
    1100:	0f 90       	pop	r0
    1102:	0f be       	out	0x3f, r0	; 63
    1104:	0f 90       	pop	r0
    1106:	1f 90       	pop	r1
    1108:	18 95       	reti

0000110a <__vector_16>:
    110a:	1f 92       	push	r1
    110c:	0f 92       	push	r0
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	0f 92       	push	r0
    1112:	11 24       	eor	r1, r1
    1114:	2f 93       	push	r18
    1116:	3f 93       	push	r19
    1118:	4f 93       	push	r20
    111a:	5f 93       	push	r21
    111c:	6f 93       	push	r22
    111e:	7f 93       	push	r23
    1120:	8f 93       	push	r24
    1122:	9f 93       	push	r25
    1124:	af 93       	push	r26
    1126:	bf 93       	push	r27
    1128:	ef 93       	push	r30
    112a:	ff 93       	push	r31
    112c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1130:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1134:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1138:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    113c:	c9 01       	movw	r24, r18
    113e:	03 2e       	mov	r0, r19
    1140:	00 0c       	add	r0, r0
    1142:	aa 0b       	sbc	r26, r26
    1144:	bb 0b       	sbc	r27, r27
    1146:	dc 01       	movw	r26, r24
    1148:	99 27       	eor	r25, r25
    114a:	88 27       	eor	r24, r24
    114c:	60 e0       	ldi	r22, 0x00	; 0
    114e:	70 e0       	ldi	r23, 0x00	; 0
    1150:	84 2b       	or	r24, r20
    1152:	95 2b       	or	r25, r21
    1154:	a6 2b       	or	r26, r22
    1156:	b7 2b       	or	r27, r23
    1158:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    115c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1160:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1164:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1168:	b0 9b       	sbis	0x16, 0	; 22
    116a:	1b c0       	rjmp	.+54     	; 0x11a2 <__vector_16+0x98>
    116c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1170:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1174:	c9 01       	movw	r24, r18
    1176:	01 96       	adiw	r24, 0x01	; 1
    1178:	09 2e       	mov	r0, r25
    117a:	00 0c       	add	r0, r0
    117c:	aa 0b       	sbc	r26, r26
    117e:	bb 0b       	sbc	r27, r27
    1180:	dc 01       	movw	r26, r24
    1182:	99 27       	eor	r25, r25
    1184:	88 27       	eor	r24, r24
    1186:	60 e0       	ldi	r22, 0x00	; 0
    1188:	70 e0       	ldi	r23, 0x00	; 0
    118a:	84 2b       	or	r24, r20
    118c:	95 2b       	or	r25, r21
    118e:	a6 2b       	or	r26, r22
    1190:	b7 2b       	or	r27, r23
    1192:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1196:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    119a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    119e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    11a2:	e0 91 44 02 	lds	r30, 0x0244	; 0x800244 <mtable+0x16>
    11a6:	f0 91 45 02 	lds	r31, 0x0245	; 0x800245 <mtable+0x17>
    11aa:	30 97       	sbiw	r30, 0x00	; 0
    11ac:	39 f0       	breq	.+14     	; 0x11bc <__vector_16+0xb2>
    11ae:	6b e0       	ldi	r22, 0x0B	; 11
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <otable+0x16>
    11b6:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <otable+0x17>
    11ba:	09 95       	icall
    11bc:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    11c0:	ff 91       	pop	r31
    11c2:	ef 91       	pop	r30
    11c4:	bf 91       	pop	r27
    11c6:	af 91       	pop	r26
    11c8:	9f 91       	pop	r25
    11ca:	8f 91       	pop	r24
    11cc:	7f 91       	pop	r23
    11ce:	6f 91       	pop	r22
    11d0:	5f 91       	pop	r21
    11d2:	4f 91       	pop	r20
    11d4:	3f 91       	pop	r19
    11d6:	2f 91       	pop	r18
    11d8:	0f 90       	pop	r0
    11da:	0f be       	out	0x3f, r0	; 63
    11dc:	0f 90       	pop	r0
    11de:	1f 90       	pop	r1
    11e0:	18 95       	reti

000011e2 <__vector_17>:
    11e2:	1f 92       	push	r1
    11e4:	0f 92       	push	r0
    11e6:	0f b6       	in	r0, 0x3f	; 63
    11e8:	0f 92       	push	r0
    11ea:	11 24       	eor	r1, r1
    11ec:	2f 93       	push	r18
    11ee:	3f 93       	push	r19
    11f0:	4f 93       	push	r20
    11f2:	5f 93       	push	r21
    11f4:	6f 93       	push	r22
    11f6:	7f 93       	push	r23
    11f8:	8f 93       	push	r24
    11fa:	9f 93       	push	r25
    11fc:	af 93       	push	r26
    11fe:	bf 93       	push	r27
    1200:	ef 93       	push	r30
    1202:	ff 93       	push	r31
    1204:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1208:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    120c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1210:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1214:	c9 01       	movw	r24, r18
    1216:	03 2e       	mov	r0, r19
    1218:	00 0c       	add	r0, r0
    121a:	aa 0b       	sbc	r26, r26
    121c:	bb 0b       	sbc	r27, r27
    121e:	dc 01       	movw	r26, r24
    1220:	99 27       	eor	r25, r25
    1222:	88 27       	eor	r24, r24
    1224:	60 e0       	ldi	r22, 0x00	; 0
    1226:	70 e0       	ldi	r23, 0x00	; 0
    1228:	84 2b       	or	r24, r20
    122a:	95 2b       	or	r25, r21
    122c:	a6 2b       	or	r26, r22
    122e:	b7 2b       	or	r27, r23
    1230:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1234:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1238:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    123c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1240:	b0 9b       	sbis	0x16, 0	; 22
    1242:	1b c0       	rjmp	.+54     	; 0x127a <__vector_17+0x98>
    1244:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1248:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    124c:	c9 01       	movw	r24, r18
    124e:	01 96       	adiw	r24, 0x01	; 1
    1250:	09 2e       	mov	r0, r25
    1252:	00 0c       	add	r0, r0
    1254:	aa 0b       	sbc	r26, r26
    1256:	bb 0b       	sbc	r27, r27
    1258:	dc 01       	movw	r26, r24
    125a:	99 27       	eor	r25, r25
    125c:	88 27       	eor	r24, r24
    125e:	60 e0       	ldi	r22, 0x00	; 0
    1260:	70 e0       	ldi	r23, 0x00	; 0
    1262:	84 2b       	or	r24, r20
    1264:	95 2b       	or	r25, r21
    1266:	a6 2b       	or	r26, r22
    1268:	b7 2b       	or	r27, r23
    126a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    126e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1272:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1276:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    127a:	e0 91 46 02 	lds	r30, 0x0246	; 0x800246 <mtable+0x18>
    127e:	f0 91 47 02 	lds	r31, 0x0247	; 0x800247 <mtable+0x19>
    1282:	30 97       	sbiw	r30, 0x00	; 0
    1284:	39 f0       	breq	.+14     	; 0x1294 <__vector_17+0xb2>
    1286:	6c e0       	ldi	r22, 0x0C	; 12
    1288:	70 e0       	ldi	r23, 0x00	; 0
    128a:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <otable+0x18>
    128e:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <otable+0x19>
    1292:	09 95       	icall
    1294:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    1298:	ff 91       	pop	r31
    129a:	ef 91       	pop	r30
    129c:	bf 91       	pop	r27
    129e:	af 91       	pop	r26
    12a0:	9f 91       	pop	r25
    12a2:	8f 91       	pop	r24
    12a4:	7f 91       	pop	r23
    12a6:	6f 91       	pop	r22
    12a8:	5f 91       	pop	r21
    12aa:	4f 91       	pop	r20
    12ac:	3f 91       	pop	r19
    12ae:	2f 91       	pop	r18
    12b0:	0f 90       	pop	r0
    12b2:	0f be       	out	0x3f, r0	; 63
    12b4:	0f 90       	pop	r0
    12b6:	1f 90       	pop	r1
    12b8:	18 95       	reti

000012ba <__vector_18>:
    12ba:	1f 92       	push	r1
    12bc:	0f 92       	push	r0
    12be:	0f b6       	in	r0, 0x3f	; 63
    12c0:	0f 92       	push	r0
    12c2:	11 24       	eor	r1, r1
    12c4:	2f 93       	push	r18
    12c6:	3f 93       	push	r19
    12c8:	4f 93       	push	r20
    12ca:	5f 93       	push	r21
    12cc:	6f 93       	push	r22
    12ce:	7f 93       	push	r23
    12d0:	8f 93       	push	r24
    12d2:	9f 93       	push	r25
    12d4:	af 93       	push	r26
    12d6:	bf 93       	push	r27
    12d8:	ef 93       	push	r30
    12da:	ff 93       	push	r31
    12dc:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    12e0:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    12e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    12e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    12ec:	c9 01       	movw	r24, r18
    12ee:	03 2e       	mov	r0, r19
    12f0:	00 0c       	add	r0, r0
    12f2:	aa 0b       	sbc	r26, r26
    12f4:	bb 0b       	sbc	r27, r27
    12f6:	dc 01       	movw	r26, r24
    12f8:	99 27       	eor	r25, r25
    12fa:	88 27       	eor	r24, r24
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	84 2b       	or	r24, r20
    1302:	95 2b       	or	r25, r21
    1304:	a6 2b       	or	r26, r22
    1306:	b7 2b       	or	r27, r23
    1308:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    130c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1310:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1314:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1318:	b0 9b       	sbis	0x16, 0	; 22
    131a:	1b c0       	rjmp	.+54     	; 0x1352 <__vector_18+0x98>
    131c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1320:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1324:	c9 01       	movw	r24, r18
    1326:	01 96       	adiw	r24, 0x01	; 1
    1328:	09 2e       	mov	r0, r25
    132a:	00 0c       	add	r0, r0
    132c:	aa 0b       	sbc	r26, r26
    132e:	bb 0b       	sbc	r27, r27
    1330:	dc 01       	movw	r26, r24
    1332:	99 27       	eor	r25, r25
    1334:	88 27       	eor	r24, r24
    1336:	60 e0       	ldi	r22, 0x00	; 0
    1338:	70 e0       	ldi	r23, 0x00	; 0
    133a:	84 2b       	or	r24, r20
    133c:	95 2b       	or	r25, r21
    133e:	a6 2b       	or	r26, r22
    1340:	b7 2b       	or	r27, r23
    1342:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1346:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    134a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    134e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1352:	e0 91 48 02 	lds	r30, 0x0248	; 0x800248 <mtable+0x1a>
    1356:	f0 91 49 02 	lds	r31, 0x0249	; 0x800249 <mtable+0x1b>
    135a:	30 97       	sbiw	r30, 0x00	; 0
    135c:	39 f0       	breq	.+14     	; 0x136c <__vector_18+0xb2>
    135e:	6d e0       	ldi	r22, 0x0D	; 13
    1360:	70 e0       	ldi	r23, 0x00	; 0
    1362:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <otable+0x1a>
    1366:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <otable+0x1b>
    136a:	09 95       	icall
    136c:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    1370:	ff 91       	pop	r31
    1372:	ef 91       	pop	r30
    1374:	bf 91       	pop	r27
    1376:	af 91       	pop	r26
    1378:	9f 91       	pop	r25
    137a:	8f 91       	pop	r24
    137c:	7f 91       	pop	r23
    137e:	6f 91       	pop	r22
    1380:	5f 91       	pop	r21
    1382:	4f 91       	pop	r20
    1384:	3f 91       	pop	r19
    1386:	2f 91       	pop	r18
    1388:	0f 90       	pop	r0
    138a:	0f be       	out	0x3f, r0	; 63
    138c:	0f 90       	pop	r0
    138e:	1f 90       	pop	r1
    1390:	18 95       	reti

00001392 <__vector_19>:
    1392:	1f 92       	push	r1
    1394:	0f 92       	push	r0
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	0f 92       	push	r0
    139a:	11 24       	eor	r1, r1
    139c:	2f 93       	push	r18
    139e:	3f 93       	push	r19
    13a0:	4f 93       	push	r20
    13a2:	5f 93       	push	r21
    13a4:	6f 93       	push	r22
    13a6:	7f 93       	push	r23
    13a8:	8f 93       	push	r24
    13aa:	9f 93       	push	r25
    13ac:	af 93       	push	r26
    13ae:	bf 93       	push	r27
    13b0:	ef 93       	push	r30
    13b2:	ff 93       	push	r31
    13b4:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    13b8:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    13bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    13c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    13c4:	c9 01       	movw	r24, r18
    13c6:	03 2e       	mov	r0, r19
    13c8:	00 0c       	add	r0, r0
    13ca:	aa 0b       	sbc	r26, r26
    13cc:	bb 0b       	sbc	r27, r27
    13ce:	dc 01       	movw	r26, r24
    13d0:	99 27       	eor	r25, r25
    13d2:	88 27       	eor	r24, r24
    13d4:	60 e0       	ldi	r22, 0x00	; 0
    13d6:	70 e0       	ldi	r23, 0x00	; 0
    13d8:	84 2b       	or	r24, r20
    13da:	95 2b       	or	r25, r21
    13dc:	a6 2b       	or	r26, r22
    13de:	b7 2b       	or	r27, r23
    13e0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    13e4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    13e8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    13ec:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    13f0:	b0 9b       	sbis	0x16, 0	; 22
    13f2:	1b c0       	rjmp	.+54     	; 0x142a <__vector_19+0x98>
    13f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    13f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    13fc:	c9 01       	movw	r24, r18
    13fe:	01 96       	adiw	r24, 0x01	; 1
    1400:	09 2e       	mov	r0, r25
    1402:	00 0c       	add	r0, r0
    1404:	aa 0b       	sbc	r26, r26
    1406:	bb 0b       	sbc	r27, r27
    1408:	dc 01       	movw	r26, r24
    140a:	99 27       	eor	r25, r25
    140c:	88 27       	eor	r24, r24
    140e:	60 e0       	ldi	r22, 0x00	; 0
    1410:	70 e0       	ldi	r23, 0x00	; 0
    1412:	84 2b       	or	r24, r20
    1414:	95 2b       	or	r25, r21
    1416:	a6 2b       	or	r26, r22
    1418:	b7 2b       	or	r27, r23
    141a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    141e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1422:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1426:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    142a:	e0 91 4a 02 	lds	r30, 0x024A	; 0x80024a <mtable+0x1c>
    142e:	f0 91 4b 02 	lds	r31, 0x024B	; 0x80024b <mtable+0x1d>
    1432:	30 97       	sbiw	r30, 0x00	; 0
    1434:	39 f0       	breq	.+14     	; 0x1444 <__vector_19+0xb2>
    1436:	6e e0       	ldi	r22, 0x0E	; 14
    1438:	70 e0       	ldi	r23, 0x00	; 0
    143a:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <otable+0x1c>
    143e:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <otable+0x1d>
    1442:	09 95       	icall
    1444:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    1448:	ff 91       	pop	r31
    144a:	ef 91       	pop	r30
    144c:	bf 91       	pop	r27
    144e:	af 91       	pop	r26
    1450:	9f 91       	pop	r25
    1452:	8f 91       	pop	r24
    1454:	7f 91       	pop	r23
    1456:	6f 91       	pop	r22
    1458:	5f 91       	pop	r21
    145a:	4f 91       	pop	r20
    145c:	3f 91       	pop	r19
    145e:	2f 91       	pop	r18
    1460:	0f 90       	pop	r0
    1462:	0f be       	out	0x3f, r0	; 63
    1464:	0f 90       	pop	r0
    1466:	1f 90       	pop	r1
    1468:	18 95       	reti

0000146a <__vector_20>:
    146a:	1f 92       	push	r1
    146c:	0f 92       	push	r0
    146e:	0f b6       	in	r0, 0x3f	; 63
    1470:	0f 92       	push	r0
    1472:	11 24       	eor	r1, r1
    1474:	2f 93       	push	r18
    1476:	3f 93       	push	r19
    1478:	4f 93       	push	r20
    147a:	5f 93       	push	r21
    147c:	6f 93       	push	r22
    147e:	7f 93       	push	r23
    1480:	8f 93       	push	r24
    1482:	9f 93       	push	r25
    1484:	af 93       	push	r26
    1486:	bf 93       	push	r27
    1488:	ef 93       	push	r30
    148a:	ff 93       	push	r31
    148c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1490:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1494:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1498:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    149c:	c9 01       	movw	r24, r18
    149e:	03 2e       	mov	r0, r19
    14a0:	00 0c       	add	r0, r0
    14a2:	aa 0b       	sbc	r26, r26
    14a4:	bb 0b       	sbc	r27, r27
    14a6:	dc 01       	movw	r26, r24
    14a8:	99 27       	eor	r25, r25
    14aa:	88 27       	eor	r24, r24
    14ac:	60 e0       	ldi	r22, 0x00	; 0
    14ae:	70 e0       	ldi	r23, 0x00	; 0
    14b0:	84 2b       	or	r24, r20
    14b2:	95 2b       	or	r25, r21
    14b4:	a6 2b       	or	r26, r22
    14b6:	b7 2b       	or	r27, r23
    14b8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    14bc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    14c0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    14c4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    14c8:	b0 9b       	sbis	0x16, 0	; 22
    14ca:	1b c0       	rjmp	.+54     	; 0x1502 <__vector_20+0x98>
    14cc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    14d0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    14d4:	c9 01       	movw	r24, r18
    14d6:	01 96       	adiw	r24, 0x01	; 1
    14d8:	09 2e       	mov	r0, r25
    14da:	00 0c       	add	r0, r0
    14dc:	aa 0b       	sbc	r26, r26
    14de:	bb 0b       	sbc	r27, r27
    14e0:	dc 01       	movw	r26, r24
    14e2:	99 27       	eor	r25, r25
    14e4:	88 27       	eor	r24, r24
    14e6:	60 e0       	ldi	r22, 0x00	; 0
    14e8:	70 e0       	ldi	r23, 0x00	; 0
    14ea:	84 2b       	or	r24, r20
    14ec:	95 2b       	or	r25, r21
    14ee:	a6 2b       	or	r26, r22
    14f0:	b7 2b       	or	r27, r23
    14f2:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    14f6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    14fa:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    14fe:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1502:	e0 91 4c 02 	lds	r30, 0x024C	; 0x80024c <mtable+0x1e>
    1506:	f0 91 4d 02 	lds	r31, 0x024D	; 0x80024d <mtable+0x1f>
    150a:	30 97       	sbiw	r30, 0x00	; 0
    150c:	39 f0       	breq	.+14     	; 0x151c <__vector_20+0xb2>
    150e:	6f e0       	ldi	r22, 0x0F	; 15
    1510:	70 e0       	ldi	r23, 0x00	; 0
    1512:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <otable+0x1e>
    1516:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <otable+0x1f>
    151a:	09 95       	icall
    151c:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    1520:	ff 91       	pop	r31
    1522:	ef 91       	pop	r30
    1524:	bf 91       	pop	r27
    1526:	af 91       	pop	r26
    1528:	9f 91       	pop	r25
    152a:	8f 91       	pop	r24
    152c:	7f 91       	pop	r23
    152e:	6f 91       	pop	r22
    1530:	5f 91       	pop	r21
    1532:	4f 91       	pop	r20
    1534:	3f 91       	pop	r19
    1536:	2f 91       	pop	r18
    1538:	0f 90       	pop	r0
    153a:	0f be       	out	0x3f, r0	; 63
    153c:	0f 90       	pop	r0
    153e:	1f 90       	pop	r1
    1540:	18 95       	reti

00001542 <__vector_21>:
    1542:	1f 92       	push	r1
    1544:	0f 92       	push	r0
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	0f 92       	push	r0
    154a:	11 24       	eor	r1, r1
    154c:	2f 93       	push	r18
    154e:	3f 93       	push	r19
    1550:	4f 93       	push	r20
    1552:	5f 93       	push	r21
    1554:	6f 93       	push	r22
    1556:	7f 93       	push	r23
    1558:	8f 93       	push	r24
    155a:	9f 93       	push	r25
    155c:	af 93       	push	r26
    155e:	bf 93       	push	r27
    1560:	ef 93       	push	r30
    1562:	ff 93       	push	r31
    1564:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1568:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    156c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1570:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1574:	c9 01       	movw	r24, r18
    1576:	03 2e       	mov	r0, r19
    1578:	00 0c       	add	r0, r0
    157a:	aa 0b       	sbc	r26, r26
    157c:	bb 0b       	sbc	r27, r27
    157e:	dc 01       	movw	r26, r24
    1580:	99 27       	eor	r25, r25
    1582:	88 27       	eor	r24, r24
    1584:	60 e0       	ldi	r22, 0x00	; 0
    1586:	70 e0       	ldi	r23, 0x00	; 0
    1588:	84 2b       	or	r24, r20
    158a:	95 2b       	or	r25, r21
    158c:	a6 2b       	or	r26, r22
    158e:	b7 2b       	or	r27, r23
    1590:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1594:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1598:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    159c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    15a0:	b0 9b       	sbis	0x16, 0	; 22
    15a2:	1b c0       	rjmp	.+54     	; 0x15da <__vector_21+0x98>
    15a4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    15a8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    15ac:	c9 01       	movw	r24, r18
    15ae:	01 96       	adiw	r24, 0x01	; 1
    15b0:	09 2e       	mov	r0, r25
    15b2:	00 0c       	add	r0, r0
    15b4:	aa 0b       	sbc	r26, r26
    15b6:	bb 0b       	sbc	r27, r27
    15b8:	dc 01       	movw	r26, r24
    15ba:	99 27       	eor	r25, r25
    15bc:	88 27       	eor	r24, r24
    15be:	60 e0       	ldi	r22, 0x00	; 0
    15c0:	70 e0       	ldi	r23, 0x00	; 0
    15c2:	84 2b       	or	r24, r20
    15c4:	95 2b       	or	r25, r21
    15c6:	a6 2b       	or	r26, r22
    15c8:	b7 2b       	or	r27, r23
    15ca:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    15ce:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    15d2:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    15d6:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    15da:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <mtable+0x20>
    15de:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <mtable+0x21>
    15e2:	30 97       	sbiw	r30, 0x00	; 0
    15e4:	39 f0       	breq	.+14     	; 0x15f4 <__vector_21+0xb2>
    15e6:	60 e1       	ldi	r22, 0x10	; 16
    15e8:	70 e0       	ldi	r23, 0x00	; 0
    15ea:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <otable+0x20>
    15ee:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <otable+0x21>
    15f2:	09 95       	icall
    15f4:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    15f8:	ff 91       	pop	r31
    15fa:	ef 91       	pop	r30
    15fc:	bf 91       	pop	r27
    15fe:	af 91       	pop	r26
    1600:	9f 91       	pop	r25
    1602:	8f 91       	pop	r24
    1604:	7f 91       	pop	r23
    1606:	6f 91       	pop	r22
    1608:	5f 91       	pop	r21
    160a:	4f 91       	pop	r20
    160c:	3f 91       	pop	r19
    160e:	2f 91       	pop	r18
    1610:	0f 90       	pop	r0
    1612:	0f be       	out	0x3f, r0	; 63
    1614:	0f 90       	pop	r0
    1616:	1f 90       	pop	r1
    1618:	18 95       	reti

0000161a <__vector_22>:
    161a:	1f 92       	push	r1
    161c:	0f 92       	push	r0
    161e:	0f b6       	in	r0, 0x3f	; 63
    1620:	0f 92       	push	r0
    1622:	11 24       	eor	r1, r1
    1624:	2f 93       	push	r18
    1626:	3f 93       	push	r19
    1628:	4f 93       	push	r20
    162a:	5f 93       	push	r21
    162c:	6f 93       	push	r22
    162e:	7f 93       	push	r23
    1630:	8f 93       	push	r24
    1632:	9f 93       	push	r25
    1634:	af 93       	push	r26
    1636:	bf 93       	push	r27
    1638:	ef 93       	push	r30
    163a:	ff 93       	push	r31
    163c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1640:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1644:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1648:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    164c:	c9 01       	movw	r24, r18
    164e:	03 2e       	mov	r0, r19
    1650:	00 0c       	add	r0, r0
    1652:	aa 0b       	sbc	r26, r26
    1654:	bb 0b       	sbc	r27, r27
    1656:	dc 01       	movw	r26, r24
    1658:	99 27       	eor	r25, r25
    165a:	88 27       	eor	r24, r24
    165c:	60 e0       	ldi	r22, 0x00	; 0
    165e:	70 e0       	ldi	r23, 0x00	; 0
    1660:	84 2b       	or	r24, r20
    1662:	95 2b       	or	r25, r21
    1664:	a6 2b       	or	r26, r22
    1666:	b7 2b       	or	r27, r23
    1668:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    166c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1670:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1674:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1678:	b0 9b       	sbis	0x16, 0	; 22
    167a:	1b c0       	rjmp	.+54     	; 0x16b2 <__vector_22+0x98>
    167c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1680:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1684:	c9 01       	movw	r24, r18
    1686:	01 96       	adiw	r24, 0x01	; 1
    1688:	09 2e       	mov	r0, r25
    168a:	00 0c       	add	r0, r0
    168c:	aa 0b       	sbc	r26, r26
    168e:	bb 0b       	sbc	r27, r27
    1690:	dc 01       	movw	r26, r24
    1692:	99 27       	eor	r25, r25
    1694:	88 27       	eor	r24, r24
    1696:	60 e0       	ldi	r22, 0x00	; 0
    1698:	70 e0       	ldi	r23, 0x00	; 0
    169a:	84 2b       	or	r24, r20
    169c:	95 2b       	or	r25, r21
    169e:	a6 2b       	or	r26, r22
    16a0:	b7 2b       	or	r27, r23
    16a2:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    16a6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    16aa:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    16ae:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    16b2:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <mtable+0x22>
    16b6:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <mtable+0x23>
    16ba:	30 97       	sbiw	r30, 0x00	; 0
    16bc:	39 f0       	breq	.+14     	; 0x16cc <__vector_22+0xb2>
    16be:	61 e1       	ldi	r22, 0x11	; 17
    16c0:	70 e0       	ldi	r23, 0x00	; 0
    16c2:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <otable+0x22>
    16c6:	90 91 b9 01 	lds	r25, 0x01B9	; 0x8001b9 <otable+0x23>
    16ca:	09 95       	icall
    16cc:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    16d0:	ff 91       	pop	r31
    16d2:	ef 91       	pop	r30
    16d4:	bf 91       	pop	r27
    16d6:	af 91       	pop	r26
    16d8:	9f 91       	pop	r25
    16da:	8f 91       	pop	r24
    16dc:	7f 91       	pop	r23
    16de:	6f 91       	pop	r22
    16e0:	5f 91       	pop	r21
    16e2:	4f 91       	pop	r20
    16e4:	3f 91       	pop	r19
    16e6:	2f 91       	pop	r18
    16e8:	0f 90       	pop	r0
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	0f 90       	pop	r0
    16ee:	1f 90       	pop	r1
    16f0:	18 95       	reti

000016f2 <enqueueByDeadline>:
    16f2:	ef 92       	push	r14
    16f4:	ff 92       	push	r15
    16f6:	0f 93       	push	r16
    16f8:	1f 93       	push	r17
    16fa:	cf 93       	push	r28
    16fc:	df 93       	push	r29
    16fe:	7b 01       	movw	r14, r22
    1700:	eb 01       	movw	r28, r22
    1702:	a8 81       	ld	r26, Y
    1704:	b9 81       	ldd	r27, Y+1	; 0x01
    1706:	10 97       	sbiw	r26, 0x00	; 0
    1708:	61 f1       	breq	.+88     	; 0x1762 <enqueueByDeadline+0x70>
    170a:	fc 01       	movw	r30, r24
    170c:	06 81       	ldd	r16, Z+6	; 0x06
    170e:	17 81       	ldd	r17, Z+7	; 0x07
    1710:	20 85       	ldd	r18, Z+8	; 0x08
    1712:	31 85       	ldd	r19, Z+9	; 0x09
    1714:	16 96       	adiw	r26, 0x06	; 6
    1716:	4d 91       	ld	r20, X+
    1718:	5d 91       	ld	r21, X+
    171a:	6d 91       	ld	r22, X+
    171c:	7c 91       	ld	r23, X
    171e:	19 97       	sbiw	r26, 0x09	; 9
    1720:	04 17       	cp	r16, r20
    1722:	15 07       	cpc	r17, r21
    1724:	26 07       	cpc	r18, r22
    1726:	37 07       	cpc	r19, r23
    1728:	14 f4       	brge	.+4      	; 0x172e <enqueueByDeadline+0x3c>
    172a:	1b c0       	rjmp	.+54     	; 0x1762 <enqueueByDeadline+0x70>
    172c:	df 01       	movw	r26, r30
    172e:	ed 91       	ld	r30, X+
    1730:	fc 91       	ld	r31, X
    1732:	11 97       	sbiw	r26, 0x01	; 1
    1734:	30 97       	sbiw	r30, 0x00	; 0
    1736:	49 f0       	breq	.+18     	; 0x174a <enqueueByDeadline+0x58>
    1738:	46 81       	ldd	r20, Z+6	; 0x06
    173a:	57 81       	ldd	r21, Z+7	; 0x07
    173c:	60 85       	ldd	r22, Z+8	; 0x08
    173e:	71 85       	ldd	r23, Z+9	; 0x09
    1740:	04 17       	cp	r16, r20
    1742:	15 07       	cpc	r17, r21
    1744:	26 07       	cpc	r18, r22
    1746:	37 07       	cpc	r19, r23
    1748:	8c f7       	brge	.-30     	; 0x172c <enqueueByDeadline+0x3a>
    174a:	ec 01       	movw	r28, r24
    174c:	f9 83       	std	Y+1, r31	; 0x01
    174e:	e8 83       	st	Y, r30
    1750:	10 97       	sbiw	r26, 0x00	; 0
    1752:	21 f4       	brne	.+8      	; 0x175c <enqueueByDeadline+0x6a>
    1754:	f7 01       	movw	r30, r14
    1756:	91 83       	std	Z+1, r25	; 0x01
    1758:	80 83       	st	Z, r24
    175a:	07 c0       	rjmp	.+14     	; 0x176a <enqueueByDeadline+0x78>
    175c:	8d 93       	st	X+, r24
    175e:	9c 93       	st	X, r25
    1760:	04 c0       	rjmp	.+8      	; 0x176a <enqueueByDeadline+0x78>
    1762:	ec 01       	movw	r28, r24
    1764:	b9 83       	std	Y+1, r27	; 0x01
    1766:	a8 83       	st	Y, r26
    1768:	f5 cf       	rjmp	.-22     	; 0x1754 <enqueueByDeadline+0x62>
    176a:	df 91       	pop	r29
    176c:	cf 91       	pop	r28
    176e:	1f 91       	pop	r17
    1770:	0f 91       	pop	r16
    1772:	ff 90       	pop	r15
    1774:	ef 90       	pop	r14
    1776:	08 95       	ret

00001778 <enqueueByBaseline>:
    1778:	ef 92       	push	r14
    177a:	ff 92       	push	r15
    177c:	0f 93       	push	r16
    177e:	1f 93       	push	r17
    1780:	cf 93       	push	r28
    1782:	df 93       	push	r29
    1784:	7b 01       	movw	r14, r22
    1786:	eb 01       	movw	r28, r22
    1788:	a8 81       	ld	r26, Y
    178a:	b9 81       	ldd	r27, Y+1	; 0x01
    178c:	10 97       	sbiw	r26, 0x00	; 0
    178e:	61 f1       	breq	.+88     	; 0x17e8 <enqueueByBaseline+0x70>
    1790:	fc 01       	movw	r30, r24
    1792:	02 81       	ldd	r16, Z+2	; 0x02
    1794:	13 81       	ldd	r17, Z+3	; 0x03
    1796:	24 81       	ldd	r18, Z+4	; 0x04
    1798:	35 81       	ldd	r19, Z+5	; 0x05
    179a:	12 96       	adiw	r26, 0x02	; 2
    179c:	4d 91       	ld	r20, X+
    179e:	5d 91       	ld	r21, X+
    17a0:	6d 91       	ld	r22, X+
    17a2:	7c 91       	ld	r23, X
    17a4:	15 97       	sbiw	r26, 0x05	; 5
    17a6:	04 17       	cp	r16, r20
    17a8:	15 07       	cpc	r17, r21
    17aa:	26 07       	cpc	r18, r22
    17ac:	37 07       	cpc	r19, r23
    17ae:	14 f4       	brge	.+4      	; 0x17b4 <enqueueByBaseline+0x3c>
    17b0:	1b c0       	rjmp	.+54     	; 0x17e8 <enqueueByBaseline+0x70>
    17b2:	df 01       	movw	r26, r30
    17b4:	ed 91       	ld	r30, X+
    17b6:	fc 91       	ld	r31, X
    17b8:	11 97       	sbiw	r26, 0x01	; 1
    17ba:	30 97       	sbiw	r30, 0x00	; 0
    17bc:	49 f0       	breq	.+18     	; 0x17d0 <enqueueByBaseline+0x58>
    17be:	42 81       	ldd	r20, Z+2	; 0x02
    17c0:	53 81       	ldd	r21, Z+3	; 0x03
    17c2:	64 81       	ldd	r22, Z+4	; 0x04
    17c4:	75 81       	ldd	r23, Z+5	; 0x05
    17c6:	04 17       	cp	r16, r20
    17c8:	15 07       	cpc	r17, r21
    17ca:	26 07       	cpc	r18, r22
    17cc:	37 07       	cpc	r19, r23
    17ce:	8c f7       	brge	.-30     	; 0x17b2 <enqueueByBaseline+0x3a>
    17d0:	ec 01       	movw	r28, r24
    17d2:	f9 83       	std	Y+1, r31	; 0x01
    17d4:	e8 83       	st	Y, r30
    17d6:	10 97       	sbiw	r26, 0x00	; 0
    17d8:	21 f4       	brne	.+8      	; 0x17e2 <enqueueByBaseline+0x6a>
    17da:	f7 01       	movw	r30, r14
    17dc:	91 83       	std	Z+1, r25	; 0x01
    17de:	80 83       	st	Z, r24
    17e0:	07 c0       	rjmp	.+14     	; 0x17f0 <enqueueByBaseline+0x78>
    17e2:	8d 93       	st	X+, r24
    17e4:	9c 93       	st	X, r25
    17e6:	04 c0       	rjmp	.+8      	; 0x17f0 <enqueueByBaseline+0x78>
    17e8:	ec 01       	movw	r28, r24
    17ea:	b9 83       	std	Y+1, r27	; 0x01
    17ec:	a8 83       	st	Y, r26
    17ee:	f5 cf       	rjmp	.-22     	; 0x17da <enqueueByBaseline+0x62>
    17f0:	df 91       	pop	r29
    17f2:	cf 91       	pop	r28
    17f4:	1f 91       	pop	r17
    17f6:	0f 91       	pop	r16
    17f8:	ff 90       	pop	r15
    17fa:	ef 90       	pop	r14
    17fc:	08 95       	ret

000017fe <dequeue>:
    17fe:	dc 01       	movw	r26, r24
    1800:	ed 91       	ld	r30, X+
    1802:	fc 91       	ld	r31, X
    1804:	11 97       	sbiw	r26, 0x01	; 1
    1806:	30 97       	sbiw	r30, 0x00	; 0
    1808:	59 f4       	brne	.+22     	; 0x1820 <dequeue+0x22>
    180a:	8f ef       	ldi	r24, 0xFF	; 255
    180c:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__DATA_REGION_ORIGIN__+0x8c>
    1810:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__DATA_REGION_ORIGIN__+0x8d>
    1814:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__DATA_REGION_ORIGIN__+0x8e>
    1818:	81 e0       	ldi	r24, 0x01	; 1
    181a:	83 bf       	out	0x33, r24	; 51
    181c:	88 95       	sleep
    181e:	fd cf       	rjmp	.-6      	; 0x181a <dequeue+0x1c>
    1820:	20 81       	ld	r18, Z
    1822:	31 81       	ldd	r19, Z+1	; 0x01
    1824:	2d 93       	st	X+, r18
    1826:	3c 93       	st	X, r19
    1828:	cf 01       	movw	r24, r30
    182a:	08 95       	ret

0000182c <__vector_9>:
    182c:	1f 92       	push	r1
    182e:	0f 92       	push	r0
    1830:	0f b6       	in	r0, 0x3f	; 63
    1832:	0f 92       	push	r0
    1834:	11 24       	eor	r1, r1
    1836:	2f 93       	push	r18
    1838:	3f 93       	push	r19
    183a:	4f 93       	push	r20
    183c:	5f 93       	push	r21
    183e:	6f 93       	push	r22
    1840:	7f 93       	push	r23
    1842:	8f 93       	push	r24
    1844:	9f 93       	push	r25
    1846:	ef 93       	push	r30
    1848:	ff 93       	push	r31
    184a:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <overflows>
    184e:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <overflows+0x1>
    1852:	01 96       	adiw	r24, 0x01	; 1
    1854:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <overflows+0x1>
    1858:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <overflows>
    185c:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    1860:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    1864:	30 97       	sbiw	r30, 0x00	; 0
    1866:	01 f1       	breq	.+64     	; 0x18a8 <__vector_9+0x7c>
    1868:	42 81       	ldd	r20, Z+2	; 0x02
    186a:	53 81       	ldd	r21, Z+3	; 0x03
    186c:	64 81       	ldd	r22, Z+4	; 0x04
    186e:	75 81       	ldd	r23, Z+5	; 0x05
    1870:	86 17       	cp	r24, r22
    1872:	97 07       	cpc	r25, r23
    1874:	c9 f4       	brne	.+50     	; 0x18a8 <__vector_9+0x7c>
    1876:	ca 01       	movw	r24, r20
    1878:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    187c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1880:	42 1b       	sub	r20, r18
    1882:	53 0b       	sbc	r21, r19
    1884:	41 30       	cpi	r20, 0x01	; 1
    1886:	51 05       	cpc	r21, r1
    1888:	29 f4       	brne	.+10     	; 0x1894 <__vector_9+0x68>
    188a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    188e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1892:	01 96       	adiw	r24, 0x01	; 1
    1894:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1898:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    189c:	ef e6       	ldi	r30, 0x6F	; 111
    189e:	f0 e0       	ldi	r31, 0x00	; 0
    18a0:	80 81       	ld	r24, Z
    18a2:	82 60       	ori	r24, 0x02	; 2
    18a4:	80 83       	st	Z, r24
    18a6:	05 c0       	rjmp	.+10     	; 0x18b2 <__vector_9+0x86>
    18a8:	ef e6       	ldi	r30, 0x6F	; 111
    18aa:	f0 e0       	ldi	r31, 0x00	; 0
    18ac:	80 81       	ld	r24, Z
    18ae:	8d 7f       	andi	r24, 0xFD	; 253
    18b0:	80 83       	st	Z, r24
    18b2:	ff 91       	pop	r31
    18b4:	ef 91       	pop	r30
    18b6:	9f 91       	pop	r25
    18b8:	8f 91       	pop	r24
    18ba:	7f 91       	pop	r23
    18bc:	6f 91       	pop	r22
    18be:	5f 91       	pop	r21
    18c0:	4f 91       	pop	r20
    18c2:	3f 91       	pop	r19
    18c4:	2f 91       	pop	r18
    18c6:	0f 90       	pop	r0
    18c8:	0f be       	out	0x3f, r0	; 63
    18ca:	0f 90       	pop	r0
    18cc:	1f 90       	pop	r1
    18ce:	18 95       	reti

000018d0 <__vector_7>:
    18d0:	1f 92       	push	r1
    18d2:	0f 92       	push	r0
    18d4:	0f b6       	in	r0, 0x3f	; 63
    18d6:	0f 92       	push	r0
    18d8:	11 24       	eor	r1, r1
    18da:	cf 92       	push	r12
    18dc:	df 92       	push	r13
    18de:	ef 92       	push	r14
    18e0:	ff 92       	push	r15
    18e2:	2f 93       	push	r18
    18e4:	3f 93       	push	r19
    18e6:	4f 93       	push	r20
    18e8:	5f 93       	push	r21
    18ea:	6f 93       	push	r22
    18ec:	7f 93       	push	r23
    18ee:	8f 93       	push	r24
    18f0:	9f 93       	push	r25
    18f2:	af 93       	push	r26
    18f4:	bf 93       	push	r27
    18f6:	ef 93       	push	r30
    18f8:	ff 93       	push	r31
    18fa:	c0 90 8c 01 	lds	r12, 0x018C	; 0x80018c <overflows>
    18fe:	d0 90 8d 01 	lds	r13, 0x018D	; 0x80018d <overflows+0x1>
    1902:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1906:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    190a:	b0 99       	sbic	0x16, 0	; 22
    190c:	0f c0       	rjmp	.+30     	; 0x192c <__vector_7+0x5c>
    190e:	0d 2c       	mov	r0, r13
    1910:	00 0c       	add	r0, r0
    1912:	ee 08       	sbc	r14, r14
    1914:	ff 08       	sbc	r15, r15
    1916:	d6 01       	movw	r26, r12
    1918:	99 27       	eor	r25, r25
    191a:	88 27       	eor	r24, r24
    191c:	69 01       	movw	r12, r18
    191e:	e1 2c       	mov	r14, r1
    1920:	f1 2c       	mov	r15, r1
    1922:	c8 2a       	or	r12, r24
    1924:	d9 2a       	or	r13, r25
    1926:	ea 2a       	or	r14, r26
    1928:	fb 2a       	or	r15, r27
    192a:	15 c0       	rjmp	.+42     	; 0x1956 <__vector_7+0x86>
    192c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1930:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1934:	8f ef       	ldi	r24, 0xFF	; 255
    1936:	c8 1a       	sub	r12, r24
    1938:	d8 0a       	sbc	r13, r24
    193a:	0d 2c       	mov	r0, r13
    193c:	00 0c       	add	r0, r0
    193e:	ee 08       	sbc	r14, r14
    1940:	ff 08       	sbc	r15, r15
    1942:	d6 01       	movw	r26, r12
    1944:	99 27       	eor	r25, r25
    1946:	88 27       	eor	r24, r24
    1948:	69 01       	movw	r12, r18
    194a:	e1 2c       	mov	r14, r1
    194c:	f1 2c       	mov	r15, r1
    194e:	c8 2a       	or	r12, r24
    1950:	d9 2a       	or	r13, r25
    1952:	ea 2a       	or	r14, r26
    1954:	fb 2a       	or	r15, r27
    1956:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    195a:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    195e:	30 97       	sbiw	r30, 0x00	; 0
    1960:	09 f4       	brne	.+2      	; 0x1964 <__vector_7+0x94>
    1962:	42 c0       	rjmp	.+132    	; 0x19e8 <__vector_7+0x118>
    1964:	82 81       	ldd	r24, Z+2	; 0x02
    1966:	93 81       	ldd	r25, Z+3	; 0x03
    1968:	a4 81       	ldd	r26, Z+4	; 0x04
    196a:	b5 81       	ldd	r27, Z+5	; 0x05
    196c:	8c 19       	sub	r24, r12
    196e:	9d 09       	sbc	r25, r13
    1970:	ae 09       	sbc	r26, r14
    1972:	bf 09       	sbc	r27, r15
    1974:	18 16       	cp	r1, r24
    1976:	19 06       	cpc	r1, r25
    1978:	1a 06       	cpc	r1, r26
    197a:	1b 06       	cpc	r1, r27
    197c:	ec f1       	brlt	.+122    	; 0x19f8 <__vector_7+0x128>
    197e:	82 e9       	ldi	r24, 0x92	; 146
    1980:	91 e0       	ldi	r25, 0x01	; 1
    1982:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <dequeue>
    1986:	64 e9       	ldi	r22, 0x94	; 148
    1988:	71 e0       	ldi	r23, 0x01	; 1
    198a:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <enqueueByDeadline>
    198e:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    1992:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    1996:	30 97       	sbiw	r30, 0x00	; 0
    1998:	39 f1       	breq	.+78     	; 0x19e8 <__vector_7+0x118>
    199a:	82 81       	ldd	r24, Z+2	; 0x02
    199c:	93 81       	ldd	r25, Z+3	; 0x03
    199e:	a4 81       	ldd	r26, Z+4	; 0x04
    19a0:	b5 81       	ldd	r27, Z+5	; 0x05
    19a2:	8c 19       	sub	r24, r12
    19a4:	9d 09       	sbc	r25, r13
    19a6:	ae 09       	sbc	r26, r14
    19a8:	bf 09       	sbc	r27, r15
    19aa:	18 16       	cp	r1, r24
    19ac:	19 06       	cpc	r1, r25
    19ae:	1a 06       	cpc	r1, r26
    19b0:	1b 06       	cpc	r1, r27
    19b2:	2c f7       	brge	.-54     	; 0x197e <__vector_7+0xae>
    19b4:	21 c0       	rjmp	.+66     	; 0x19f8 <__vector_7+0x128>
    19b6:	9c 01       	movw	r18, r24
    19b8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    19bc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    19c0:	84 1b       	sub	r24, r20
    19c2:	95 0b       	sbc	r25, r21
    19c4:	01 97       	sbiw	r24, 0x01	; 1
    19c6:	31 f4       	brne	.+12     	; 0x19d4 <__vector_7+0x104>
    19c8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    19cc:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    19d0:	2f 5f       	subi	r18, 0xFF	; 255
    19d2:	3f 4f       	sbci	r19, 0xFF	; 255
    19d4:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    19d8:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    19dc:	ef e6       	ldi	r30, 0x6F	; 111
    19de:	f0 e0       	ldi	r31, 0x00	; 0
    19e0:	80 81       	ld	r24, Z
    19e2:	82 60       	ori	r24, 0x02	; 2
    19e4:	80 83       	st	Z, r24
    19e6:	05 c0       	rjmp	.+10     	; 0x19f2 <__vector_7+0x122>
    19e8:	ef e6       	ldi	r30, 0x6F	; 111
    19ea:	f0 e0       	ldi	r31, 0x00	; 0
    19ec:	80 81       	ld	r24, Z
    19ee:	8d 7f       	andi	r24, 0xFD	; 253
    19f0:	80 83       	st	Z, r24
    19f2:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    19f6:	0c c0       	rjmp	.+24     	; 0x1a10 <__vector_7+0x140>
    19f8:	82 81       	ldd	r24, Z+2	; 0x02
    19fa:	93 81       	ldd	r25, Z+3	; 0x03
    19fc:	a4 81       	ldd	r26, Z+4	; 0x04
    19fe:	b5 81       	ldd	r27, Z+5	; 0x05
    1a00:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1a04:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1a08:	2a 17       	cp	r18, r26
    1a0a:	3b 07       	cpc	r19, r27
    1a0c:	69 f7       	brne	.-38     	; 0x19e8 <__vector_7+0x118>
    1a0e:	d3 cf       	rjmp	.-90     	; 0x19b6 <__vector_7+0xe6>
    1a10:	ff 91       	pop	r31
    1a12:	ef 91       	pop	r30
    1a14:	bf 91       	pop	r27
    1a16:	af 91       	pop	r26
    1a18:	9f 91       	pop	r25
    1a1a:	8f 91       	pop	r24
    1a1c:	7f 91       	pop	r23
    1a1e:	6f 91       	pop	r22
    1a20:	5f 91       	pop	r21
    1a22:	4f 91       	pop	r20
    1a24:	3f 91       	pop	r19
    1a26:	2f 91       	pop	r18
    1a28:	ff 90       	pop	r15
    1a2a:	ef 90       	pop	r14
    1a2c:	df 90       	pop	r13
    1a2e:	cf 90       	pop	r12
    1a30:	0f 90       	pop	r0
    1a32:	0f be       	out	0x3f, r0	; 63
    1a34:	0f 90       	pop	r0
    1a36:	1f 90       	pop	r1
    1a38:	18 95       	reti

00001a3a <async>:
    1a3a:	3f 92       	push	r3
    1a3c:	4f 92       	push	r4
    1a3e:	5f 92       	push	r5
    1a40:	6f 92       	push	r6
    1a42:	7f 92       	push	r7
    1a44:	8f 92       	push	r8
    1a46:	9f 92       	push	r9
    1a48:	af 92       	push	r10
    1a4a:	bf 92       	push	r11
    1a4c:	cf 92       	push	r12
    1a4e:	df 92       	push	r13
    1a50:	ef 92       	push	r14
    1a52:	ff 92       	push	r15
    1a54:	0f 93       	push	r16
    1a56:	1f 93       	push	r17
    1a58:	cf 93       	push	r28
    1a5a:	df 93       	push	r29
    1a5c:	2b 01       	movw	r4, r22
    1a5e:	3c 01       	movw	r6, r24
    1a60:	49 01       	movw	r8, r18
    1a62:	5a 01       	movw	r10, r20
    1a64:	8f b7       	in	r24, 0x3f	; 63
    1a66:	80 78       	andi	r24, 0x80	; 128
    1a68:	38 2e       	mov	r3, r24
    1a6a:	f8 94       	cli
    1a6c:	82 e8       	ldi	r24, 0x82	; 130
    1a6e:	91 e0       	ldi	r25, 0x01	; 1
    1a70:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <dequeue>
    1a74:	ec 01       	movw	r28, r24
    1a76:	1b 87       	std	Y+11, r17	; 0x0b
    1a78:	0a 87       	std	Y+10, r16	; 0x0a
    1a7a:	fd 86       	std	Y+13, r15	; 0x0d
    1a7c:	ec 86       	std	Y+12, r14	; 0x0c
    1a7e:	df 86       	std	Y+15, r13	; 0x0f
    1a80:	ce 86       	std	Y+14, r12	; 0x0e
    1a82:	33 20       	and	r3, r3
    1a84:	61 f0       	breq	.+24     	; 0x1a9e <async+0x64>
    1a86:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <current>
    1a8a:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <current+0x1>
    1a8e:	02 80       	ldd	r0, Z+2	; 0x02
    1a90:	f3 81       	ldd	r31, Z+3	; 0x03
    1a92:	e0 2d       	mov	r30, r0
    1a94:	82 81       	ldd	r24, Z+2	; 0x02
    1a96:	93 81       	ldd	r25, Z+3	; 0x03
    1a98:	a4 81       	ldd	r26, Z+4	; 0x04
    1a9a:	b5 81       	ldd	r27, Z+5	; 0x05
    1a9c:	08 c0       	rjmp	.+16     	; 0x1aae <async+0x74>
    1a9e:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <timestamp>
    1aa2:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <timestamp+0x1>
    1aa6:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <timestamp+0x2>
    1aaa:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <timestamp+0x3>
    1aae:	48 0e       	add	r4, r24
    1ab0:	59 1e       	adc	r5, r25
    1ab2:	6a 1e       	adc	r6, r26
    1ab4:	7b 1e       	adc	r7, r27
    1ab6:	4a 82       	std	Y+2, r4	; 0x02
    1ab8:	5b 82       	std	Y+3, r5	; 0x03
    1aba:	6c 82       	std	Y+4, r6	; 0x04
    1abc:	7d 82       	std	Y+5, r7	; 0x05
    1abe:	18 14       	cp	r1, r8
    1ac0:	19 04       	cpc	r1, r9
    1ac2:	1a 04       	cpc	r1, r10
    1ac4:	1b 04       	cpc	r1, r11
    1ac6:	44 f0       	brlt	.+16     	; 0x1ad8 <async+0x9e>
    1ac8:	0f 2e       	mov	r0, r31
    1aca:	88 24       	eor	r8, r8
    1acc:	8a 94       	dec	r8
    1ace:	98 2c       	mov	r9, r8
    1ad0:	a8 2c       	mov	r10, r8
    1ad2:	ff e7       	ldi	r31, 0x7F	; 127
    1ad4:	bf 2e       	mov	r11, r31
    1ad6:	f0 2d       	mov	r31, r0
    1ad8:	84 0c       	add	r8, r4
    1ada:	95 1c       	adc	r9, r5
    1adc:	a6 1c       	adc	r10, r6
    1ade:	b7 1c       	adc	r11, r7
    1ae0:	8e 82       	std	Y+6, r8	; 0x06
    1ae2:	9f 82       	std	Y+7, r9	; 0x07
    1ae4:	a8 86       	std	Y+8, r10	; 0x08
    1ae6:	b9 86       	std	Y+9, r11	; 0x09
    1ae8:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <overflows>
    1aec:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <overflows+0x1>
    1af0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1af4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1af8:	b0 99       	sbic	0x16, 0	; 22
    1afa:	0e c0       	rjmp	.+28     	; 0x1b18 <async+0xde>
    1afc:	09 2e       	mov	r0, r25
    1afe:	00 0c       	add	r0, r0
    1b00:	aa 0b       	sbc	r26, r26
    1b02:	bb 0b       	sbc	r27, r27
    1b04:	dc 01       	movw	r26, r24
    1b06:	99 27       	eor	r25, r25
    1b08:	88 27       	eor	r24, r24
    1b0a:	60 e0       	ldi	r22, 0x00	; 0
    1b0c:	70 e0       	ldi	r23, 0x00	; 0
    1b0e:	84 2b       	or	r24, r20
    1b10:	95 2b       	or	r25, r21
    1b12:	a6 2b       	or	r26, r22
    1b14:	b7 2b       	or	r27, r23
    1b16:	13 c0       	rjmp	.+38     	; 0x1b3e <async+0x104>
    1b18:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1b1c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1b20:	01 96       	adiw	r24, 0x01	; 1
    1b22:	09 2e       	mov	r0, r25
    1b24:	00 0c       	add	r0, r0
    1b26:	aa 0b       	sbc	r26, r26
    1b28:	bb 0b       	sbc	r27, r27
    1b2a:	dc 01       	movw	r26, r24
    1b2c:	99 27       	eor	r25, r25
    1b2e:	88 27       	eor	r24, r24
    1b30:	a9 01       	movw	r20, r18
    1b32:	60 e0       	ldi	r22, 0x00	; 0
    1b34:	70 e0       	ldi	r23, 0x00	; 0
    1b36:	84 2b       	or	r24, r20
    1b38:	95 2b       	or	r25, r21
    1b3a:	a6 2b       	or	r26, r22
    1b3c:	b7 2b       	or	r27, r23
    1b3e:	48 1a       	sub	r4, r24
    1b40:	59 0a       	sbc	r5, r25
    1b42:	6a 0a       	sbc	r6, r26
    1b44:	7b 0a       	sbc	r7, r27
    1b46:	14 14       	cp	r1, r4
    1b48:	15 04       	cpc	r1, r5
    1b4a:	16 04       	cpc	r1, r6
    1b4c:	17 04       	cpc	r1, r7
    1b4e:	ac f5       	brge	.+106    	; 0x1bba <async+0x180>
    1b50:	62 e9       	ldi	r22, 0x92	; 146
    1b52:	71 e0       	ldi	r23, 0x01	; 1
    1b54:	ce 01       	movw	r24, r28
    1b56:	0e 94 bc 0b 	call	0x1778	; 0x1778 <enqueueByBaseline>
    1b5a:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    1b5e:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    1b62:	30 97       	sbiw	r30, 0x00	; 0
    1b64:	21 f1       	breq	.+72     	; 0x1bae <async+0x174>
    1b66:	82 81       	ldd	r24, Z+2	; 0x02
    1b68:	93 81       	ldd	r25, Z+3	; 0x03
    1b6a:	a4 81       	ldd	r26, Z+4	; 0x04
    1b6c:	b5 81       	ldd	r27, Z+5	; 0x05
    1b6e:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1b72:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1b76:	2a 17       	cp	r18, r26
    1b78:	3b 07       	cpc	r19, r27
    1b7a:	c9 f4       	brne	.+50     	; 0x1bae <async+0x174>
    1b7c:	9c 01       	movw	r18, r24
    1b7e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1b82:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1b86:	84 1b       	sub	r24, r20
    1b88:	95 0b       	sbc	r25, r21
    1b8a:	01 97       	sbiw	r24, 0x01	; 1
    1b8c:	31 f4       	brne	.+12     	; 0x1b9a <async+0x160>
    1b8e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1b92:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1b96:	2f 5f       	subi	r18, 0xFF	; 255
    1b98:	3f 4f       	sbci	r19, 0xFF	; 255
    1b9a:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1b9e:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1ba2:	ef e6       	ldi	r30, 0x6F	; 111
    1ba4:	f0 e0       	ldi	r31, 0x00	; 0
    1ba6:	80 81       	ld	r24, Z
    1ba8:	82 60       	ori	r24, 0x02	; 2
    1baa:	80 83       	st	Z, r24
    1bac:	41 c0       	rjmp	.+130    	; 0x1c30 <async+0x1f6>
    1bae:	ef e6       	ldi	r30, 0x6F	; 111
    1bb0:	f0 e0       	ldi	r31, 0x00	; 0
    1bb2:	80 81       	ld	r24, Z
    1bb4:	8d 7f       	andi	r24, 0xFD	; 253
    1bb6:	80 83       	st	Z, r24
    1bb8:	3b c0       	rjmp	.+118    	; 0x1c30 <async+0x1f6>
    1bba:	64 e9       	ldi	r22, 0x94	; 148
    1bbc:	71 e0       	ldi	r23, 0x01	; 1
    1bbe:	ce 01       	movw	r24, r28
    1bc0:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <enqueueByDeadline>
    1bc4:	33 20       	and	r3, r3
    1bc6:	b9 f1       	breq	.+110    	; 0x1c36 <async+0x1fc>
    1bc8:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
    1bcc:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
    1bd0:	00 97       	sbiw	r24, 0x00	; 0
    1bd2:	81 f1       	breq	.+96     	; 0x1c34 <async+0x1fa>
    1bd4:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <activeStack>
    1bd8:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <activeStack+0x1>
    1bdc:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <msgQ>
    1be0:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <msgQ+0x1>
    1be4:	02 81       	ldd	r16, Z+2	; 0x02
    1be6:	13 81       	ldd	r17, Z+3	; 0x03
    1be8:	d9 01       	movw	r26, r18
    1bea:	16 96       	adiw	r26, 0x06	; 6
    1bec:	4d 91       	ld	r20, X+
    1bee:	5d 91       	ld	r21, X+
    1bf0:	6d 91       	ld	r22, X+
    1bf2:	7c 91       	ld	r23, X
    1bf4:	19 97       	sbiw	r26, 0x09	; 9
    1bf6:	d8 01       	movw	r26, r16
    1bf8:	16 96       	adiw	r26, 0x06	; 6
    1bfa:	0d 91       	ld	r16, X+
    1bfc:	1d 91       	ld	r17, X+
    1bfe:	2d 91       	ld	r18, X+
    1c00:	3c 91       	ld	r19, X
    1c02:	19 97       	sbiw	r26, 0x09	; 9
    1c04:	40 1b       	sub	r20, r16
    1c06:	51 0b       	sbc	r21, r17
    1c08:	62 0b       	sbc	r22, r18
    1c0a:	73 0b       	sbc	r23, r19
    1c0c:	9a f4       	brpl	.+38     	; 0x1c34 <async+0x1fa>
    1c0e:	dc 01       	movw	r26, r24
    1c10:	2d 91       	ld	r18, X+
    1c12:	3c 91       	ld	r19, X
    1c14:	11 97       	sbiw	r26, 0x01	; 1
    1c16:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <threadPool+0x1>
    1c1a:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <threadPool>
    1c1e:	ed 93       	st	X+, r30
    1c20:	fc 93       	st	X, r31
    1c22:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <activeStack+0x1>
    1c26:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <activeStack>
    1c2a:	0e 94 86 03 	call	0x70c	; 0x70c <dispatch>
    1c2e:	02 c0       	rjmp	.+4      	; 0x1c34 <async+0x1fa>
    1c30:	33 20       	and	r3, r3
    1c32:	09 f0       	breq	.+2      	; 0x1c36 <async+0x1fc>
    1c34:	78 94       	sei
    1c36:	ce 01       	movw	r24, r28
    1c38:	df 91       	pop	r29
    1c3a:	cf 91       	pop	r28
    1c3c:	1f 91       	pop	r17
    1c3e:	0f 91       	pop	r16
    1c40:	ff 90       	pop	r15
    1c42:	ef 90       	pop	r14
    1c44:	df 90       	pop	r13
    1c46:	cf 90       	pop	r12
    1c48:	bf 90       	pop	r11
    1c4a:	af 90       	pop	r10
    1c4c:	9f 90       	pop	r9
    1c4e:	8f 90       	pop	r8
    1c50:	7f 90       	pop	r7
    1c52:	6f 90       	pop	r6
    1c54:	5f 90       	pop	r5
    1c56:	4f 90       	pop	r4
    1c58:	3f 90       	pop	r3
    1c5a:	08 95       	ret

00001c5c <sync>:
    1c5c:	cf 92       	push	r12
    1c5e:	df 92       	push	r13
    1c60:	ef 92       	push	r14
    1c62:	ff 92       	push	r15
    1c64:	0f 93       	push	r16
    1c66:	1f 93       	push	r17
    1c68:	cf 93       	push	r28
    1c6a:	df 93       	push	r29
    1c6c:	ec 01       	movw	r28, r24
    1c6e:	7b 01       	movw	r14, r22
    1c70:	6a 01       	movw	r12, r20
    1c72:	1f b7       	in	r17, 0x3f	; 63
    1c74:	10 78       	andi	r17, 0x80	; 128
    1c76:	f8 94       	cli
    1c78:	a8 81       	ld	r26, Y
    1c7a:	b9 81       	ldd	r27, Y+1	; 0x01
    1c7c:	10 97       	sbiw	r26, 0x00	; 0
    1c7e:	61 f1       	breq	.+88     	; 0x1cd8 <sync+0x7c>
    1c80:	14 96       	adiw	r26, 0x04	; 4
    1c82:	ed 91       	ld	r30, X+
    1c84:	fc 91       	ld	r31, X
    1c86:	15 97       	sbiw	r26, 0x05	; 5
    1c88:	30 97       	sbiw	r30, 0x00	; 0
    1c8a:	41 f0       	breq	.+16     	; 0x1c9c <sync+0x40>
    1c8c:	a0 81       	ld	r26, Z
    1c8e:	b1 81       	ldd	r27, Z+1	; 0x01
    1c90:	14 96       	adiw	r26, 0x04	; 4
    1c92:	ed 91       	ld	r30, X+
    1c94:	fc 91       	ld	r31, X
    1c96:	15 97       	sbiw	r26, 0x05	; 5
    1c98:	30 97       	sbiw	r30, 0x00	; 0
    1c9a:	c1 f7       	brne	.-16     	; 0x1c8c <sync+0x30>
    1c9c:	20 91 7c 01 	lds	r18, 0x017C	; 0x80017c <current>
    1ca0:	30 91 7d 01 	lds	r19, 0x017D	; 0x80017d <current+0x1>
    1ca4:	2a 17       	cp	r18, r26
    1ca6:	3b 07       	cpc	r19, r27
    1ca8:	21 f0       	breq	.+8      	; 0x1cb2 <sync+0x56>
    1caa:	11 23       	and	r17, r17
    1cac:	09 f4       	brne	.+2      	; 0x1cb0 <sync+0x54>
    1cae:	3d c0       	rjmp	.+122    	; 0x1d2a <sync+0xce>
    1cb0:	07 c0       	rjmp	.+14     	; 0x1cc0 <sync+0x64>
    1cb2:	11 23       	and	r17, r17
    1cb4:	09 f4       	brne	.+2      	; 0x1cb8 <sync+0x5c>
    1cb6:	3c c0       	rjmp	.+120    	; 0x1d30 <sync+0xd4>
    1cb8:	78 94       	sei
    1cba:	8f ef       	ldi	r24, 0xFF	; 255
    1cbc:	9f ef       	ldi	r25, 0xFF	; 255
    1cbe:	52 c0       	rjmp	.+164    	; 0x1d64 <sync+0x108>
    1cc0:	8a 81       	ldd	r24, Y+2	; 0x02
    1cc2:	9b 81       	ldd	r25, Y+3	; 0x03
    1cc4:	00 97       	sbiw	r24, 0x00	; 0
    1cc6:	d1 f1       	breq	.+116    	; 0x1d3c <sync+0xe0>
    1cc8:	fc 01       	movw	r30, r24
    1cca:	15 82       	std	Z+5, r1	; 0x05
    1ccc:	14 82       	std	Z+4, r1	; 0x04
    1cce:	36 c0       	rjmp	.+108    	; 0x1d3c <sync+0xe0>
    1cd0:	78 94       	sei
    1cd2:	80 e0       	ldi	r24, 0x00	; 0
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	46 c0       	rjmp	.+140    	; 0x1d64 <sync+0x108>
    1cd8:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current>
    1cdc:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current+0x1>
    1ce0:	99 83       	std	Y+1, r25	; 0x01
    1ce2:	88 83       	st	Y, r24
    1ce4:	11 23       	and	r17, r17
    1ce6:	29 f0       	breq	.+10     	; 0x1cf2 <sync+0x96>
    1ce8:	8a 81       	ldd	r24, Y+2	; 0x02
    1cea:	9b 81       	ldd	r25, Y+3	; 0x03
    1cec:	01 97       	sbiw	r24, 0x01	; 1
    1cee:	09 f0       	breq	.+2      	; 0x1cf2 <sync+0x96>
    1cf0:	78 94       	sei
    1cf2:	b6 01       	movw	r22, r12
    1cf4:	ce 01       	movw	r24, r28
    1cf6:	f7 01       	movw	r30, r14
    1cf8:	09 95       	icall
    1cfa:	f8 2e       	mov	r15, r24
    1cfc:	09 2f       	mov	r16, r25
    1cfe:	8f b7       	in	r24, 0x3f	; 63
    1d00:	f8 94       	cli
    1d02:	19 82       	std	Y+1, r1	; 0x01
    1d04:	18 82       	st	Y, r1
    1d06:	8a 81       	ldd	r24, Y+2	; 0x02
    1d08:	9b 81       	ldd	r25, Y+3	; 0x03
    1d0a:	82 30       	cpi	r24, 0x02	; 2
    1d0c:	91 05       	cpc	r25, r1
    1d0e:	38 f0       	brcs	.+14     	; 0x1d1e <sync+0xc2>
    1d10:	1b 82       	std	Y+3, r1	; 0x03
    1d12:	1a 82       	std	Y+2, r1	; 0x02
    1d14:	fc 01       	movw	r30, r24
    1d16:	15 82       	std	Z+5, r1	; 0x05
    1d18:	14 82       	std	Z+4, r1	; 0x04
    1d1a:	0e 94 86 03 	call	0x70c	; 0x70c <dispatch>
    1d1e:	11 23       	and	r17, r17
    1d20:	51 f0       	breq	.+20     	; 0x1d36 <sync+0xda>
    1d22:	78 94       	sei
    1d24:	8f 2d       	mov	r24, r15
    1d26:	90 2f       	mov	r25, r16
    1d28:	1d c0       	rjmp	.+58     	; 0x1d64 <sync+0x108>
    1d2a:	8f ef       	ldi	r24, 0xFF	; 255
    1d2c:	9f ef       	ldi	r25, 0xFF	; 255
    1d2e:	1a c0       	rjmp	.+52     	; 0x1d64 <sync+0x108>
    1d30:	8f ef       	ldi	r24, 0xFF	; 255
    1d32:	9f ef       	ldi	r25, 0xFF	; 255
    1d34:	17 c0       	rjmp	.+46     	; 0x1d64 <sync+0x108>
    1d36:	8f 2d       	mov	r24, r15
    1d38:	90 2f       	mov	r25, r16
    1d3a:	14 c0       	rjmp	.+40     	; 0x1d64 <sync+0x108>
    1d3c:	3b 83       	std	Y+3, r19	; 0x03
    1d3e:	2a 83       	std	Y+2, r18	; 0x02
    1d40:	f9 01       	movw	r30, r18
    1d42:	d5 83       	std	Z+5, r29	; 0x05
    1d44:	c4 83       	std	Z+4, r28	; 0x04
    1d46:	cd 01       	movw	r24, r26
    1d48:	0e 94 86 03 	call	0x70c	; 0x70c <dispatch>
    1d4c:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <current>
    1d50:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <current+0x1>
    1d54:	82 81       	ldd	r24, Z+2	; 0x02
    1d56:	93 81       	ldd	r25, Z+3	; 0x03
    1d58:	89 2b       	or	r24, r25
    1d5a:	09 f4       	brne	.+2      	; 0x1d5e <sync+0x102>
    1d5c:	b9 cf       	rjmp	.-142    	; 0x1cd0 <sync+0x74>
    1d5e:	f9 83       	std	Y+1, r31	; 0x01
    1d60:	e8 83       	st	Y, r30
    1d62:	c2 cf       	rjmp	.-124    	; 0x1ce8 <sync+0x8c>
    1d64:	df 91       	pop	r29
    1d66:	cf 91       	pop	r28
    1d68:	1f 91       	pop	r17
    1d6a:	0f 91       	pop	r16
    1d6c:	ff 90       	pop	r15
    1d6e:	ef 90       	pop	r14
    1d70:	df 90       	pop	r13
    1d72:	cf 90       	pop	r12
    1d74:	08 95       	ret

00001d76 <run>:
    1d76:	00 91 7c 01 	lds	r16, 0x017C	; 0x80017c <current>
    1d7a:	10 91 7d 01 	lds	r17, 0x017D	; 0x80017d <current+0x1>
    1d7e:	84 e9       	ldi	r24, 0x94	; 148
    1d80:	91 e0       	ldi	r25, 0x01	; 1
    1d82:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <dequeue>
    1d86:	ec 01       	movw	r28, r24
    1d88:	d8 01       	movw	r26, r16
    1d8a:	13 96       	adiw	r26, 0x03	; 3
    1d8c:	9c 93       	st	X, r25
    1d8e:	8e 93       	st	-X, r24
    1d90:	12 97       	sbiw	r26, 0x02	; 2
    1d92:	78 94       	sei
    1d94:	4e 85       	ldd	r20, Y+14	; 0x0e
    1d96:	5f 85       	ldd	r21, Y+15	; 0x0f
    1d98:	6c 85       	ldd	r22, Y+12	; 0x0c
    1d9a:	7d 85       	ldd	r23, Y+13	; 0x0d
    1d9c:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d9e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1da0:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <sync>
    1da4:	8f b7       	in	r24, 0x3f	; 63
    1da6:	f8 94       	cli
    1da8:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <msgPool>
    1dac:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <msgPool+0x1>
    1db0:	99 83       	std	Y+1, r25	; 0x01
    1db2:	88 83       	st	Y, r24
    1db4:	d0 93 83 01 	sts	0x0183, r29	; 0x800183 <msgPool+0x1>
    1db8:	c0 93 82 01 	sts	0x0182, r28	; 0x800182 <msgPool>
    1dbc:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <activeStack>
    1dc0:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <activeStack+0x1>
    1dc4:	00 81       	ld	r16, Z
    1dc6:	11 81       	ldd	r17, Z+1	; 0x01
    1dc8:	e8 01       	movw	r28, r16
    1dca:	2a 81       	ldd	r18, Y+2	; 0x02
    1dcc:	3b 81       	ldd	r19, Y+3	; 0x03
    1dce:	a0 91 94 01 	lds	r26, 0x0194	; 0x800194 <msgQ>
    1dd2:	b0 91 95 01 	lds	r27, 0x0195	; 0x800195 <msgQ+0x1>
    1dd6:	10 97       	sbiw	r26, 0x00	; 0
    1dd8:	c1 f0       	breq	.+48     	; 0x1e0a <run+0x94>
    1dda:	21 15       	cp	r18, r1
    1ddc:	31 05       	cpc	r19, r1
    1dde:	59 f2       	breq	.-106    	; 0x1d76 <run>
    1de0:	16 96       	adiw	r26, 0x06	; 6
    1de2:	8d 91       	ld	r24, X+
    1de4:	9d 91       	ld	r25, X+
    1de6:	0d 90       	ld	r0, X+
    1de8:	bc 91       	ld	r27, X
    1dea:	a0 2d       	mov	r26, r0
    1dec:	e9 01       	movw	r28, r18
    1dee:	4e 81       	ldd	r20, Y+6	; 0x06
    1df0:	5f 81       	ldd	r21, Y+7	; 0x07
    1df2:	68 85       	ldd	r22, Y+8	; 0x08
    1df4:	79 85       	ldd	r23, Y+9	; 0x09
    1df6:	84 1b       	sub	r24, r20
    1df8:	95 0b       	sbc	r25, r21
    1dfa:	a6 0b       	sbc	r26, r22
    1dfc:	b7 0b       	sbc	r27, r23
    1dfe:	18 16       	cp	r1, r24
    1e00:	19 06       	cpc	r1, r25
    1e02:	1a 06       	cpc	r1, r26
    1e04:	1b 06       	cpc	r1, r27
    1e06:	0c f0       	brlt	.+2      	; 0x1e0a <run+0x94>
    1e08:	b6 cf       	rjmp	.-148    	; 0x1d76 <run>
    1e0a:	10 93 7f 01 	sts	0x017F, r17	; 0x80017f <activeStack+0x1>
    1e0e:	00 93 7e 01 	sts	0x017E, r16	; 0x80017e <activeStack>
    1e12:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
    1e16:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
    1e1a:	91 83       	std	Z+1, r25	; 0x01
    1e1c:	80 83       	st	Z, r24
    1e1e:	f0 93 81 01 	sts	0x0181, r31	; 0x800181 <threadPool+0x1>
    1e22:	e0 93 80 01 	sts	0x0180, r30	; 0x800180 <threadPool>
    1e26:	a0 91 7e 01 	lds	r26, 0x017E	; 0x80017e <activeStack>
    1e2a:	b0 91 7f 01 	lds	r27, 0x017F	; 0x80017f <activeStack+0x1>
    1e2e:	14 96       	adiw	r26, 0x04	; 4
    1e30:	ed 91       	ld	r30, X+
    1e32:	fc 91       	ld	r31, X
    1e34:	15 97       	sbiw	r26, 0x05	; 5
    1e36:	30 97       	sbiw	r30, 0x00	; 0
    1e38:	41 f0       	breq	.+16     	; 0x1e4a <run+0xd4>
    1e3a:	a0 81       	ld	r26, Z
    1e3c:	b1 81       	ldd	r27, Z+1	; 0x01
    1e3e:	14 96       	adiw	r26, 0x04	; 4
    1e40:	ed 91       	ld	r30, X+
    1e42:	fc 91       	ld	r31, X
    1e44:	15 97       	sbiw	r26, 0x05	; 5
    1e46:	30 97       	sbiw	r30, 0x00	; 0
    1e48:	c1 f7       	brne	.-16     	; 0x1e3a <run+0xc4>
    1e4a:	cd 01       	movw	r24, r26
    1e4c:	0e 94 86 03 	call	0x70c	; 0x70c <dispatch>
    1e50:	92 cf       	rjmp	.-220    	; 0x1d76 <run>

00001e52 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1e52:	42 31       	cpi	r20, 0x12	; 18
    1e54:	b8 f4       	brcc	.+46     	; 0x1e84 <install+0x32>
        char status;
        DISABLE(status);
    1e56:	2f b7       	in	r18, 0x3f	; 63
    1e58:	f8 94       	cli
        otable[i] = obj;
    1e5a:	50 e0       	ldi	r21, 0x00	; 0
    1e5c:	44 0f       	add	r20, r20
    1e5e:	55 1f       	adc	r21, r21
    1e60:	fa 01       	movw	r30, r20
    1e62:	ea 56       	subi	r30, 0x6A	; 106
    1e64:	fe 4f       	sbci	r31, 0xFE	; 254
    1e66:	91 83       	std	Z+1, r25	; 0x01
    1e68:	80 83       	st	Z, r24
        mtable[i] = m;
    1e6a:	fa 01       	movw	r30, r20
    1e6c:	e2 5d       	subi	r30, 0xD2	; 210
    1e6e:	fd 4f       	sbci	r31, 0xFD	; 253
    1e70:	71 83       	std	Z+1, r23	; 0x01
    1e72:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1e74:	41 e0       	ldi	r20, 0x01	; 1
    1e76:	50 e0       	ldi	r21, 0x00	; 0
    1e78:	fc 01       	movw	r30, r24
    1e7a:	53 83       	std	Z+3, r21	; 0x03
    1e7c:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1e7e:	22 23       	and	r18, r18
    1e80:	0c f4       	brge	.+2      	; 0x1e84 <install+0x32>
    1e82:	78 94       	sei
    1e84:	08 95       	ret

00001e86 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1e86:	8c 01       	movw	r16, r24
    1e88:	7b 01       	movw	r14, r22
    1e8a:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1e8c:	8f b7       	in	r24, 0x3f	; 63
    1e8e:	f8 94       	cli
    initialize();
    1e90:	0e 94 1b 03 	call	0x636	; 0x636 <initialize>
    ENABLE(1);
    1e94:	78 94       	sei
    if (m != NULL)
    1e96:	e1 14       	cp	r14, r1
    1e98:	f1 04       	cpc	r15, r1
    1e9a:	41 f0       	breq	.+16     	; 0x1eac <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1e9c:	20 e0       	ldi	r18, 0x00	; 0
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	a9 01       	movw	r20, r18
    1ea2:	60 e0       	ldi	r22, 0x00	; 0
    1ea4:	70 e0       	ldi	r23, 0x00	; 0
    1ea6:	cb 01       	movw	r24, r22
    1ea8:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <async>
    DISABLE(status);
    1eac:	8f b7       	in	r24, 0x3f	; 63
    1eae:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1eb0:	0e 94 a6 03 	call	0x74c	; 0x74c <schedule>
    ENABLE(1);
    1eb4:	78 94       	sei
    while (1) {
        SLEEP();
    1eb6:	81 e0       	ldi	r24, 0x01	; 1
    1eb8:	83 bf       	out	0x33, r24	; 51
    1eba:	88 95       	sleep
    1ebc:	fd cf       	rjmp	.-6      	; 0x1eb8 <tinytimber+0x32>

00001ebe <__divmodsi4>:
    1ebe:	05 2e       	mov	r0, r21
    1ec0:	97 fb       	bst	r25, 7
    1ec2:	1e f4       	brtc	.+6      	; 0x1eca <__divmodsi4+0xc>
    1ec4:	00 94       	com	r0
    1ec6:	0e 94 76 0f 	call	0x1eec	; 0x1eec <__negsi2>
    1eca:	57 fd       	sbrc	r21, 7
    1ecc:	07 d0       	rcall	.+14     	; 0x1edc <__divmodsi4_neg2>
    1ece:	0e 94 84 0f 	call	0x1f08	; 0x1f08 <__udivmodsi4>
    1ed2:	07 fc       	sbrc	r0, 7
    1ed4:	03 d0       	rcall	.+6      	; 0x1edc <__divmodsi4_neg2>
    1ed6:	4e f4       	brtc	.+18     	; 0x1eea <__divmodsi4_exit>
    1ed8:	0c 94 76 0f 	jmp	0x1eec	; 0x1eec <__negsi2>

00001edc <__divmodsi4_neg2>:
    1edc:	50 95       	com	r21
    1ede:	40 95       	com	r20
    1ee0:	30 95       	com	r19
    1ee2:	21 95       	neg	r18
    1ee4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ee6:	4f 4f       	sbci	r20, 0xFF	; 255
    1ee8:	5f 4f       	sbci	r21, 0xFF	; 255

00001eea <__divmodsi4_exit>:
    1eea:	08 95       	ret

00001eec <__negsi2>:
    1eec:	90 95       	com	r25
    1eee:	80 95       	com	r24
    1ef0:	70 95       	com	r23
    1ef2:	61 95       	neg	r22
    1ef4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ef6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ef8:	9f 4f       	sbci	r25, 0xFF	; 255
    1efa:	08 95       	ret

00001efc <__tablejump2__>:
    1efc:	ee 0f       	add	r30, r30
    1efe:	ff 1f       	adc	r31, r31
    1f00:	05 90       	lpm	r0, Z+
    1f02:	f4 91       	lpm	r31, Z
    1f04:	e0 2d       	mov	r30, r0
    1f06:	09 94       	ijmp

00001f08 <__udivmodsi4>:
    1f08:	a1 e2       	ldi	r26, 0x21	; 33
    1f0a:	1a 2e       	mov	r1, r26
    1f0c:	aa 1b       	sub	r26, r26
    1f0e:	bb 1b       	sub	r27, r27
    1f10:	fd 01       	movw	r30, r26
    1f12:	0d c0       	rjmp	.+26     	; 0x1f2e <__udivmodsi4_ep>

00001f14 <__udivmodsi4_loop>:
    1f14:	aa 1f       	adc	r26, r26
    1f16:	bb 1f       	adc	r27, r27
    1f18:	ee 1f       	adc	r30, r30
    1f1a:	ff 1f       	adc	r31, r31
    1f1c:	a2 17       	cp	r26, r18
    1f1e:	b3 07       	cpc	r27, r19
    1f20:	e4 07       	cpc	r30, r20
    1f22:	f5 07       	cpc	r31, r21
    1f24:	20 f0       	brcs	.+8      	; 0x1f2e <__udivmodsi4_ep>
    1f26:	a2 1b       	sub	r26, r18
    1f28:	b3 0b       	sbc	r27, r19
    1f2a:	e4 0b       	sbc	r30, r20
    1f2c:	f5 0b       	sbc	r31, r21

00001f2e <__udivmodsi4_ep>:
    1f2e:	66 1f       	adc	r22, r22
    1f30:	77 1f       	adc	r23, r23
    1f32:	88 1f       	adc	r24, r24
    1f34:	99 1f       	adc	r25, r25
    1f36:	1a 94       	dec	r1
    1f38:	69 f7       	brne	.-38     	; 0x1f14 <__udivmodsi4_loop>
    1f3a:	60 95       	com	r22
    1f3c:	70 95       	com	r23
    1f3e:	80 95       	com	r24
    1f40:	90 95       	com	r25
    1f42:	9b 01       	movw	r18, r22
    1f44:	ac 01       	movw	r20, r24
    1f46:	bd 01       	movw	r22, r26
    1f48:	cf 01       	movw	r24, r30
    1f4a:	08 95       	ret

00001f4c <setjmp>:
    1f4c:	dc 01       	movw	r26, r24
    1f4e:	2d 92       	st	X+, r2
    1f50:	3d 92       	st	X+, r3
    1f52:	4d 92       	st	X+, r4
    1f54:	5d 92       	st	X+, r5
    1f56:	6d 92       	st	X+, r6
    1f58:	7d 92       	st	X+, r7
    1f5a:	8d 92       	st	X+, r8
    1f5c:	9d 92       	st	X+, r9
    1f5e:	ad 92       	st	X+, r10
    1f60:	bd 92       	st	X+, r11
    1f62:	cd 92       	st	X+, r12
    1f64:	dd 92       	st	X+, r13
    1f66:	ed 92       	st	X+, r14
    1f68:	fd 92       	st	X+, r15
    1f6a:	0d 93       	st	X+, r16
    1f6c:	1d 93       	st	X+, r17
    1f6e:	cd 93       	st	X+, r28
    1f70:	dd 93       	st	X+, r29
    1f72:	ff 91       	pop	r31
    1f74:	ef 91       	pop	r30
    1f76:	8d b7       	in	r24, 0x3d	; 61
    1f78:	8d 93       	st	X+, r24
    1f7a:	8e b7       	in	r24, 0x3e	; 62
    1f7c:	8d 93       	st	X+, r24
    1f7e:	8f b7       	in	r24, 0x3f	; 63
    1f80:	8d 93       	st	X+, r24
    1f82:	ed 93       	st	X+, r30
    1f84:	fd 93       	st	X+, r31
    1f86:	88 27       	eor	r24, r24
    1f88:	99 27       	eor	r25, r25
    1f8a:	09 94       	ijmp

00001f8c <longjmp>:
    1f8c:	dc 01       	movw	r26, r24
    1f8e:	cb 01       	movw	r24, r22
    1f90:	81 30       	cpi	r24, 0x01	; 1
    1f92:	91 05       	cpc	r25, r1
    1f94:	81 1d       	adc	r24, r1
    1f96:	2d 90       	ld	r2, X+
    1f98:	3d 90       	ld	r3, X+
    1f9a:	4d 90       	ld	r4, X+
    1f9c:	5d 90       	ld	r5, X+
    1f9e:	6d 90       	ld	r6, X+
    1fa0:	7d 90       	ld	r7, X+
    1fa2:	8d 90       	ld	r8, X+
    1fa4:	9d 90       	ld	r9, X+
    1fa6:	ad 90       	ld	r10, X+
    1fa8:	bd 90       	ld	r11, X+
    1faa:	cd 90       	ld	r12, X+
    1fac:	dd 90       	ld	r13, X+
    1fae:	ed 90       	ld	r14, X+
    1fb0:	fd 90       	ld	r15, X+
    1fb2:	0d 91       	ld	r16, X+
    1fb4:	1d 91       	ld	r17, X+
    1fb6:	cd 91       	ld	r28, X+
    1fb8:	dd 91       	ld	r29, X+
    1fba:	ed 91       	ld	r30, X+
    1fbc:	fd 91       	ld	r31, X+
    1fbe:	0d 90       	ld	r0, X+
    1fc0:	f8 94       	cli
    1fc2:	fe bf       	out	0x3e, r31	; 62
    1fc4:	0f be       	out	0x3f, r0	; 63
    1fc6:	ed bf       	out	0x3d, r30	; 61
    1fc8:	ed 91       	ld	r30, X+
    1fca:	fd 91       	ld	r31, X+
    1fcc:	09 94       	ijmp

00001fce <_exit>:
    1fce:	f8 94       	cli

00001fd0 <__stop_program>:
    1fd0:	ff cf       	rjmp	.-2      	; 0x1fd0 <__stop_program>
