
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00001ff2  00002086  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ff2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  00800184  00800184  0000210a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000210a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000213c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  0000217c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b80  00000000  00000000  000023d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010ef  00000000  00000000  00004f54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015ec  00000000  00000000  00006043  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000be8  00000000  00000000  00007630  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a06  00000000  00000000  00008218  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000028bc  00000000  00000000  00008c1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000b4da  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__vector_1>
       8:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__vector_2>
       c:	0c 94 c9 04 	jmp	0x992	; 0x992 <__vector_3>
      10:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__vector_4>
      14:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 78 0c 	jmp	0x18f0	; 0x18f0 <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__vector_9>
      28:	0c 94 0d 06 	jmp	0xc1a	; 0xc1a <__vector_10>
      2c:	0c 94 79 06 	jmp	0xcf2	; 0xcf2 <__vector_11>
      30:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__vector_12>
      34:	0c 94 51 07 	jmp	0xea2	; 0xea2 <__vector_13>
      38:	0c 94 bd 07 	jmp	0xf7a	; 0xf7a <__vector_14>
      3c:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__vector_15>
      40:	0c 94 95 08 	jmp	0x112a	; 0x112a <__vector_16>
      44:	0c 94 01 09 	jmp	0x1202	; 0x1202 <__vector_17>
      48:	0c 94 6d 09 	jmp	0x12da	; 0x12da <__vector_18>
      4c:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__vector_19>
      50:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__vector_20>
      54:	0c 94 b1 0a 	jmp	0x1562	; 0x1562 <__vector_21>
      58:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__vector_22>
      5c:	8c 00       	.word	0x008c	; ????
      5e:	6e 00       	.word	0x006e	; ????
      60:	71 00       	.word	0x0071	; ????
      62:	74 00       	.word	0x0074	; ????
      64:	77 00       	.word	0x0077	; ????
      66:	7a 00       	.word	0x007a	; ????
      68:	7d 00       	.word	0x007d	; ????
      6a:	80 00       	.word	0x0080	; ????
      6c:	83 00       	.word	0x0083	; ????
      6e:	86 00       	.word	0x0086	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e2 ef       	ldi	r30, 0xF2	; 242
      84:	ff e1       	ldi	r31, 0x1F	; 31
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a4 38       	cpi	r26, 0x84	; 132
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	a4 e8       	ldi	r26, 0x84	; 132
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	af 3d       	cpi	r26, 0xDF	; 223
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <main>
      a6:	0c 94 f7 0f 	jmp	0x1fee	; 0x1fee <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <LCD_init>:
    if(self->activeGen) {
        return &(self->gen2);
    } else {
        return &(self->gen1);
    }
}
      ae:	8f e0       	ldi	r24, 0x0F	; 15
      b0:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__DATA_REGION_ORIGIN__+0x87>
      b4:	87 eb       	ldi	r24, 0xB7	; 183
      b6:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__DATA_REGION_ORIGIN__+0x85>
      ba:	87 e0       	ldi	r24, 0x07	; 7
      bc:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__DATA_REGION_ORIGIN__+0x86>
      c0:	80 ec       	ldi	r24, 0xC0	; 192
      c2:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__DATA_REGION_ORIGIN__+0x84>
      c6:	08 95       	ret

000000c8 <getSegmentForChar>:
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	fc 01       	movw	r30, r24
      cc:	f0 97       	sbiw	r30, 0x30	; 48
      ce:	ea 30       	cpi	r30, 0x0A	; 10
      d0:	f1 05       	cpc	r31, r1
      d2:	f8 f4       	brcc	.+62     	; 0x112 <getSegmentForChar+0x4a>
      d4:	e2 5d       	subi	r30, 0xD2	; 210
      d6:	ff 4f       	sbci	r31, 0xFF	; 255
      d8:	0c 94 8e 0f 	jmp	0x1f1c	; 0x1f1c <__tablejump2__>
      dc:	80 e4       	ldi	r24, 0x40	; 64
      de:	91 e0       	ldi	r25, 0x01	; 1
      e0:	08 95       	ret
      e2:	88 e3       	ldi	r24, 0x38	; 56
      e4:	91 e0       	ldi	r25, 0x01	; 1
      e6:	08 95       	ret
      e8:	80 e3       	ldi	r24, 0x30	; 48
      ea:	91 e0       	ldi	r25, 0x01	; 1
      ec:	08 95       	ret
      ee:	88 e2       	ldi	r24, 0x28	; 40
      f0:	91 e0       	ldi	r25, 0x01	; 1
      f2:	08 95       	ret
      f4:	80 e2       	ldi	r24, 0x20	; 32
      f6:	91 e0       	ldi	r25, 0x01	; 1
      f8:	08 95       	ret
      fa:	88 e1       	ldi	r24, 0x18	; 24
      fc:	91 e0       	ldi	r25, 0x01	; 1
      fe:	08 95       	ret
     100:	80 e1       	ldi	r24, 0x10	; 16
     102:	91 e0       	ldi	r25, 0x01	; 1
     104:	08 95       	ret
     106:	88 e0       	ldi	r24, 0x08	; 8
     108:	91 e0       	ldi	r25, 0x01	; 1
     10a:	08 95       	ret
     10c:	80 e0       	ldi	r24, 0x00	; 0
     10e:	91 e0       	ldi	r25, 0x01	; 1
     110:	08 95       	ret
     112:	84 e8       	ldi	r24, 0x84	; 132
     114:	91 e0       	ldi	r25, 0x01	; 1
     116:	08 95       	ret
     118:	88 e4       	ldi	r24, 0x48	; 72
     11a:	91 e0       	ldi	r25, 0x01	; 1
     11c:	08 95       	ret

0000011e <writeChar>:
     11e:	cf 93       	push	r28
     120:	66 30       	cpi	r22, 0x06	; 6
     122:	08 f0       	brcs	.+2      	; 0x126 <writeChar+0x8>
     124:	e4 c0       	rjmp	.+456    	; 0x2ee <writeChar+0x1d0>
     126:	c6 2f       	mov	r28, r22
     128:	0e 94 64 00 	call	0xc8	; 0xc8 <getSegmentForChar>
     12c:	fc 01       	movw	r30, r24
     12e:	c2 30       	cpi	r28, 0x02	; 2
     130:	09 f4       	brne	.+2      	; 0x134 <writeChar+0x16>
     132:	67 c0       	rjmp	.+206    	; 0x202 <writeChar+0xe4>
     134:	28 f4       	brcc	.+10     	; 0x140 <writeChar+0x22>
     136:	cc 23       	and	r28, r28
     138:	51 f0       	breq	.+20     	; 0x14e <writeChar+0x30>
     13a:	c1 30       	cpi	r28, 0x01	; 1
     13c:	29 f1       	breq	.+74     	; 0x188 <writeChar+0x6a>
     13e:	d7 c0       	rjmp	.+430    	; 0x2ee <writeChar+0x1d0>
     140:	c3 30       	cpi	r28, 0x03	; 3
     142:	09 f4       	brne	.+2      	; 0x146 <writeChar+0x28>
     144:	7b c0       	rjmp	.+246    	; 0x23c <writeChar+0x11e>
     146:	c4 30       	cpi	r28, 0x04	; 4
     148:	09 f4       	brne	.+2      	; 0x14c <writeChar+0x2e>
     14a:	b5 c0       	rjmp	.+362    	; 0x2b6 <writeChar+0x198>
     14c:	d0 c0       	rjmp	.+416    	; 0x2ee <writeChar+0x1d0>
     14e:	ac ee       	ldi	r26, 0xEC	; 236
     150:	b0 e0       	ldi	r27, 0x00	; 0
     152:	8c 91       	ld	r24, X
     154:	80 7f       	andi	r24, 0xF0	; 240
     156:	90 81       	ld	r25, Z
     158:	89 2b       	or	r24, r25
     15a:	8c 93       	st	X, r24
     15c:	a1 ef       	ldi	r26, 0xF1	; 241
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	8c 91       	ld	r24, X
     162:	80 7f       	andi	r24, 0xF0	; 240
     164:	92 81       	ldd	r25, Z+2	; 0x02
     166:	89 2b       	or	r24, r25
     168:	8c 93       	st	X, r24
     16a:	a6 ef       	ldi	r26, 0xF6	; 246
     16c:	b0 e0       	ldi	r27, 0x00	; 0
     16e:	8c 91       	ld	r24, X
     170:	80 7f       	andi	r24, 0xF0	; 240
     172:	94 81       	ldd	r25, Z+4	; 0x04
     174:	89 2b       	or	r24, r25
     176:	8c 93       	st	X, r24
     178:	ab ef       	ldi	r26, 0xFB	; 251
     17a:	b0 e0       	ldi	r27, 0x00	; 0
     17c:	8c 91       	ld	r24, X
     17e:	80 7f       	andi	r24, 0xF0	; 240
     180:	96 81       	ldd	r25, Z+6	; 0x06
     182:	89 2b       	or	r24, r25
     184:	8c 93       	st	X, r24
     186:	b3 c0       	rjmp	.+358    	; 0x2ee <writeChar+0x1d0>
     188:	ac ee       	ldi	r26, 0xEC	; 236
     18a:	b0 e0       	ldi	r27, 0x00	; 0
     18c:	2c 91       	ld	r18, X
     18e:	80 81       	ld	r24, Z
     190:	91 81       	ldd	r25, Z+1	; 0x01
     192:	82 95       	swap	r24
     194:	92 95       	swap	r25
     196:	90 7f       	andi	r25, 0xF0	; 240
     198:	98 27       	eor	r25, r24
     19a:	80 7f       	andi	r24, 0xF0	; 240
     19c:	98 27       	eor	r25, r24
     19e:	92 2f       	mov	r25, r18
     1a0:	9f 70       	andi	r25, 0x0F	; 15
     1a2:	89 2b       	or	r24, r25
     1a4:	8c 93       	st	X, r24
     1a6:	a1 ef       	ldi	r26, 0xF1	; 241
     1a8:	b0 e0       	ldi	r27, 0x00	; 0
     1aa:	2c 91       	ld	r18, X
     1ac:	82 81       	ldd	r24, Z+2	; 0x02
     1ae:	93 81       	ldd	r25, Z+3	; 0x03
     1b0:	82 95       	swap	r24
     1b2:	92 95       	swap	r25
     1b4:	90 7f       	andi	r25, 0xF0	; 240
     1b6:	98 27       	eor	r25, r24
     1b8:	80 7f       	andi	r24, 0xF0	; 240
     1ba:	98 27       	eor	r25, r24
     1bc:	92 2f       	mov	r25, r18
     1be:	9f 70       	andi	r25, 0x0F	; 15
     1c0:	89 2b       	or	r24, r25
     1c2:	8c 93       	st	X, r24
     1c4:	a6 ef       	ldi	r26, 0xF6	; 246
     1c6:	b0 e0       	ldi	r27, 0x00	; 0
     1c8:	2c 91       	ld	r18, X
     1ca:	84 81       	ldd	r24, Z+4	; 0x04
     1cc:	95 81       	ldd	r25, Z+5	; 0x05
     1ce:	82 95       	swap	r24
     1d0:	92 95       	swap	r25
     1d2:	90 7f       	andi	r25, 0xF0	; 240
     1d4:	98 27       	eor	r25, r24
     1d6:	80 7f       	andi	r24, 0xF0	; 240
     1d8:	98 27       	eor	r25, r24
     1da:	92 2f       	mov	r25, r18
     1dc:	9f 70       	andi	r25, 0x0F	; 15
     1de:	89 2b       	or	r24, r25
     1e0:	8c 93       	st	X, r24
     1e2:	ab ef       	ldi	r26, 0xFB	; 251
     1e4:	b0 e0       	ldi	r27, 0x00	; 0
     1e6:	2c 91       	ld	r18, X
     1e8:	86 81       	ldd	r24, Z+6	; 0x06
     1ea:	97 81       	ldd	r25, Z+7	; 0x07
     1ec:	82 95       	swap	r24
     1ee:	92 95       	swap	r25
     1f0:	90 7f       	andi	r25, 0xF0	; 240
     1f2:	98 27       	eor	r25, r24
     1f4:	80 7f       	andi	r24, 0xF0	; 240
     1f6:	98 27       	eor	r25, r24
     1f8:	92 2f       	mov	r25, r18
     1fa:	9f 70       	andi	r25, 0x0F	; 15
     1fc:	89 2b       	or	r24, r25
     1fe:	8c 93       	st	X, r24
     200:	76 c0       	rjmp	.+236    	; 0x2ee <writeChar+0x1d0>
     202:	ad ee       	ldi	r26, 0xED	; 237
     204:	b0 e0       	ldi	r27, 0x00	; 0
     206:	8c 91       	ld	r24, X
     208:	80 7f       	andi	r24, 0xF0	; 240
     20a:	90 81       	ld	r25, Z
     20c:	89 2b       	or	r24, r25
     20e:	8c 93       	st	X, r24
     210:	a2 ef       	ldi	r26, 0xF2	; 242
     212:	b0 e0       	ldi	r27, 0x00	; 0
     214:	8c 91       	ld	r24, X
     216:	80 7f       	andi	r24, 0xF0	; 240
     218:	92 81       	ldd	r25, Z+2	; 0x02
     21a:	89 2b       	or	r24, r25
     21c:	8c 93       	st	X, r24
     21e:	a7 ef       	ldi	r26, 0xF7	; 247
     220:	b0 e0       	ldi	r27, 0x00	; 0
     222:	8c 91       	ld	r24, X
     224:	80 7f       	andi	r24, 0xF0	; 240
     226:	94 81       	ldd	r25, Z+4	; 0x04
     228:	89 2b       	or	r24, r25
     22a:	8c 93       	st	X, r24
     22c:	ac ef       	ldi	r26, 0xFC	; 252
     22e:	b0 e0       	ldi	r27, 0x00	; 0
     230:	8c 91       	ld	r24, X
     232:	80 7f       	andi	r24, 0xF0	; 240
     234:	96 81       	ldd	r25, Z+6	; 0x06
     236:	89 2b       	or	r24, r25
     238:	8c 93       	st	X, r24
     23a:	59 c0       	rjmp	.+178    	; 0x2ee <writeChar+0x1d0>
     23c:	ad ee       	ldi	r26, 0xED	; 237
     23e:	b0 e0       	ldi	r27, 0x00	; 0
     240:	2c 91       	ld	r18, X
     242:	80 81       	ld	r24, Z
     244:	91 81       	ldd	r25, Z+1	; 0x01
     246:	82 95       	swap	r24
     248:	92 95       	swap	r25
     24a:	90 7f       	andi	r25, 0xF0	; 240
     24c:	98 27       	eor	r25, r24
     24e:	80 7f       	andi	r24, 0xF0	; 240
     250:	98 27       	eor	r25, r24
     252:	92 2f       	mov	r25, r18
     254:	9f 70       	andi	r25, 0x0F	; 15
     256:	89 2b       	or	r24, r25
     258:	8c 93       	st	X, r24
     25a:	a2 ef       	ldi	r26, 0xF2	; 242
     25c:	b0 e0       	ldi	r27, 0x00	; 0
     25e:	2c 91       	ld	r18, X
     260:	82 81       	ldd	r24, Z+2	; 0x02
     262:	93 81       	ldd	r25, Z+3	; 0x03
     264:	82 95       	swap	r24
     266:	92 95       	swap	r25
     268:	90 7f       	andi	r25, 0xF0	; 240
     26a:	98 27       	eor	r25, r24
     26c:	80 7f       	andi	r24, 0xF0	; 240
     26e:	98 27       	eor	r25, r24
     270:	92 2f       	mov	r25, r18
     272:	9f 70       	andi	r25, 0x0F	; 15
     274:	89 2b       	or	r24, r25
     276:	8c 93       	st	X, r24
     278:	a7 ef       	ldi	r26, 0xF7	; 247
     27a:	b0 e0       	ldi	r27, 0x00	; 0
     27c:	2c 91       	ld	r18, X
     27e:	84 81       	ldd	r24, Z+4	; 0x04
     280:	95 81       	ldd	r25, Z+5	; 0x05
     282:	82 95       	swap	r24
     284:	92 95       	swap	r25
     286:	90 7f       	andi	r25, 0xF0	; 240
     288:	98 27       	eor	r25, r24
     28a:	80 7f       	andi	r24, 0xF0	; 240
     28c:	98 27       	eor	r25, r24
     28e:	92 2f       	mov	r25, r18
     290:	9f 70       	andi	r25, 0x0F	; 15
     292:	89 2b       	or	r24, r25
     294:	8c 93       	st	X, r24
     296:	ac ef       	ldi	r26, 0xFC	; 252
     298:	b0 e0       	ldi	r27, 0x00	; 0
     29a:	2c 91       	ld	r18, X
     29c:	86 81       	ldd	r24, Z+6	; 0x06
     29e:	97 81       	ldd	r25, Z+7	; 0x07
     2a0:	82 95       	swap	r24
     2a2:	92 95       	swap	r25
     2a4:	90 7f       	andi	r25, 0xF0	; 240
     2a6:	98 27       	eor	r25, r24
     2a8:	80 7f       	andi	r24, 0xF0	; 240
     2aa:	98 27       	eor	r25, r24
     2ac:	92 2f       	mov	r25, r18
     2ae:	9f 70       	andi	r25, 0x0F	; 15
     2b0:	89 2b       	or	r24, r25
     2b2:	8c 93       	st	X, r24
     2b4:	1c c0       	rjmp	.+56     	; 0x2ee <writeChar+0x1d0>
     2b6:	ae ee       	ldi	r26, 0xEE	; 238
     2b8:	b0 e0       	ldi	r27, 0x00	; 0
     2ba:	8c 91       	ld	r24, X
     2bc:	80 7f       	andi	r24, 0xF0	; 240
     2be:	90 81       	ld	r25, Z
     2c0:	89 2b       	or	r24, r25
     2c2:	8c 93       	st	X, r24
     2c4:	a3 ef       	ldi	r26, 0xF3	; 243
     2c6:	b0 e0       	ldi	r27, 0x00	; 0
     2c8:	8c 91       	ld	r24, X
     2ca:	80 7f       	andi	r24, 0xF0	; 240
     2cc:	92 81       	ldd	r25, Z+2	; 0x02
     2ce:	89 2b       	or	r24, r25
     2d0:	8c 93       	st	X, r24
     2d2:	a8 ef       	ldi	r26, 0xF8	; 248
     2d4:	b0 e0       	ldi	r27, 0x00	; 0
     2d6:	8c 91       	ld	r24, X
     2d8:	80 7f       	andi	r24, 0xF0	; 240
     2da:	94 81       	ldd	r25, Z+4	; 0x04
     2dc:	89 2b       	or	r24, r25
     2de:	8c 93       	st	X, r24
     2e0:	ad ef       	ldi	r26, 0xFD	; 253
     2e2:	b0 e0       	ldi	r27, 0x00	; 0
     2e4:	8c 91       	ld	r24, X
     2e6:	80 7f       	andi	r24, 0xF0	; 240
     2e8:	96 81       	ldd	r25, Z+6	; 0x06
     2ea:	89 2b       	or	r24, r25
     2ec:	8c 93       	st	X, r24
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <printAt>:
     2f2:	8f 92       	push	r8
     2f4:	9f 92       	push	r9
     2f6:	af 92       	push	r10
     2f8:	bf 92       	push	r11
     2fa:	cf 92       	push	r12
     2fc:	df 92       	push	r13
     2fe:	ef 92       	push	r14
     300:	ff 92       	push	r15
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
     306:	4b 01       	movw	r8, r22
     308:	5c 01       	movw	r10, r24
     30a:	ea 01       	movw	r28, r20
     30c:	24 e6       	ldi	r18, 0x64	; 100
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	40 e0       	ldi	r20, 0x00	; 0
     312:	50 e0       	ldi	r21, 0x00	; 0
     314:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <__divmodsi4>
     318:	0f 2e       	mov	r0, r31
     31a:	fa e0       	ldi	r31, 0x0A	; 10
     31c:	cf 2e       	mov	r12, r31
     31e:	d1 2c       	mov	r13, r1
     320:	e1 2c       	mov	r14, r1
     322:	f1 2c       	mov	r15, r1
     324:	f0 2d       	mov	r31, r0
     326:	a7 01       	movw	r20, r14
     328:	96 01       	movw	r18, r12
     32a:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <__divmodsi4>
     32e:	6c 2f       	mov	r22, r28
     330:	80 e3       	ldi	r24, 0x30	; 48
     332:	82 0f       	add	r24, r18
     334:	0e 94 8f 00 	call	0x11e	; 0x11e <writeChar>
     338:	21 96       	adiw	r28, 0x01	; 1
     33a:	c5 01       	movw	r24, r10
     33c:	b4 01       	movw	r22, r8
     33e:	a7 01       	movw	r20, r14
     340:	96 01       	movw	r18, r12
     342:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <__divmodsi4>
     346:	86 2f       	mov	r24, r22
     348:	6c 2f       	mov	r22, r28
     34a:	80 5d       	subi	r24, 0xD0	; 208
     34c:	0e 94 8f 00 	call	0x11e	; 0x11e <writeChar>
     350:	df 91       	pop	r29
     352:	cf 91       	pop	r28
     354:	ff 90       	pop	r15
     356:	ef 90       	pop	r14
     358:	df 90       	pop	r13
     35a:	cf 90       	pop	r12
     35c:	bf 90       	pop	r11
     35e:	af 90       	pop	r10
     360:	9f 90       	pop	r9
     362:	8f 90       	pop	r8
     364:	08 95       	ret

00000366 <updateOneOrTwo>:
     366:	ec ee       	ldi	r30, 0xEC	; 236
     368:	f0 e0       	ldi	r31, 0x00	; 0
     36a:	20 81       	ld	r18, Z
     36c:	2b 7b       	andi	r18, 0xBB	; 187
     36e:	20 83       	st	Z, r18
     370:	fc 01       	movw	r30, r24
     372:	80 85       	ldd	r24, Z+8	; 0x08
     374:	91 85       	ldd	r25, Z+9	; 0x09
     376:	89 2b       	or	r24, r25
     378:	31 f0       	breq	.+12     	; 0x386 <updateOneOrTwo+0x20>
     37a:	ec ee       	ldi	r30, 0xEC	; 236
     37c:	f0 e0       	ldi	r31, 0x00	; 0
     37e:	80 81       	ld	r24, Z
     380:	80 64       	ori	r24, 0x40	; 64
     382:	80 83       	st	Z, r24
     384:	08 95       	ret
     386:	ec ee       	ldi	r30, 0xEC	; 236
     388:	f0 e0       	ldi	r31, 0x00	; 0
     38a:	80 81       	ld	r24, Z
     38c:	84 60       	ori	r24, 0x04	; 4
     38e:	80 83       	st	Z, r24
     390:	08 95       	ret

00000392 <updateDisplay>:
     392:	0f 93       	push	r16
     394:	1f 93       	push	r17
     396:	cf 93       	push	r28
     398:	df 93       	push	r29
     39a:	ec 01       	movw	r28, r24
     39c:	0e 94 b3 01 	call	0x366	; 0x366 <updateOneOrTwo>
     3a0:	8c 81       	ldd	r24, Y+4	; 0x04
     3a2:	9d 81       	ldd	r25, Y+5	; 0x05
     3a4:	0e 94 27 03 	call	0x64e	; 0x64e <getFrequency>
     3a8:	40 e0       	ldi	r20, 0x00	; 0
     3aa:	50 e0       	ldi	r21, 0x00	; 0
     3ac:	bc 01       	movw	r22, r24
     3ae:	8c 81       	ldd	r24, Y+4	; 0x04
     3b0:	9d 81       	ldd	r25, Y+5	; 0x05
     3b2:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <sync>
     3b6:	8c 01       	movw	r16, r24
     3b8:	8e 81       	ldd	r24, Y+6	; 0x06
     3ba:	9f 81       	ldd	r25, Y+7	; 0x07
     3bc:	0e 94 27 03 	call	0x64e	; 0x64e <getFrequency>
     3c0:	40 e0       	ldi	r20, 0x00	; 0
     3c2:	50 e0       	ldi	r21, 0x00	; 0
     3c4:	bc 01       	movw	r22, r24
     3c6:	8e 81       	ldd	r24, Y+6	; 0x06
     3c8:	9f 81       	ldd	r25, Y+7	; 0x07
     3ca:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <sync>
     3ce:	ec 01       	movw	r28, r24
     3d0:	b8 01       	movw	r22, r16
     3d2:	11 0f       	add	r17, r17
     3d4:	88 0b       	sbc	r24, r24
     3d6:	99 0b       	sbc	r25, r25
     3d8:	40 e0       	ldi	r20, 0x00	; 0
     3da:	50 e0       	ldi	r21, 0x00	; 0
     3dc:	0e 94 79 01 	call	0x2f2	; 0x2f2 <printAt>
     3e0:	be 01       	movw	r22, r28
     3e2:	dd 0f       	add	r29, r29
     3e4:	88 0b       	sbc	r24, r24
     3e6:	99 0b       	sbc	r25, r25
     3e8:	43 e0       	ldi	r20, 0x03	; 3
     3ea:	50 e0       	ldi	r21, 0x00	; 0
     3ec:	0e 94 79 01 	call	0x2f2	; 0x2f2 <printAt>
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	1f 91       	pop	r17
     3f6:	0f 91       	pop	r16
     3f8:	08 95       	ret

000003fa <adjustFrequency>:

void adjustFrequency(GUI *self, int delta) {
     3fa:	cf 92       	push	r12
     3fc:	df 92       	push	r13
     3fe:	ef 92       	push	r14
     400:	ff 92       	push	r15
     402:	0f 93       	push	r16
     404:	1f 93       	push	r17
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	8c 01       	movw	r16, r24
     40c:	eb 01       	movw	r28, r22
	}
}

PulseGen* getCurrentGen(GUI *self) {
    //activeGen = 1 => gen2
    if(self->activeGen) {
     40e:	fc 01       	movw	r30, r24
     410:	80 85       	ldd	r24, Z+8	; 0x08
     412:	91 85       	ldd	r25, Z+9	; 0x09
     414:	89 2b       	or	r24, r25
     416:	29 f0       	breq	.+10     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
        return &(self->gen2);
     418:	78 01       	movw	r14, r16
     41a:	f6 e0       	ldi	r31, 0x06	; 6
     41c:	ef 0e       	add	r14, r31
     41e:	f1 1c       	adc	r15, r1
     420:	04 c0       	rjmp	.+8      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
    } else {
        return &(self->gen1);
     422:	78 01       	movw	r14, r16
     424:	84 e0       	ldi	r24, 0x04	; 4
     426:	e8 0e       	add	r14, r24
     428:	f1 1c       	adc	r15, r1
}

void adjustFrequency(GUI *self, int delta) {
	// Get right target gen
	PulseGen *target = getCurrentGen(self);
	int newFreq = SYNC(target, getFrequency, 0) + delta;
     42a:	40 e0       	ldi	r20, 0x00	; 0
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	67 e2       	ldi	r22, 0x27	; 39
     430:	73 e0       	ldi	r23, 0x03	; 3
     432:	c7 01       	movw	r24, r14
     434:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <sync>
     438:	ac 01       	movw	r20, r24
     43a:	4c 0f       	add	r20, r28
     43c:	5d 1f       	adc	r21, r29
	if (newFreq < 0) newFreq = 0;
	// Update everything
	SYNC(target, setFrequency, newFreq);
     43e:	55 23       	and	r21, r21
     440:	14 f4       	brge	.+4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     442:	40 e0       	ldi	r20, 0x00	; 0
     444:	50 e0       	ldi	r21, 0x00	; 0
     446:	67 e1       	ldi	r22, 0x17	; 23
     448:	73 e0       	ldi	r23, 0x03	; 3
     44a:	c7 01       	movw	r24, r14
     44c:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <sync>
	ASYNC(self, updateDisplay, 0);
     450:	c1 2c       	mov	r12, r1
     452:	d1 2c       	mov	r13, r1
     454:	0f 2e       	mov	r0, r31
     456:	f9 ec       	ldi	r31, 0xC9	; 201
     458:	ef 2e       	mov	r14, r31
     45a:	f1 e0       	ldi	r31, 0x01	; 1
     45c:	ff 2e       	mov	r15, r31
     45e:	f0 2d       	mov	r31, r0
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	a9 01       	movw	r20, r18
     466:	60 e0       	ldi	r22, 0x00	; 0
     468:	70 e0       	ldi	r23, 0x00	; 0
     46a:	cb 01       	movw	r24, r22
     46c:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <async>
}
     470:	df 91       	pop	r29
     472:	cf 91       	pop	r28
     474:	1f 91       	pop	r17
     476:	0f 91       	pop	r16
     478:	ff 90       	pop	r15
     47a:	ef 90       	pop	r14
     47c:	df 90       	pop	r13
     47e:	cf 90       	pop	r12
     480:	08 95       	ret

00000482 <switchFocus>:

void switchFocus(GUI *self, int newActive) {
     482:	cf 92       	push	r12
     484:	df 92       	push	r13
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
	self->activeGen = newActive;
     48e:	fc 01       	movw	r30, r24
     490:	71 87       	std	Z+9, r23	; 0x09
     492:	60 87       	std	Z+8, r22	; 0x08
	PulseGen *target = getCurrentGen(self);
	//SYNC(target, toggle, 0)
	ASYNC(self, updateDisplay, 0);
     494:	c1 2c       	mov	r12, r1
     496:	d1 2c       	mov	r13, r1
     498:	0f 2e       	mov	r0, r31
     49a:	f9 ec       	ldi	r31, 0xC9	; 201
     49c:	ef 2e       	mov	r14, r31
     49e:	f1 e0       	ldi	r31, 0x01	; 1
     4a0:	ff 2e       	mov	r15, r31
     4a2:	f0 2d       	mov	r31, r0
     4a4:	8c 01       	movw	r16, r24
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	a9 01       	movw	r20, r18
     4ac:	60 e0       	ldi	r22, 0x00	; 0
     4ae:	70 e0       	ldi	r23, 0x00	; 0
     4b0:	cb 01       	movw	r24, r22
     4b2:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <async>
}
     4b6:	1f 91       	pop	r17
     4b8:	0f 91       	pop	r16
     4ba:	ff 90       	pop	r15
     4bc:	ef 90       	pop	r14
     4be:	df 90       	pop	r13
     4c0:	cf 90       	pop	r12
     4c2:	08 95       	ret

000004c4 <saveRestore>:

void saveRestore(GUI *self) {
     4c4:	cf 92       	push	r12
     4c6:	df 92       	push	r13
     4c8:	ef 92       	push	r14
     4ca:	ff 92       	push	r15
     4cc:	0f 93       	push	r16
     4ce:	1f 93       	push	r17
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	8c 01       	movw	r16, r24
	}
}

PulseGen* getCurrentGen(GUI *self) {
    //activeGen = 1 => gen2
    if(self->activeGen) {
     4d6:	fc 01       	movw	r30, r24
     4d8:	80 85       	ldd	r24, Z+8	; 0x08
     4da:	91 85       	ldd	r25, Z+9	; 0x09
     4dc:	89 2b       	or	r24, r25
     4de:	19 f0       	breq	.+6      	; 0x4e6 <saveRestore+0x22>
        return &(self->gen2);
     4e0:	e8 01       	movw	r28, r16
     4e2:	26 96       	adiw	r28, 0x06	; 6
     4e4:	02 c0       	rjmp	.+4      	; 0x4ea <saveRestore+0x26>
    } else {
        return &(self->gen1);
     4e6:	e8 01       	movw	r28, r16
     4e8:	24 96       	adiw	r28, 0x04	; 4
	ASYNC(self, updateDisplay, 0);
}

void saveRestore(GUI *self) {
	PulseGen *target = getCurrentGen(self);
	if (target->frequency == 0) {
     4ea:	88 85       	ldd	r24, Y+8	; 0x08
     4ec:	99 85       	ldd	r25, Y+9	; 0x09
     4ee:	89 2b       	or	r24, r25
     4f0:	41 f4       	brne	.+16     	; 0x502 <__stack+0x3>
		SYNC(target, restore, 0);
     4f2:	40 e0       	ldi	r20, 0x00	; 0
     4f4:	50 e0       	ldi	r21, 0x00	; 0
     4f6:	61 e2       	ldi	r22, 0x21	; 33
     4f8:	73 e0       	ldi	r23, 0x03	; 3
     4fa:	ce 01       	movw	r24, r28
     4fc:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <sync>
     500:	0e c0       	rjmp	.+28     	; 0x51e <__stack+0x1f>
		} else {
		SYNC(target, save, 0);
     502:	40 e0       	ldi	r20, 0x00	; 0
     504:	50 e0       	ldi	r21, 0x00	; 0
     506:	6b e1       	ldi	r22, 0x1B	; 27
     508:	73 e0       	ldi	r23, 0x03	; 3
     50a:	ce 01       	movw	r24, r28
     50c:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <sync>
		SYNC(target, setFrequency, 0);
     510:	40 e0       	ldi	r20, 0x00	; 0
     512:	50 e0       	ldi	r21, 0x00	; 0
     514:	67 e1       	ldi	r22, 0x17	; 23
     516:	73 e0       	ldi	r23, 0x03	; 3
     518:	ce 01       	movw	r24, r28
     51a:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <sync>
	}
	ASYNC(self, updateDisplay, 0);
     51e:	c1 2c       	mov	r12, r1
     520:	d1 2c       	mov	r13, r1
     522:	0f 2e       	mov	r0, r31
     524:	f9 ec       	ldi	r31, 0xC9	; 201
     526:	ef 2e       	mov	r14, r31
     528:	f1 e0       	ldi	r31, 0x01	; 1
     52a:	ff 2e       	mov	r15, r31
     52c:	f0 2d       	mov	r31, r0
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	a9 01       	movw	r20, r18
     534:	60 e0       	ldi	r22, 0x00	; 0
     536:	70 e0       	ldi	r23, 0x00	; 0
     538:	cb 01       	movw	r24, r22
     53a:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <async>
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	1f 91       	pop	r17
     544:	0f 91       	pop	r16
     546:	ff 90       	pop	r15
     548:	ef 90       	pop	r14
     54a:	df 90       	pop	r13
     54c:	cf 90       	pop	r12
     54e:	08 95       	ret

00000550 <joystickInit>:
#include "PulseGen.h"


void joystickInit() {
    //sätter på upp, ner och inåt som input
    PORTB = PORTB | 0b11010000;
     550:	85 b1       	in	r24, 0x05	; 5
     552:	80 6d       	ori	r24, 0xD0	; 208
     554:	85 b9       	out	0x05, r24	; 5
    //sätter på höger och vänster  som input
    PORTE = PORTE | 0b00001100;
     556:	8e b1       	in	r24, 0x0e	; 14
     558:	8c 60       	ori	r24, 0x0C	; 12
     55a:	8e b9       	out	0x0e, r24	; 14
    //DDRE = 0b01010000;
    //sätter på upp,ner,in (15) hög,ven (14) //sida 53 AVr..169 nånitng
    EIMSK = EIMSK | (1<<PCINT15) | (1<<PCINT14);
     55c:	8d b3       	in	r24, 0x1d	; 29
     55e:	80 6c       	ori	r24, 0xC0	; 192
     560:	8d bb       	out	0x1d, r24	; 29

    //sätter på upp, ner och inåt på joystick (som interrupt)
    PCMSK1 = PCMSK1 | (1<<PCINT15) | (1<<PCINT14) | (1<<PCINT12);
     562:	ec e6       	ldi	r30, 0x6C	; 108
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	80 81       	ld	r24, Z
     568:	80 6d       	ori	r24, 0xD0	; 208
     56a:	80 83       	st	Z, r24
    //sätter på höger och vänster på joystick (som interrupt)
    PCMSK0 = PCMSK0 | (1<<PCINT3) | (1<<PCINT2);
     56c:	eb e6       	ldi	r30, 0x6B	; 107
     56e:	f0 e0       	ldi	r31, 0x00	; 0
     570:	80 81       	ld	r24, Z
     572:	8c 60       	ori	r24, 0x0C	; 12
     574:	80 83       	st	Z, r24
     576:	08 95       	ret

00000578 <interruptPinB>:
}


// Joystick input handler
void interruptPinB(JoystickHandler *self) { 
     578:	cf 93       	push	r28
     57a:	df 93       	push	r29
     57c:	ec 01       	movw	r28, r24
    if((PINB & 0b10000000) >> 7 == 0){ //down press on joystick
     57e:	1f 99       	sbic	0x03, 7	; 3
     580:	06 c0       	rjmp	.+12     	; 0x58e <interruptPinB+0x16>
        adjustFrequency(self->gui, -1);
     582:	6f ef       	ldi	r22, 0xFF	; 255
     584:	7f ef       	ldi	r23, 0xFF	; 255
     586:	8c 81       	ldd	r24, Y+4	; 0x04
     588:	9d 81       	ldd	r25, Y+5	; 0x05
     58a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <adjustFrequency>
    }

    if((PINB & 0b01000000) >> 6 == 0){ //up press on joystick
     58e:	1e 99       	sbic	0x03, 6	; 3
     590:	06 c0       	rjmp	.+12     	; 0x59e <interruptPinB+0x26>
        adjustFrequency(self->gui, 1);
     592:	61 e0       	ldi	r22, 0x01	; 1
     594:	70 e0       	ldi	r23, 0x00	; 0
     596:	8c 81       	ldd	r24, Y+4	; 0x04
     598:	9d 81       	ldd	r25, Y+5	; 0x05
     59a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <adjustFrequency>
    }

    if((PINB & 0b00010000) >> 4 == 0){ //middle press
     59e:	1c 99       	sbic	0x03, 4	; 3
     5a0:	04 c0       	rjmp	.+8      	; 0x5aa <interruptPinB+0x32>
        saveRestore(self->gui);
     5a2:	8c 81       	ldd	r24, Y+4	; 0x04
     5a4:	9d 81       	ldd	r25, Y+5	; 0x05
     5a6:	0e 94 62 02 	call	0x4c4	; 0x4c4 <saveRestore>
    }
}
     5aa:	df 91       	pop	r29
     5ac:	cf 91       	pop	r28
     5ae:	08 95       	ret

000005b0 <interruptPinE>:

void interruptPinE(JoystickHandler *self) {  
     5b0:	cf 93       	push	r28
     5b2:	df 93       	push	r29
     5b4:	ec 01       	movw	r28, r24
    if((PINE & 0b00000100) >> 2 == 0){ //left press
     5b6:	62 99       	sbic	0x0c, 2	; 12
     5b8:	06 c0       	rjmp	.+12     	; 0x5c6 <interruptPinE+0x16>
       switchFocus(self->gui, 0);
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	8c 81       	ldd	r24, Y+4	; 0x04
     5c0:	9d 81       	ldd	r25, Y+5	; 0x05
     5c2:	0e 94 41 02 	call	0x482	; 0x482 <switchFocus>
    }

    if((PINE & 0b00001000) >> 3 == 0){  //right press
     5c6:	63 99       	sbic	0x0c, 3	; 12
     5c8:	06 c0       	rjmp	.+12     	; 0x5d6 <interruptPinE+0x26>
       switchFocus(self->gui, 1);
     5ca:	61 e0       	ldi	r22, 0x01	; 1
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	8c 81       	ldd	r24, Y+4	; 0x04
     5d0:	9d 81       	ldd	r25, Y+5	; 0x05
     5d2:	0e 94 41 02 	call	0x482	; 0x482 <switchFocus>
    }
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	08 95       	ret

000005dc <sysInit>:
GUI gui = initGUI(&gen1, &gen2);
JoystickHandler joystick = initJoystickHandler(&gui);

void sysInit(){
    // Clock Prescale Register "maximum speed"
	CLKPR = 0b10000000; // Clock Prescaler Change Enable
     5dc:	e1 e6       	ldi	r30, 0x61	; 97
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	80 e8       	ldi	r24, 0x80	; 128
     5e2:	80 83       	st	Z, r24
	CLKPR = 0b00000000; // Set 0 for sysclock
     5e4:	10 82       	st	Z, r1
     5e6:	08 95       	ret

000005e8 <pinOutputInit>:
}

void pinOutputInit(){
    // Initialize Port E as output for PE4 and PE6
	DDRE |= (1 << PE4) | (1 << PE6);
     5e8:	8d b1       	in	r24, 0x0d	; 13
     5ea:	80 65       	ori	r24, 0x50	; 80
     5ec:	8d b9       	out	0x0d, r24	; 13
     5ee:	08 95       	ret

000005f0 <main>:
}


int main() {
    sysInit();
     5f0:	0e 94 ee 02 	call	0x5dc	; 0x5dc <sysInit>
    pinOutputInit();
     5f4:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <pinOutputInit>
    joystickInit();
     5f8:	0e 94 a8 02 	call	0x550	; 0x550 <joystickInit>
    LCD_init();
     5fc:	0e 94 57 00 	call	0xae	; 0xae <LCD_init>
	//LCDDR0 = 0b01000100;
	//LCDDR0 = 0b01000100;
	
    // Instal interupt handler
    //when the joystick's vertical state changes
    INSTALL(&joystick, interruptPinB, IRQ_PCINT1);
     600:	42 e0       	ldi	r20, 0x02	; 2
     602:	6c eb       	ldi	r22, 0xBC	; 188
     604:	72 e0       	ldi	r23, 0x02	; 2
     606:	80 e5       	ldi	r24, 0x50	; 80
     608:	91 e0       	ldi	r25, 0x01	; 1
     60a:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <install>
    //when the joystick's horizontal (minus middle) state changes
    INSTALL(&joystick, interruptPinE, IRQ_PCINT0);
     60e:	41 e0       	ldi	r20, 0x01	; 1
     610:	68 ed       	ldi	r22, 0xD8	; 216
     612:	72 e0       	ldi	r23, 0x02	; 2
     614:	80 e5       	ldi	r24, 0x50	; 80
     616:	91 e0       	ldi	r25, 0x01	; 1
     618:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <install>
    
    // Start kernel
    return TINYTIMBER(&gui, NULL, NULL);
     61c:	40 e0       	ldi	r20, 0x00	; 0
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	60 e0       	ldi	r22, 0x00	; 0
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	86 e5       	ldi	r24, 0x56	; 86
     626:	91 e0       	ldi	r25, 0x01	; 1
     628:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <tinytimber>
}
     62c:	08 95       	ret

0000062e <setFrequency>:
#include "PortWrite.h"
#include "TinyTimber.h"


void setFrequency(PulseGen *self, int freq) {
	self->frequency = freq;
     62e:	fc 01       	movw	r30, r24
     630:	71 87       	std	Z+9, r23	; 0x09
     632:	60 87       	std	Z+8, r22	; 0x08
     634:	08 95       	ret

00000636 <save>:
    }
}

// Saves the freq
void save(PulseGen *self) {
	self->saved_freq = self->frequency;
     636:	fc 01       	movw	r30, r24
     638:	20 85       	ldd	r18, Z+8	; 0x08
     63a:	31 85       	ldd	r19, Z+9	; 0x09
     63c:	33 87       	std	Z+11, r19	; 0x0b
     63e:	22 87       	std	Z+10, r18	; 0x0a
     640:	08 95       	ret

00000642 <restore>:
}

// Restores freq to last saved
void restore(PulseGen *self) {
	self->frequency = self->saved_freq;
     642:	fc 01       	movw	r30, r24
     644:	22 85       	ldd	r18, Z+10	; 0x0a
     646:	33 85       	ldd	r19, Z+11	; 0x0b
     648:	31 87       	std	Z+9, r19	; 0x09
     64a:	20 87       	std	Z+8, r18	; 0x08
     64c:	08 95       	ret

0000064e <getFrequency>:
}

int getFrequency(PulseGen *self) {
	return self->frequency;
}
     64e:	fc 01       	movw	r30, r24
     650:	80 85       	ldd	r24, Z+8	; 0x08
     652:	91 85       	ldd	r25, Z+9	; 0x09
     654:	08 95       	ret

00000656 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	00 d0       	rcall	.+0      	; 0x65c <initialize+0x6>
     65c:	00 d0       	rcall	.+0      	; 0x65e <initialize+0x8>
     65e:	cd b7       	in	r28, 0x3d	; 61
     660:	de b7       	in	r29, 0x3e	; 62
     662:	8f e7       	ldi	r24, 0x7F	; 127
     664:	92 e0       	ldi	r25, 0x02	; 2
     666:	2f e5       	ldi	r18, 0x5F	; 95
     668:	33 e0       	ldi	r19, 0x03	; 3
     66a:	fc 01       	movw	r30, r24
     66c:	70 97       	sbiw	r30, 0x10	; 16
     66e:	91 83       	std	Z+1, r25	; 0x01
     670:	80 83       	st	Z, r24
     672:	40 96       	adiw	r24, 0x10	; 16
     674:	82 17       	cp	r24, r18
     676:	93 07       	cpc	r25, r19
     678:	c1 f7       	brne	.-16     	; 0x66a <initialize+0x14>
     67a:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <messages+0xe1>
     67e:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <messages+0xe0>
     682:	ea eb       	ldi	r30, 0xBA	; 186
     684:	f1 e0       	ldi	r31, 0x01	; 1
     686:	87 ed       	ldi	r24, 0xD7	; 215
     688:	91 e0       	ldi	r25, 0x01	; 1
     68a:	91 83       	std	Z+1, r25	; 0x01
     68c:	80 83       	st	Z, r24
     68e:	84 ef       	ldi	r24, 0xF4	; 244
     690:	91 e0       	ldi	r25, 0x01	; 1
     692:	96 8f       	std	Z+30, r25	; 0x1e
     694:	85 8f       	std	Z+29, r24	; 0x1d
     696:	a1 e1       	ldi	r26, 0x11	; 17
     698:	b2 e0       	ldi	r27, 0x02	; 2
     69a:	b3 af       	std	Z+59, r27	; 0x3b
     69c:	a2 af       	std	Z+58, r26	; 0x3a
     69e:	1d 92       	st	X+, r1
     6a0:	1c 92       	st	X, r1
     6a2:	fa 83       	std	Y+2, r31	; 0x02
     6a4:	e9 83       	std	Y+1, r30	; 0x01
     6a6:	eb eb       	ldi	r30, 0xBB	; 187
     6a8:	f3 e0       	ldi	r31, 0x03	; 3
     6aa:	fc 83       	std	Y+4, r31	; 0x04
     6ac:	eb 83       	std	Y+3, r30	; 0x03
     6ae:	89 81       	ldd	r24, Y+1	; 0x01
     6b0:	9a 81       	ldd	r25, Y+2	; 0x02
     6b2:	06 96       	adiw	r24, 0x06	; 6
     6b4:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <setjmp>
     6b8:	8b 81       	ldd	r24, Y+3	; 0x03
     6ba:	9c 81       	ldd	r25, Y+4	; 0x04
     6bc:	e9 81       	ldd	r30, Y+1	; 0x01
     6be:	fa 81       	ldd	r31, Y+2	; 0x02
     6c0:	97 8b       	std	Z+23, r25	; 0x17
     6c2:	86 8b       	std	Z+22, r24	; 0x16
     6c4:	91 8f       	std	Z+25, r25	; 0x19
     6c6:	80 8f       	std	Z+24, r24	; 0x18
     6c8:	8b ec       	ldi	r24, 0xCB	; 203
     6ca:	9e e0       	ldi	r25, 0x0E	; 14
     6cc:	94 8f       	std	Z+28, r25	; 0x1c
     6ce:	83 8f       	std	Z+27, r24	; 0x1b
     6d0:	15 82       	std	Z+5, r1	; 0x05
     6d2:	14 82       	std	Z+4, r1	; 0x04
     6d4:	7d 96       	adiw	r30, 0x1d	; 29
     6d6:	fa 83       	std	Y+2, r31	; 0x02
     6d8:	e9 83       	std	Y+1, r30	; 0x01
     6da:	eb 81       	ldd	r30, Y+3	; 0x03
     6dc:	fc 81       	ldd	r31, Y+4	; 0x04
     6de:	e0 5a       	subi	r30, 0xA0	; 160
     6e0:	ff 4f       	sbci	r31, 0xFF	; 255
     6e2:	fc 83       	std	Y+4, r31	; 0x04
     6e4:	eb 83       	std	Y+3, r30	; 0x03
     6e6:	89 81       	ldd	r24, Y+1	; 0x01
     6e8:	9a 81       	ldd	r25, Y+2	; 0x02
     6ea:	8e 52       	subi	r24, 0x2E	; 46
     6ec:	92 40       	sbci	r25, 0x02	; 2
     6ee:	f9 f6       	brne	.-66     	; 0x6ae <initialize+0x58>
     6f0:	e2 e5       	ldi	r30, 0x52	; 82
     6f2:	f2 e0       	ldi	r31, 0x02	; 2
     6f4:	11 82       	std	Z+1, r1	; 0x01
     6f6:	10 82       	st	Z, r1
     6f8:	15 82       	std	Z+5, r1	; 0x05
     6fa:	14 82       	std	Z+4, r1	; 0x04
     6fc:	13 82       	std	Z+3, r1	; 0x03
     6fe:	12 82       	std	Z+2, r1	; 0x02
     700:	e1 e6       	ldi	r30, 0x61	; 97
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	80 e8       	ldi	r24, 0x80	; 128
     706:	80 83       	st	Z, r24
     708:	10 82       	st	Z, r1
     70a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     70e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     712:	84 e0       	ldi	r24, 0x04	; 4
     714:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     718:	81 e0       	ldi	r24, 0x01	; 1
     71a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
     71e:	0f 90       	pop	r0
     720:	0f 90       	pop	r0
     722:	0f 90       	pop	r0
     724:	0f 90       	pop	r0
     726:	df 91       	pop	r29
     728:	cf 91       	pop	r28
     72a:	08 95       	ret

0000072c <dispatch>:
     72c:	cf 93       	push	r28
     72e:	df 93       	push	r29
     730:	00 d0       	rcall	.+0      	; 0x732 <dispatch+0x6>
     732:	cd b7       	in	r28, 0x3d	; 61
     734:	de b7       	in	r29, 0x3e	; 62
     736:	9a 83       	std	Y+2, r25	; 0x02
     738:	89 83       	std	Y+1, r24	; 0x01
     73a:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current>
     73e:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current+0x1>
     742:	06 96       	adiw	r24, 0x06	; 6
     744:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <setjmp>
     748:	89 2b       	or	r24, r25
     74a:	59 f4       	brne	.+22     	; 0x762 <dispatch+0x36>
     74c:	89 81       	ldd	r24, Y+1	; 0x01
     74e:	9a 81       	ldd	r25, Y+2	; 0x02
     750:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <current+0x1>
     754:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <current>
     758:	61 e0       	ldi	r22, 0x01	; 1
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	06 96       	adiw	r24, 0x06	; 6
     75e:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <longjmp>
     762:	0f 90       	pop	r0
     764:	0f 90       	pop	r0
     766:	df 91       	pop	r29
     768:	cf 91       	pop	r28
     76a:	08 95       	ret

0000076c <schedule>:
     76c:	0f 93       	push	r16
     76e:	1f 93       	push	r17
     770:	cf 93       	push	r28
     772:	df 93       	push	r29
     774:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <msgQ>
     778:	f0 91 95 01 	lds	r31, 0x0195	; 0x800195 <msgQ+0x1>
     77c:	30 97       	sbiw	r30, 0x00	; 0
     77e:	61 f1       	breq	.+88     	; 0x7d8 <schedule+0x6c>
     780:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
     784:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
     788:	00 97       	sbiw	r24, 0x00	; 0
     78a:	31 f1       	breq	.+76     	; 0x7d8 <schedule+0x6c>
     78c:	c0 91 7e 01 	lds	r28, 0x017E	; 0x80017e <activeStack>
     790:	d0 91 7f 01 	lds	r29, 0x017F	; 0x80017f <activeStack+0x1>
     794:	aa 81       	ldd	r26, Y+2	; 0x02
     796:	bb 81       	ldd	r27, Y+3	; 0x03
     798:	10 97       	sbiw	r26, 0x00	; 0
     79a:	79 f0       	breq	.+30     	; 0x7ba <schedule+0x4e>
     79c:	46 81       	ldd	r20, Z+6	; 0x06
     79e:	57 81       	ldd	r21, Z+7	; 0x07
     7a0:	60 85       	ldd	r22, Z+8	; 0x08
     7a2:	71 85       	ldd	r23, Z+9	; 0x09
     7a4:	16 96       	adiw	r26, 0x06	; 6
     7a6:	0d 91       	ld	r16, X+
     7a8:	1d 91       	ld	r17, X+
     7aa:	2d 91       	ld	r18, X+
     7ac:	3c 91       	ld	r19, X
     7ae:	19 97       	sbiw	r26, 0x09	; 9
     7b0:	40 1b       	sub	r20, r16
     7b2:	51 0b       	sbc	r21, r17
     7b4:	62 0b       	sbc	r22, r18
     7b6:	73 0b       	sbc	r23, r19
     7b8:	7a f4       	brpl	.+30     	; 0x7d8 <schedule+0x6c>
     7ba:	fc 01       	movw	r30, r24
     7bc:	20 81       	ld	r18, Z
     7be:	31 81       	ldd	r19, Z+1	; 0x01
     7c0:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <threadPool+0x1>
     7c4:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <threadPool>
     7c8:	d1 83       	std	Z+1, r29	; 0x01
     7ca:	c0 83       	st	Z, r28
     7cc:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <activeStack+0x1>
     7d0:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <activeStack>
     7d4:	0e 94 96 03 	call	0x72c	; 0x72c <dispatch>
     7d8:	df 91       	pop	r29
     7da:	cf 91       	pop	r28
     7dc:	1f 91       	pop	r17
     7de:	0f 91       	pop	r16
     7e0:	08 95       	ret

000007e2 <__vector_1>:
     7e2:	1f 92       	push	r1
     7e4:	0f 92       	push	r0
     7e6:	0f b6       	in	r0, 0x3f	; 63
     7e8:	0f 92       	push	r0
     7ea:	11 24       	eor	r1, r1
     7ec:	2f 93       	push	r18
     7ee:	3f 93       	push	r19
     7f0:	4f 93       	push	r20
     7f2:	5f 93       	push	r21
     7f4:	6f 93       	push	r22
     7f6:	7f 93       	push	r23
     7f8:	8f 93       	push	r24
     7fa:	9f 93       	push	r25
     7fc:	af 93       	push	r26
     7fe:	bf 93       	push	r27
     800:	ef 93       	push	r30
     802:	ff 93       	push	r31
     804:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     808:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     80c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     810:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     814:	c9 01       	movw	r24, r18
     816:	03 2e       	mov	r0, r19
     818:	00 0c       	add	r0, r0
     81a:	aa 0b       	sbc	r26, r26
     81c:	bb 0b       	sbc	r27, r27
     81e:	dc 01       	movw	r26, r24
     820:	99 27       	eor	r25, r25
     822:	88 27       	eor	r24, r24
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	70 e0       	ldi	r23, 0x00	; 0
     828:	84 2b       	or	r24, r20
     82a:	95 2b       	or	r25, r21
     82c:	a6 2b       	or	r26, r22
     82e:	b7 2b       	or	r27, r23
     830:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     834:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     838:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     83c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     840:	b0 9b       	sbis	0x16, 0	; 22
     842:	1b c0       	rjmp	.+54     	; 0x87a <__vector_1+0x98>
     844:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     848:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     84c:	c9 01       	movw	r24, r18
     84e:	01 96       	adiw	r24, 0x01	; 1
     850:	09 2e       	mov	r0, r25
     852:	00 0c       	add	r0, r0
     854:	aa 0b       	sbc	r26, r26
     856:	bb 0b       	sbc	r27, r27
     858:	dc 01       	movw	r26, r24
     85a:	99 27       	eor	r25, r25
     85c:	88 27       	eor	r24, r24
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	70 e0       	ldi	r23, 0x00	; 0
     862:	84 2b       	or	r24, r20
     864:	95 2b       	or	r25, r21
     866:	a6 2b       	or	r26, r22
     868:	b7 2b       	or	r27, r23
     86a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     86e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     872:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     876:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     87a:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <mtable>
     87e:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <mtable+0x1>
     882:	30 97       	sbiw	r30, 0x00	; 0
     884:	39 f0       	breq	.+14     	; 0x894 <__vector_1+0xb2>
     886:	60 e0       	ldi	r22, 0x00	; 0
     888:	70 e0       	ldi	r23, 0x00	; 0
     88a:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <otable>
     88e:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <otable+0x1>
     892:	09 95       	icall
     894:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     898:	ff 91       	pop	r31
     89a:	ef 91       	pop	r30
     89c:	bf 91       	pop	r27
     89e:	af 91       	pop	r26
     8a0:	9f 91       	pop	r25
     8a2:	8f 91       	pop	r24
     8a4:	7f 91       	pop	r23
     8a6:	6f 91       	pop	r22
     8a8:	5f 91       	pop	r21
     8aa:	4f 91       	pop	r20
     8ac:	3f 91       	pop	r19
     8ae:	2f 91       	pop	r18
     8b0:	0f 90       	pop	r0
     8b2:	0f be       	out	0x3f, r0	; 63
     8b4:	0f 90       	pop	r0
     8b6:	1f 90       	pop	r1
     8b8:	18 95       	reti

000008ba <__vector_2>:
     8ba:	1f 92       	push	r1
     8bc:	0f 92       	push	r0
     8be:	0f b6       	in	r0, 0x3f	; 63
     8c0:	0f 92       	push	r0
     8c2:	11 24       	eor	r1, r1
     8c4:	2f 93       	push	r18
     8c6:	3f 93       	push	r19
     8c8:	4f 93       	push	r20
     8ca:	5f 93       	push	r21
     8cc:	6f 93       	push	r22
     8ce:	7f 93       	push	r23
     8d0:	8f 93       	push	r24
     8d2:	9f 93       	push	r25
     8d4:	af 93       	push	r26
     8d6:	bf 93       	push	r27
     8d8:	ef 93       	push	r30
     8da:	ff 93       	push	r31
     8dc:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     8e0:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     8e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     8e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     8ec:	c9 01       	movw	r24, r18
     8ee:	03 2e       	mov	r0, r19
     8f0:	00 0c       	add	r0, r0
     8f2:	aa 0b       	sbc	r26, r26
     8f4:	bb 0b       	sbc	r27, r27
     8f6:	dc 01       	movw	r26, r24
     8f8:	99 27       	eor	r25, r25
     8fa:	88 27       	eor	r24, r24
     8fc:	60 e0       	ldi	r22, 0x00	; 0
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	84 2b       	or	r24, r20
     902:	95 2b       	or	r25, r21
     904:	a6 2b       	or	r26, r22
     906:	b7 2b       	or	r27, r23
     908:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     90c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     910:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     914:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     918:	b0 9b       	sbis	0x16, 0	; 22
     91a:	1b c0       	rjmp	.+54     	; 0x952 <__vector_2+0x98>
     91c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     920:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     924:	c9 01       	movw	r24, r18
     926:	01 96       	adiw	r24, 0x01	; 1
     928:	09 2e       	mov	r0, r25
     92a:	00 0c       	add	r0, r0
     92c:	aa 0b       	sbc	r26, r26
     92e:	bb 0b       	sbc	r27, r27
     930:	dc 01       	movw	r26, r24
     932:	99 27       	eor	r25, r25
     934:	88 27       	eor	r24, r24
     936:	60 e0       	ldi	r22, 0x00	; 0
     938:	70 e0       	ldi	r23, 0x00	; 0
     93a:	84 2b       	or	r24, r20
     93c:	95 2b       	or	r25, r21
     93e:	a6 2b       	or	r26, r22
     940:	b7 2b       	or	r27, r23
     942:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     946:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     94a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     94e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     952:	e0 91 30 02 	lds	r30, 0x0230	; 0x800230 <mtable+0x2>
     956:	f0 91 31 02 	lds	r31, 0x0231	; 0x800231 <mtable+0x3>
     95a:	30 97       	sbiw	r30, 0x00	; 0
     95c:	39 f0       	breq	.+14     	; 0x96c <__vector_2+0xb2>
     95e:	61 e0       	ldi	r22, 0x01	; 1
     960:	70 e0       	ldi	r23, 0x00	; 0
     962:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <otable+0x2>
     966:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <otable+0x3>
     96a:	09 95       	icall
     96c:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     970:	ff 91       	pop	r31
     972:	ef 91       	pop	r30
     974:	bf 91       	pop	r27
     976:	af 91       	pop	r26
     978:	9f 91       	pop	r25
     97a:	8f 91       	pop	r24
     97c:	7f 91       	pop	r23
     97e:	6f 91       	pop	r22
     980:	5f 91       	pop	r21
     982:	4f 91       	pop	r20
     984:	3f 91       	pop	r19
     986:	2f 91       	pop	r18
     988:	0f 90       	pop	r0
     98a:	0f be       	out	0x3f, r0	; 63
     98c:	0f 90       	pop	r0
     98e:	1f 90       	pop	r1
     990:	18 95       	reti

00000992 <__vector_3>:
     992:	1f 92       	push	r1
     994:	0f 92       	push	r0
     996:	0f b6       	in	r0, 0x3f	; 63
     998:	0f 92       	push	r0
     99a:	11 24       	eor	r1, r1
     99c:	2f 93       	push	r18
     99e:	3f 93       	push	r19
     9a0:	4f 93       	push	r20
     9a2:	5f 93       	push	r21
     9a4:	6f 93       	push	r22
     9a6:	7f 93       	push	r23
     9a8:	8f 93       	push	r24
     9aa:	9f 93       	push	r25
     9ac:	af 93       	push	r26
     9ae:	bf 93       	push	r27
     9b0:	ef 93       	push	r30
     9b2:	ff 93       	push	r31
     9b4:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     9b8:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     9bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     9c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     9c4:	c9 01       	movw	r24, r18
     9c6:	03 2e       	mov	r0, r19
     9c8:	00 0c       	add	r0, r0
     9ca:	aa 0b       	sbc	r26, r26
     9cc:	bb 0b       	sbc	r27, r27
     9ce:	dc 01       	movw	r26, r24
     9d0:	99 27       	eor	r25, r25
     9d2:	88 27       	eor	r24, r24
     9d4:	60 e0       	ldi	r22, 0x00	; 0
     9d6:	70 e0       	ldi	r23, 0x00	; 0
     9d8:	84 2b       	or	r24, r20
     9da:	95 2b       	or	r25, r21
     9dc:	a6 2b       	or	r26, r22
     9de:	b7 2b       	or	r27, r23
     9e0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     9e4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     9e8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     9ec:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     9f0:	b0 9b       	sbis	0x16, 0	; 22
     9f2:	1b c0       	rjmp	.+54     	; 0xa2a <__vector_3+0x98>
     9f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     9f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     9fc:	c9 01       	movw	r24, r18
     9fe:	01 96       	adiw	r24, 0x01	; 1
     a00:	09 2e       	mov	r0, r25
     a02:	00 0c       	add	r0, r0
     a04:	aa 0b       	sbc	r26, r26
     a06:	bb 0b       	sbc	r27, r27
     a08:	dc 01       	movw	r26, r24
     a0a:	99 27       	eor	r25, r25
     a0c:	88 27       	eor	r24, r24
     a0e:	60 e0       	ldi	r22, 0x00	; 0
     a10:	70 e0       	ldi	r23, 0x00	; 0
     a12:	84 2b       	or	r24, r20
     a14:	95 2b       	or	r25, r21
     a16:	a6 2b       	or	r26, r22
     a18:	b7 2b       	or	r27, r23
     a1a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     a1e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     a22:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     a26:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     a2a:	e0 91 32 02 	lds	r30, 0x0232	; 0x800232 <mtable+0x4>
     a2e:	f0 91 33 02 	lds	r31, 0x0233	; 0x800233 <mtable+0x5>
     a32:	30 97       	sbiw	r30, 0x00	; 0
     a34:	39 f0       	breq	.+14     	; 0xa44 <__vector_3+0xb2>
     a36:	62 e0       	ldi	r22, 0x02	; 2
     a38:	70 e0       	ldi	r23, 0x00	; 0
     a3a:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <otable+0x4>
     a3e:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <otable+0x5>
     a42:	09 95       	icall
     a44:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     a48:	ff 91       	pop	r31
     a4a:	ef 91       	pop	r30
     a4c:	bf 91       	pop	r27
     a4e:	af 91       	pop	r26
     a50:	9f 91       	pop	r25
     a52:	8f 91       	pop	r24
     a54:	7f 91       	pop	r23
     a56:	6f 91       	pop	r22
     a58:	5f 91       	pop	r21
     a5a:	4f 91       	pop	r20
     a5c:	3f 91       	pop	r19
     a5e:	2f 91       	pop	r18
     a60:	0f 90       	pop	r0
     a62:	0f be       	out	0x3f, r0	; 63
     a64:	0f 90       	pop	r0
     a66:	1f 90       	pop	r1
     a68:	18 95       	reti

00000a6a <__vector_4>:
     a6a:	1f 92       	push	r1
     a6c:	0f 92       	push	r0
     a6e:	0f b6       	in	r0, 0x3f	; 63
     a70:	0f 92       	push	r0
     a72:	11 24       	eor	r1, r1
     a74:	2f 93       	push	r18
     a76:	3f 93       	push	r19
     a78:	4f 93       	push	r20
     a7a:	5f 93       	push	r21
     a7c:	6f 93       	push	r22
     a7e:	7f 93       	push	r23
     a80:	8f 93       	push	r24
     a82:	9f 93       	push	r25
     a84:	af 93       	push	r26
     a86:	bf 93       	push	r27
     a88:	ef 93       	push	r30
     a8a:	ff 93       	push	r31
     a8c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     a90:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     a94:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     a98:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     a9c:	c9 01       	movw	r24, r18
     a9e:	03 2e       	mov	r0, r19
     aa0:	00 0c       	add	r0, r0
     aa2:	aa 0b       	sbc	r26, r26
     aa4:	bb 0b       	sbc	r27, r27
     aa6:	dc 01       	movw	r26, r24
     aa8:	99 27       	eor	r25, r25
     aaa:	88 27       	eor	r24, r24
     aac:	60 e0       	ldi	r22, 0x00	; 0
     aae:	70 e0       	ldi	r23, 0x00	; 0
     ab0:	84 2b       	or	r24, r20
     ab2:	95 2b       	or	r25, r21
     ab4:	a6 2b       	or	r26, r22
     ab6:	b7 2b       	or	r27, r23
     ab8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     abc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     ac0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     ac4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     ac8:	b0 9b       	sbis	0x16, 0	; 22
     aca:	1b c0       	rjmp	.+54     	; 0xb02 <__vector_4+0x98>
     acc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ad0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     ad4:	c9 01       	movw	r24, r18
     ad6:	01 96       	adiw	r24, 0x01	; 1
     ad8:	09 2e       	mov	r0, r25
     ada:	00 0c       	add	r0, r0
     adc:	aa 0b       	sbc	r26, r26
     ade:	bb 0b       	sbc	r27, r27
     ae0:	dc 01       	movw	r26, r24
     ae2:	99 27       	eor	r25, r25
     ae4:	88 27       	eor	r24, r24
     ae6:	60 e0       	ldi	r22, 0x00	; 0
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	84 2b       	or	r24, r20
     aec:	95 2b       	or	r25, r21
     aee:	a6 2b       	or	r26, r22
     af0:	b7 2b       	or	r27, r23
     af2:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     af6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     afa:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     afe:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     b02:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <mtable+0x6>
     b06:	f0 91 35 02 	lds	r31, 0x0235	; 0x800235 <mtable+0x7>
     b0a:	30 97       	sbiw	r30, 0x00	; 0
     b0c:	39 f0       	breq	.+14     	; 0xb1c <__vector_4+0xb2>
     b0e:	63 e0       	ldi	r22, 0x03	; 3
     b10:	70 e0       	ldi	r23, 0x00	; 0
     b12:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <otable+0x6>
     b16:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <otable+0x7>
     b1a:	09 95       	icall
     b1c:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     b20:	ff 91       	pop	r31
     b22:	ef 91       	pop	r30
     b24:	bf 91       	pop	r27
     b26:	af 91       	pop	r26
     b28:	9f 91       	pop	r25
     b2a:	8f 91       	pop	r24
     b2c:	7f 91       	pop	r23
     b2e:	6f 91       	pop	r22
     b30:	5f 91       	pop	r21
     b32:	4f 91       	pop	r20
     b34:	3f 91       	pop	r19
     b36:	2f 91       	pop	r18
     b38:	0f 90       	pop	r0
     b3a:	0f be       	out	0x3f, r0	; 63
     b3c:	0f 90       	pop	r0
     b3e:	1f 90       	pop	r1
     b40:	18 95       	reti

00000b42 <__vector_5>:
     b42:	1f 92       	push	r1
     b44:	0f 92       	push	r0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	0f 92       	push	r0
     b4a:	11 24       	eor	r1, r1
     b4c:	2f 93       	push	r18
     b4e:	3f 93       	push	r19
     b50:	4f 93       	push	r20
     b52:	5f 93       	push	r21
     b54:	6f 93       	push	r22
     b56:	7f 93       	push	r23
     b58:	8f 93       	push	r24
     b5a:	9f 93       	push	r25
     b5c:	af 93       	push	r26
     b5e:	bf 93       	push	r27
     b60:	ef 93       	push	r30
     b62:	ff 93       	push	r31
     b64:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     b68:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     b6c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     b70:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     b74:	c9 01       	movw	r24, r18
     b76:	03 2e       	mov	r0, r19
     b78:	00 0c       	add	r0, r0
     b7a:	aa 0b       	sbc	r26, r26
     b7c:	bb 0b       	sbc	r27, r27
     b7e:	dc 01       	movw	r26, r24
     b80:	99 27       	eor	r25, r25
     b82:	88 27       	eor	r24, r24
     b84:	60 e0       	ldi	r22, 0x00	; 0
     b86:	70 e0       	ldi	r23, 0x00	; 0
     b88:	84 2b       	or	r24, r20
     b8a:	95 2b       	or	r25, r21
     b8c:	a6 2b       	or	r26, r22
     b8e:	b7 2b       	or	r27, r23
     b90:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     b94:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     b98:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     b9c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     ba0:	b0 9b       	sbis	0x16, 0	; 22
     ba2:	1b c0       	rjmp	.+54     	; 0xbda <__vector_5+0x98>
     ba4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ba8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     bac:	c9 01       	movw	r24, r18
     bae:	01 96       	adiw	r24, 0x01	; 1
     bb0:	09 2e       	mov	r0, r25
     bb2:	00 0c       	add	r0, r0
     bb4:	aa 0b       	sbc	r26, r26
     bb6:	bb 0b       	sbc	r27, r27
     bb8:	dc 01       	movw	r26, r24
     bba:	99 27       	eor	r25, r25
     bbc:	88 27       	eor	r24, r24
     bbe:	60 e0       	ldi	r22, 0x00	; 0
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	84 2b       	or	r24, r20
     bc4:	95 2b       	or	r25, r21
     bc6:	a6 2b       	or	r26, r22
     bc8:	b7 2b       	or	r27, r23
     bca:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     bce:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     bd2:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     bd6:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     bda:	e0 91 36 02 	lds	r30, 0x0236	; 0x800236 <mtable+0x8>
     bde:	f0 91 37 02 	lds	r31, 0x0237	; 0x800237 <mtable+0x9>
     be2:	30 97       	sbiw	r30, 0x00	; 0
     be4:	39 f0       	breq	.+14     	; 0xbf4 <__vector_5+0xb2>
     be6:	64 e0       	ldi	r22, 0x04	; 4
     be8:	70 e0       	ldi	r23, 0x00	; 0
     bea:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <otable+0x8>
     bee:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <otable+0x9>
     bf2:	09 95       	icall
     bf4:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     bf8:	ff 91       	pop	r31
     bfa:	ef 91       	pop	r30
     bfc:	bf 91       	pop	r27
     bfe:	af 91       	pop	r26
     c00:	9f 91       	pop	r25
     c02:	8f 91       	pop	r24
     c04:	7f 91       	pop	r23
     c06:	6f 91       	pop	r22
     c08:	5f 91       	pop	r21
     c0a:	4f 91       	pop	r20
     c0c:	3f 91       	pop	r19
     c0e:	2f 91       	pop	r18
     c10:	0f 90       	pop	r0
     c12:	0f be       	out	0x3f, r0	; 63
     c14:	0f 90       	pop	r0
     c16:	1f 90       	pop	r1
     c18:	18 95       	reti

00000c1a <__vector_10>:
     c1a:	1f 92       	push	r1
     c1c:	0f 92       	push	r0
     c1e:	0f b6       	in	r0, 0x3f	; 63
     c20:	0f 92       	push	r0
     c22:	11 24       	eor	r1, r1
     c24:	2f 93       	push	r18
     c26:	3f 93       	push	r19
     c28:	4f 93       	push	r20
     c2a:	5f 93       	push	r21
     c2c:	6f 93       	push	r22
     c2e:	7f 93       	push	r23
     c30:	8f 93       	push	r24
     c32:	9f 93       	push	r25
     c34:	af 93       	push	r26
     c36:	bf 93       	push	r27
     c38:	ef 93       	push	r30
     c3a:	ff 93       	push	r31
     c3c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     c40:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     c44:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     c48:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     c4c:	c9 01       	movw	r24, r18
     c4e:	03 2e       	mov	r0, r19
     c50:	00 0c       	add	r0, r0
     c52:	aa 0b       	sbc	r26, r26
     c54:	bb 0b       	sbc	r27, r27
     c56:	dc 01       	movw	r26, r24
     c58:	99 27       	eor	r25, r25
     c5a:	88 27       	eor	r24, r24
     c5c:	60 e0       	ldi	r22, 0x00	; 0
     c5e:	70 e0       	ldi	r23, 0x00	; 0
     c60:	84 2b       	or	r24, r20
     c62:	95 2b       	or	r25, r21
     c64:	a6 2b       	or	r26, r22
     c66:	b7 2b       	or	r27, r23
     c68:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     c6c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     c70:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     c74:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     c78:	b0 9b       	sbis	0x16, 0	; 22
     c7a:	1b c0       	rjmp	.+54     	; 0xcb2 <__vector_10+0x98>
     c7c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     c80:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     c84:	c9 01       	movw	r24, r18
     c86:	01 96       	adiw	r24, 0x01	; 1
     c88:	09 2e       	mov	r0, r25
     c8a:	00 0c       	add	r0, r0
     c8c:	aa 0b       	sbc	r26, r26
     c8e:	bb 0b       	sbc	r27, r27
     c90:	dc 01       	movw	r26, r24
     c92:	99 27       	eor	r25, r25
     c94:	88 27       	eor	r24, r24
     c96:	60 e0       	ldi	r22, 0x00	; 0
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	84 2b       	or	r24, r20
     c9c:	95 2b       	or	r25, r21
     c9e:	a6 2b       	or	r26, r22
     ca0:	b7 2b       	or	r27, r23
     ca2:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     ca6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     caa:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     cae:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     cb2:	e0 91 38 02 	lds	r30, 0x0238	; 0x800238 <mtable+0xa>
     cb6:	f0 91 39 02 	lds	r31, 0x0239	; 0x800239 <mtable+0xb>
     cba:	30 97       	sbiw	r30, 0x00	; 0
     cbc:	39 f0       	breq	.+14     	; 0xccc <__vector_10+0xb2>
     cbe:	65 e0       	ldi	r22, 0x05	; 5
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <otable+0xa>
     cc6:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <otable+0xb>
     cca:	09 95       	icall
     ccc:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     cd0:	ff 91       	pop	r31
     cd2:	ef 91       	pop	r30
     cd4:	bf 91       	pop	r27
     cd6:	af 91       	pop	r26
     cd8:	9f 91       	pop	r25
     cda:	8f 91       	pop	r24
     cdc:	7f 91       	pop	r23
     cde:	6f 91       	pop	r22
     ce0:	5f 91       	pop	r21
     ce2:	4f 91       	pop	r20
     ce4:	3f 91       	pop	r19
     ce6:	2f 91       	pop	r18
     ce8:	0f 90       	pop	r0
     cea:	0f be       	out	0x3f, r0	; 63
     cec:	0f 90       	pop	r0
     cee:	1f 90       	pop	r1
     cf0:	18 95       	reti

00000cf2 <__vector_11>:
     cf2:	1f 92       	push	r1
     cf4:	0f 92       	push	r0
     cf6:	0f b6       	in	r0, 0x3f	; 63
     cf8:	0f 92       	push	r0
     cfa:	11 24       	eor	r1, r1
     cfc:	2f 93       	push	r18
     cfe:	3f 93       	push	r19
     d00:	4f 93       	push	r20
     d02:	5f 93       	push	r21
     d04:	6f 93       	push	r22
     d06:	7f 93       	push	r23
     d08:	8f 93       	push	r24
     d0a:	9f 93       	push	r25
     d0c:	af 93       	push	r26
     d0e:	bf 93       	push	r27
     d10:	ef 93       	push	r30
     d12:	ff 93       	push	r31
     d14:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     d18:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     d1c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d20:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d24:	c9 01       	movw	r24, r18
     d26:	03 2e       	mov	r0, r19
     d28:	00 0c       	add	r0, r0
     d2a:	aa 0b       	sbc	r26, r26
     d2c:	bb 0b       	sbc	r27, r27
     d2e:	dc 01       	movw	r26, r24
     d30:	99 27       	eor	r25, r25
     d32:	88 27       	eor	r24, r24
     d34:	60 e0       	ldi	r22, 0x00	; 0
     d36:	70 e0       	ldi	r23, 0x00	; 0
     d38:	84 2b       	or	r24, r20
     d3a:	95 2b       	or	r25, r21
     d3c:	a6 2b       	or	r26, r22
     d3e:	b7 2b       	or	r27, r23
     d40:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     d44:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     d48:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     d4c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     d50:	b0 9b       	sbis	0x16, 0	; 22
     d52:	1b c0       	rjmp	.+54     	; 0xd8a <__vector_11+0x98>
     d54:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d58:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d5c:	c9 01       	movw	r24, r18
     d5e:	01 96       	adiw	r24, 0x01	; 1
     d60:	09 2e       	mov	r0, r25
     d62:	00 0c       	add	r0, r0
     d64:	aa 0b       	sbc	r26, r26
     d66:	bb 0b       	sbc	r27, r27
     d68:	dc 01       	movw	r26, r24
     d6a:	99 27       	eor	r25, r25
     d6c:	88 27       	eor	r24, r24
     d6e:	60 e0       	ldi	r22, 0x00	; 0
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	84 2b       	or	r24, r20
     d74:	95 2b       	or	r25, r21
     d76:	a6 2b       	or	r26, r22
     d78:	b7 2b       	or	r27, r23
     d7a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     d7e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     d82:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     d86:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     d8a:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <mtable+0xc>
     d8e:	f0 91 3b 02 	lds	r31, 0x023B	; 0x80023b <mtable+0xd>
     d92:	30 97       	sbiw	r30, 0x00	; 0
     d94:	39 f0       	breq	.+14     	; 0xda4 <__vector_11+0xb2>
     d96:	66 e0       	ldi	r22, 0x06	; 6
     d98:	70 e0       	ldi	r23, 0x00	; 0
     d9a:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <otable+0xc>
     d9e:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <otable+0xd>
     da2:	09 95       	icall
     da4:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     da8:	ff 91       	pop	r31
     daa:	ef 91       	pop	r30
     dac:	bf 91       	pop	r27
     dae:	af 91       	pop	r26
     db0:	9f 91       	pop	r25
     db2:	8f 91       	pop	r24
     db4:	7f 91       	pop	r23
     db6:	6f 91       	pop	r22
     db8:	5f 91       	pop	r21
     dba:	4f 91       	pop	r20
     dbc:	3f 91       	pop	r19
     dbe:	2f 91       	pop	r18
     dc0:	0f 90       	pop	r0
     dc2:	0f be       	out	0x3f, r0	; 63
     dc4:	0f 90       	pop	r0
     dc6:	1f 90       	pop	r1
     dc8:	18 95       	reti

00000dca <__vector_12>:
     dca:	1f 92       	push	r1
     dcc:	0f 92       	push	r0
     dce:	0f b6       	in	r0, 0x3f	; 63
     dd0:	0f 92       	push	r0
     dd2:	11 24       	eor	r1, r1
     dd4:	2f 93       	push	r18
     dd6:	3f 93       	push	r19
     dd8:	4f 93       	push	r20
     dda:	5f 93       	push	r21
     ddc:	6f 93       	push	r22
     dde:	7f 93       	push	r23
     de0:	8f 93       	push	r24
     de2:	9f 93       	push	r25
     de4:	af 93       	push	r26
     de6:	bf 93       	push	r27
     de8:	ef 93       	push	r30
     dea:	ff 93       	push	r31
     dec:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     df0:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     df4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     df8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     dfc:	c9 01       	movw	r24, r18
     dfe:	03 2e       	mov	r0, r19
     e00:	00 0c       	add	r0, r0
     e02:	aa 0b       	sbc	r26, r26
     e04:	bb 0b       	sbc	r27, r27
     e06:	dc 01       	movw	r26, r24
     e08:	99 27       	eor	r25, r25
     e0a:	88 27       	eor	r24, r24
     e0c:	60 e0       	ldi	r22, 0x00	; 0
     e0e:	70 e0       	ldi	r23, 0x00	; 0
     e10:	84 2b       	or	r24, r20
     e12:	95 2b       	or	r25, r21
     e14:	a6 2b       	or	r26, r22
     e16:	b7 2b       	or	r27, r23
     e18:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     e1c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     e20:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     e24:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     e28:	b0 9b       	sbis	0x16, 0	; 22
     e2a:	1b c0       	rjmp	.+54     	; 0xe62 <__vector_12+0x98>
     e2c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     e30:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     e34:	c9 01       	movw	r24, r18
     e36:	01 96       	adiw	r24, 0x01	; 1
     e38:	09 2e       	mov	r0, r25
     e3a:	00 0c       	add	r0, r0
     e3c:	aa 0b       	sbc	r26, r26
     e3e:	bb 0b       	sbc	r27, r27
     e40:	dc 01       	movw	r26, r24
     e42:	99 27       	eor	r25, r25
     e44:	88 27       	eor	r24, r24
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	70 e0       	ldi	r23, 0x00	; 0
     e4a:	84 2b       	or	r24, r20
     e4c:	95 2b       	or	r25, r21
     e4e:	a6 2b       	or	r26, r22
     e50:	b7 2b       	or	r27, r23
     e52:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     e56:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     e5a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     e5e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     e62:	e0 91 3c 02 	lds	r30, 0x023C	; 0x80023c <mtable+0xe>
     e66:	f0 91 3d 02 	lds	r31, 0x023D	; 0x80023d <mtable+0xf>
     e6a:	30 97       	sbiw	r30, 0x00	; 0
     e6c:	39 f0       	breq	.+14     	; 0xe7c <__vector_12+0xb2>
     e6e:	67 e0       	ldi	r22, 0x07	; 7
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <otable+0xe>
     e76:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <otable+0xf>
     e7a:	09 95       	icall
     e7c:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     e80:	ff 91       	pop	r31
     e82:	ef 91       	pop	r30
     e84:	bf 91       	pop	r27
     e86:	af 91       	pop	r26
     e88:	9f 91       	pop	r25
     e8a:	8f 91       	pop	r24
     e8c:	7f 91       	pop	r23
     e8e:	6f 91       	pop	r22
     e90:	5f 91       	pop	r21
     e92:	4f 91       	pop	r20
     e94:	3f 91       	pop	r19
     e96:	2f 91       	pop	r18
     e98:	0f 90       	pop	r0
     e9a:	0f be       	out	0x3f, r0	; 63
     e9c:	0f 90       	pop	r0
     e9e:	1f 90       	pop	r1
     ea0:	18 95       	reti

00000ea2 <__vector_13>:
     ea2:	1f 92       	push	r1
     ea4:	0f 92       	push	r0
     ea6:	0f b6       	in	r0, 0x3f	; 63
     ea8:	0f 92       	push	r0
     eaa:	11 24       	eor	r1, r1
     eac:	2f 93       	push	r18
     eae:	3f 93       	push	r19
     eb0:	4f 93       	push	r20
     eb2:	5f 93       	push	r21
     eb4:	6f 93       	push	r22
     eb6:	7f 93       	push	r23
     eb8:	8f 93       	push	r24
     eba:	9f 93       	push	r25
     ebc:	af 93       	push	r26
     ebe:	bf 93       	push	r27
     ec0:	ef 93       	push	r30
     ec2:	ff 93       	push	r31
     ec4:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     ec8:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     ecc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ed0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     ed4:	c9 01       	movw	r24, r18
     ed6:	03 2e       	mov	r0, r19
     ed8:	00 0c       	add	r0, r0
     eda:	aa 0b       	sbc	r26, r26
     edc:	bb 0b       	sbc	r27, r27
     ede:	dc 01       	movw	r26, r24
     ee0:	99 27       	eor	r25, r25
     ee2:	88 27       	eor	r24, r24
     ee4:	60 e0       	ldi	r22, 0x00	; 0
     ee6:	70 e0       	ldi	r23, 0x00	; 0
     ee8:	84 2b       	or	r24, r20
     eea:	95 2b       	or	r25, r21
     eec:	a6 2b       	or	r26, r22
     eee:	b7 2b       	or	r27, r23
     ef0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     ef4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     ef8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     efc:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     f00:	b0 9b       	sbis	0x16, 0	; 22
     f02:	1b c0       	rjmp	.+54     	; 0xf3a <__vector_13+0x98>
     f04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     f08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     f0c:	c9 01       	movw	r24, r18
     f0e:	01 96       	adiw	r24, 0x01	; 1
     f10:	09 2e       	mov	r0, r25
     f12:	00 0c       	add	r0, r0
     f14:	aa 0b       	sbc	r26, r26
     f16:	bb 0b       	sbc	r27, r27
     f18:	dc 01       	movw	r26, r24
     f1a:	99 27       	eor	r25, r25
     f1c:	88 27       	eor	r24, r24
     f1e:	60 e0       	ldi	r22, 0x00	; 0
     f20:	70 e0       	ldi	r23, 0x00	; 0
     f22:	84 2b       	or	r24, r20
     f24:	95 2b       	or	r25, r21
     f26:	a6 2b       	or	r26, r22
     f28:	b7 2b       	or	r27, r23
     f2a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     f2e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     f32:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     f36:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     f3a:	e0 91 3e 02 	lds	r30, 0x023E	; 0x80023e <mtable+0x10>
     f3e:	f0 91 3f 02 	lds	r31, 0x023F	; 0x80023f <mtable+0x11>
     f42:	30 97       	sbiw	r30, 0x00	; 0
     f44:	39 f0       	breq	.+14     	; 0xf54 <__vector_13+0xb2>
     f46:	68 e0       	ldi	r22, 0x08	; 8
     f48:	70 e0       	ldi	r23, 0x00	; 0
     f4a:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <otable+0x10>
     f4e:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <otable+0x11>
     f52:	09 95       	icall
     f54:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
     f58:	ff 91       	pop	r31
     f5a:	ef 91       	pop	r30
     f5c:	bf 91       	pop	r27
     f5e:	af 91       	pop	r26
     f60:	9f 91       	pop	r25
     f62:	8f 91       	pop	r24
     f64:	7f 91       	pop	r23
     f66:	6f 91       	pop	r22
     f68:	5f 91       	pop	r21
     f6a:	4f 91       	pop	r20
     f6c:	3f 91       	pop	r19
     f6e:	2f 91       	pop	r18
     f70:	0f 90       	pop	r0
     f72:	0f be       	out	0x3f, r0	; 63
     f74:	0f 90       	pop	r0
     f76:	1f 90       	pop	r1
     f78:	18 95       	reti

00000f7a <__vector_14>:
     f7a:	1f 92       	push	r1
     f7c:	0f 92       	push	r0
     f7e:	0f b6       	in	r0, 0x3f	; 63
     f80:	0f 92       	push	r0
     f82:	11 24       	eor	r1, r1
     f84:	2f 93       	push	r18
     f86:	3f 93       	push	r19
     f88:	4f 93       	push	r20
     f8a:	5f 93       	push	r21
     f8c:	6f 93       	push	r22
     f8e:	7f 93       	push	r23
     f90:	8f 93       	push	r24
     f92:	9f 93       	push	r25
     f94:	af 93       	push	r26
     f96:	bf 93       	push	r27
     f98:	ef 93       	push	r30
     f9a:	ff 93       	push	r31
     f9c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
     fa0:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
     fa4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     fa8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     fac:	c9 01       	movw	r24, r18
     fae:	03 2e       	mov	r0, r19
     fb0:	00 0c       	add	r0, r0
     fb2:	aa 0b       	sbc	r26, r26
     fb4:	bb 0b       	sbc	r27, r27
     fb6:	dc 01       	movw	r26, r24
     fb8:	99 27       	eor	r25, r25
     fba:	88 27       	eor	r24, r24
     fbc:	60 e0       	ldi	r22, 0x00	; 0
     fbe:	70 e0       	ldi	r23, 0x00	; 0
     fc0:	84 2b       	or	r24, r20
     fc2:	95 2b       	or	r25, r21
     fc4:	a6 2b       	or	r26, r22
     fc6:	b7 2b       	or	r27, r23
     fc8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
     fcc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
     fd0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
     fd4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
     fd8:	b0 9b       	sbis	0x16, 0	; 22
     fda:	1b c0       	rjmp	.+54     	; 0x1012 <__vector_14+0x98>
     fdc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     fe0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     fe4:	c9 01       	movw	r24, r18
     fe6:	01 96       	adiw	r24, 0x01	; 1
     fe8:	09 2e       	mov	r0, r25
     fea:	00 0c       	add	r0, r0
     fec:	aa 0b       	sbc	r26, r26
     fee:	bb 0b       	sbc	r27, r27
     ff0:	dc 01       	movw	r26, r24
     ff2:	99 27       	eor	r25, r25
     ff4:	88 27       	eor	r24, r24
     ff6:	60 e0       	ldi	r22, 0x00	; 0
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	84 2b       	or	r24, r20
     ffc:	95 2b       	or	r25, r21
     ffe:	a6 2b       	or	r26, r22
    1000:	b7 2b       	or	r27, r23
    1002:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1006:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    100a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    100e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1012:	e0 91 40 02 	lds	r30, 0x0240	; 0x800240 <mtable+0x12>
    1016:	f0 91 41 02 	lds	r31, 0x0241	; 0x800241 <mtable+0x13>
    101a:	30 97       	sbiw	r30, 0x00	; 0
    101c:	39 f0       	breq	.+14     	; 0x102c <__vector_14+0xb2>
    101e:	69 e0       	ldi	r22, 0x09	; 9
    1020:	70 e0       	ldi	r23, 0x00	; 0
    1022:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <otable+0x12>
    1026:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <otable+0x13>
    102a:	09 95       	icall
    102c:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    1030:	ff 91       	pop	r31
    1032:	ef 91       	pop	r30
    1034:	bf 91       	pop	r27
    1036:	af 91       	pop	r26
    1038:	9f 91       	pop	r25
    103a:	8f 91       	pop	r24
    103c:	7f 91       	pop	r23
    103e:	6f 91       	pop	r22
    1040:	5f 91       	pop	r21
    1042:	4f 91       	pop	r20
    1044:	3f 91       	pop	r19
    1046:	2f 91       	pop	r18
    1048:	0f 90       	pop	r0
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	0f 90       	pop	r0
    104e:	1f 90       	pop	r1
    1050:	18 95       	reti

00001052 <__vector_15>:
    1052:	1f 92       	push	r1
    1054:	0f 92       	push	r0
    1056:	0f b6       	in	r0, 0x3f	; 63
    1058:	0f 92       	push	r0
    105a:	11 24       	eor	r1, r1
    105c:	2f 93       	push	r18
    105e:	3f 93       	push	r19
    1060:	4f 93       	push	r20
    1062:	5f 93       	push	r21
    1064:	6f 93       	push	r22
    1066:	7f 93       	push	r23
    1068:	8f 93       	push	r24
    106a:	9f 93       	push	r25
    106c:	af 93       	push	r26
    106e:	bf 93       	push	r27
    1070:	ef 93       	push	r30
    1072:	ff 93       	push	r31
    1074:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1078:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    107c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1080:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1084:	c9 01       	movw	r24, r18
    1086:	03 2e       	mov	r0, r19
    1088:	00 0c       	add	r0, r0
    108a:	aa 0b       	sbc	r26, r26
    108c:	bb 0b       	sbc	r27, r27
    108e:	dc 01       	movw	r26, r24
    1090:	99 27       	eor	r25, r25
    1092:	88 27       	eor	r24, r24
    1094:	60 e0       	ldi	r22, 0x00	; 0
    1096:	70 e0       	ldi	r23, 0x00	; 0
    1098:	84 2b       	or	r24, r20
    109a:	95 2b       	or	r25, r21
    109c:	a6 2b       	or	r26, r22
    109e:	b7 2b       	or	r27, r23
    10a0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    10a4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    10a8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    10ac:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    10b0:	b0 9b       	sbis	0x16, 0	; 22
    10b2:	1b c0       	rjmp	.+54     	; 0x10ea <__vector_15+0x98>
    10b4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    10b8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    10bc:	c9 01       	movw	r24, r18
    10be:	01 96       	adiw	r24, 0x01	; 1
    10c0:	09 2e       	mov	r0, r25
    10c2:	00 0c       	add	r0, r0
    10c4:	aa 0b       	sbc	r26, r26
    10c6:	bb 0b       	sbc	r27, r27
    10c8:	dc 01       	movw	r26, r24
    10ca:	99 27       	eor	r25, r25
    10cc:	88 27       	eor	r24, r24
    10ce:	60 e0       	ldi	r22, 0x00	; 0
    10d0:	70 e0       	ldi	r23, 0x00	; 0
    10d2:	84 2b       	or	r24, r20
    10d4:	95 2b       	or	r25, r21
    10d6:	a6 2b       	or	r26, r22
    10d8:	b7 2b       	or	r27, r23
    10da:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    10de:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    10e2:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    10e6:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    10ea:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <mtable+0x14>
    10ee:	f0 91 43 02 	lds	r31, 0x0243	; 0x800243 <mtable+0x15>
    10f2:	30 97       	sbiw	r30, 0x00	; 0
    10f4:	39 f0       	breq	.+14     	; 0x1104 <__vector_15+0xb2>
    10f6:	6a e0       	ldi	r22, 0x0A	; 10
    10f8:	70 e0       	ldi	r23, 0x00	; 0
    10fa:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <otable+0x14>
    10fe:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <otable+0x15>
    1102:	09 95       	icall
    1104:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    1108:	ff 91       	pop	r31
    110a:	ef 91       	pop	r30
    110c:	bf 91       	pop	r27
    110e:	af 91       	pop	r26
    1110:	9f 91       	pop	r25
    1112:	8f 91       	pop	r24
    1114:	7f 91       	pop	r23
    1116:	6f 91       	pop	r22
    1118:	5f 91       	pop	r21
    111a:	4f 91       	pop	r20
    111c:	3f 91       	pop	r19
    111e:	2f 91       	pop	r18
    1120:	0f 90       	pop	r0
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	0f 90       	pop	r0
    1126:	1f 90       	pop	r1
    1128:	18 95       	reti

0000112a <__vector_16>:
    112a:	1f 92       	push	r1
    112c:	0f 92       	push	r0
    112e:	0f b6       	in	r0, 0x3f	; 63
    1130:	0f 92       	push	r0
    1132:	11 24       	eor	r1, r1
    1134:	2f 93       	push	r18
    1136:	3f 93       	push	r19
    1138:	4f 93       	push	r20
    113a:	5f 93       	push	r21
    113c:	6f 93       	push	r22
    113e:	7f 93       	push	r23
    1140:	8f 93       	push	r24
    1142:	9f 93       	push	r25
    1144:	af 93       	push	r26
    1146:	bf 93       	push	r27
    1148:	ef 93       	push	r30
    114a:	ff 93       	push	r31
    114c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1150:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1154:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1158:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    115c:	c9 01       	movw	r24, r18
    115e:	03 2e       	mov	r0, r19
    1160:	00 0c       	add	r0, r0
    1162:	aa 0b       	sbc	r26, r26
    1164:	bb 0b       	sbc	r27, r27
    1166:	dc 01       	movw	r26, r24
    1168:	99 27       	eor	r25, r25
    116a:	88 27       	eor	r24, r24
    116c:	60 e0       	ldi	r22, 0x00	; 0
    116e:	70 e0       	ldi	r23, 0x00	; 0
    1170:	84 2b       	or	r24, r20
    1172:	95 2b       	or	r25, r21
    1174:	a6 2b       	or	r26, r22
    1176:	b7 2b       	or	r27, r23
    1178:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    117c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1180:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1184:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1188:	b0 9b       	sbis	0x16, 0	; 22
    118a:	1b c0       	rjmp	.+54     	; 0x11c2 <__vector_16+0x98>
    118c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1190:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1194:	c9 01       	movw	r24, r18
    1196:	01 96       	adiw	r24, 0x01	; 1
    1198:	09 2e       	mov	r0, r25
    119a:	00 0c       	add	r0, r0
    119c:	aa 0b       	sbc	r26, r26
    119e:	bb 0b       	sbc	r27, r27
    11a0:	dc 01       	movw	r26, r24
    11a2:	99 27       	eor	r25, r25
    11a4:	88 27       	eor	r24, r24
    11a6:	60 e0       	ldi	r22, 0x00	; 0
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	84 2b       	or	r24, r20
    11ac:	95 2b       	or	r25, r21
    11ae:	a6 2b       	or	r26, r22
    11b0:	b7 2b       	or	r27, r23
    11b2:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    11b6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    11ba:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    11be:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    11c2:	e0 91 44 02 	lds	r30, 0x0244	; 0x800244 <mtable+0x16>
    11c6:	f0 91 45 02 	lds	r31, 0x0245	; 0x800245 <mtable+0x17>
    11ca:	30 97       	sbiw	r30, 0x00	; 0
    11cc:	39 f0       	breq	.+14     	; 0x11dc <__vector_16+0xb2>
    11ce:	6b e0       	ldi	r22, 0x0B	; 11
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <otable+0x16>
    11d6:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <otable+0x17>
    11da:	09 95       	icall
    11dc:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    11e0:	ff 91       	pop	r31
    11e2:	ef 91       	pop	r30
    11e4:	bf 91       	pop	r27
    11e6:	af 91       	pop	r26
    11e8:	9f 91       	pop	r25
    11ea:	8f 91       	pop	r24
    11ec:	7f 91       	pop	r23
    11ee:	6f 91       	pop	r22
    11f0:	5f 91       	pop	r21
    11f2:	4f 91       	pop	r20
    11f4:	3f 91       	pop	r19
    11f6:	2f 91       	pop	r18
    11f8:	0f 90       	pop	r0
    11fa:	0f be       	out	0x3f, r0	; 63
    11fc:	0f 90       	pop	r0
    11fe:	1f 90       	pop	r1
    1200:	18 95       	reti

00001202 <__vector_17>:
    1202:	1f 92       	push	r1
    1204:	0f 92       	push	r0
    1206:	0f b6       	in	r0, 0x3f	; 63
    1208:	0f 92       	push	r0
    120a:	11 24       	eor	r1, r1
    120c:	2f 93       	push	r18
    120e:	3f 93       	push	r19
    1210:	4f 93       	push	r20
    1212:	5f 93       	push	r21
    1214:	6f 93       	push	r22
    1216:	7f 93       	push	r23
    1218:	8f 93       	push	r24
    121a:	9f 93       	push	r25
    121c:	af 93       	push	r26
    121e:	bf 93       	push	r27
    1220:	ef 93       	push	r30
    1222:	ff 93       	push	r31
    1224:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1228:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    122c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1230:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1234:	c9 01       	movw	r24, r18
    1236:	03 2e       	mov	r0, r19
    1238:	00 0c       	add	r0, r0
    123a:	aa 0b       	sbc	r26, r26
    123c:	bb 0b       	sbc	r27, r27
    123e:	dc 01       	movw	r26, r24
    1240:	99 27       	eor	r25, r25
    1242:	88 27       	eor	r24, r24
    1244:	60 e0       	ldi	r22, 0x00	; 0
    1246:	70 e0       	ldi	r23, 0x00	; 0
    1248:	84 2b       	or	r24, r20
    124a:	95 2b       	or	r25, r21
    124c:	a6 2b       	or	r26, r22
    124e:	b7 2b       	or	r27, r23
    1250:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1254:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1258:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    125c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1260:	b0 9b       	sbis	0x16, 0	; 22
    1262:	1b c0       	rjmp	.+54     	; 0x129a <__vector_17+0x98>
    1264:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1268:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    126c:	c9 01       	movw	r24, r18
    126e:	01 96       	adiw	r24, 0x01	; 1
    1270:	09 2e       	mov	r0, r25
    1272:	00 0c       	add	r0, r0
    1274:	aa 0b       	sbc	r26, r26
    1276:	bb 0b       	sbc	r27, r27
    1278:	dc 01       	movw	r26, r24
    127a:	99 27       	eor	r25, r25
    127c:	88 27       	eor	r24, r24
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	84 2b       	or	r24, r20
    1284:	95 2b       	or	r25, r21
    1286:	a6 2b       	or	r26, r22
    1288:	b7 2b       	or	r27, r23
    128a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    128e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1292:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1296:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    129a:	e0 91 46 02 	lds	r30, 0x0246	; 0x800246 <mtable+0x18>
    129e:	f0 91 47 02 	lds	r31, 0x0247	; 0x800247 <mtable+0x19>
    12a2:	30 97       	sbiw	r30, 0x00	; 0
    12a4:	39 f0       	breq	.+14     	; 0x12b4 <__vector_17+0xb2>
    12a6:	6c e0       	ldi	r22, 0x0C	; 12
    12a8:	70 e0       	ldi	r23, 0x00	; 0
    12aa:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <otable+0x18>
    12ae:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <otable+0x19>
    12b2:	09 95       	icall
    12b4:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    12b8:	ff 91       	pop	r31
    12ba:	ef 91       	pop	r30
    12bc:	bf 91       	pop	r27
    12be:	af 91       	pop	r26
    12c0:	9f 91       	pop	r25
    12c2:	8f 91       	pop	r24
    12c4:	7f 91       	pop	r23
    12c6:	6f 91       	pop	r22
    12c8:	5f 91       	pop	r21
    12ca:	4f 91       	pop	r20
    12cc:	3f 91       	pop	r19
    12ce:	2f 91       	pop	r18
    12d0:	0f 90       	pop	r0
    12d2:	0f be       	out	0x3f, r0	; 63
    12d4:	0f 90       	pop	r0
    12d6:	1f 90       	pop	r1
    12d8:	18 95       	reti

000012da <__vector_18>:
    12da:	1f 92       	push	r1
    12dc:	0f 92       	push	r0
    12de:	0f b6       	in	r0, 0x3f	; 63
    12e0:	0f 92       	push	r0
    12e2:	11 24       	eor	r1, r1
    12e4:	2f 93       	push	r18
    12e6:	3f 93       	push	r19
    12e8:	4f 93       	push	r20
    12ea:	5f 93       	push	r21
    12ec:	6f 93       	push	r22
    12ee:	7f 93       	push	r23
    12f0:	8f 93       	push	r24
    12f2:	9f 93       	push	r25
    12f4:	af 93       	push	r26
    12f6:	bf 93       	push	r27
    12f8:	ef 93       	push	r30
    12fa:	ff 93       	push	r31
    12fc:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1300:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1304:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1308:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    130c:	c9 01       	movw	r24, r18
    130e:	03 2e       	mov	r0, r19
    1310:	00 0c       	add	r0, r0
    1312:	aa 0b       	sbc	r26, r26
    1314:	bb 0b       	sbc	r27, r27
    1316:	dc 01       	movw	r26, r24
    1318:	99 27       	eor	r25, r25
    131a:	88 27       	eor	r24, r24
    131c:	60 e0       	ldi	r22, 0x00	; 0
    131e:	70 e0       	ldi	r23, 0x00	; 0
    1320:	84 2b       	or	r24, r20
    1322:	95 2b       	or	r25, r21
    1324:	a6 2b       	or	r26, r22
    1326:	b7 2b       	or	r27, r23
    1328:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    132c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1330:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1334:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1338:	b0 9b       	sbis	0x16, 0	; 22
    133a:	1b c0       	rjmp	.+54     	; 0x1372 <__vector_18+0x98>
    133c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1340:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1344:	c9 01       	movw	r24, r18
    1346:	01 96       	adiw	r24, 0x01	; 1
    1348:	09 2e       	mov	r0, r25
    134a:	00 0c       	add	r0, r0
    134c:	aa 0b       	sbc	r26, r26
    134e:	bb 0b       	sbc	r27, r27
    1350:	dc 01       	movw	r26, r24
    1352:	99 27       	eor	r25, r25
    1354:	88 27       	eor	r24, r24
    1356:	60 e0       	ldi	r22, 0x00	; 0
    1358:	70 e0       	ldi	r23, 0x00	; 0
    135a:	84 2b       	or	r24, r20
    135c:	95 2b       	or	r25, r21
    135e:	a6 2b       	or	r26, r22
    1360:	b7 2b       	or	r27, r23
    1362:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1366:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    136a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    136e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1372:	e0 91 48 02 	lds	r30, 0x0248	; 0x800248 <mtable+0x1a>
    1376:	f0 91 49 02 	lds	r31, 0x0249	; 0x800249 <mtable+0x1b>
    137a:	30 97       	sbiw	r30, 0x00	; 0
    137c:	39 f0       	breq	.+14     	; 0x138c <__vector_18+0xb2>
    137e:	6d e0       	ldi	r22, 0x0D	; 13
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <otable+0x1a>
    1386:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <otable+0x1b>
    138a:	09 95       	icall
    138c:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    1390:	ff 91       	pop	r31
    1392:	ef 91       	pop	r30
    1394:	bf 91       	pop	r27
    1396:	af 91       	pop	r26
    1398:	9f 91       	pop	r25
    139a:	8f 91       	pop	r24
    139c:	7f 91       	pop	r23
    139e:	6f 91       	pop	r22
    13a0:	5f 91       	pop	r21
    13a2:	4f 91       	pop	r20
    13a4:	3f 91       	pop	r19
    13a6:	2f 91       	pop	r18
    13a8:	0f 90       	pop	r0
    13aa:	0f be       	out	0x3f, r0	; 63
    13ac:	0f 90       	pop	r0
    13ae:	1f 90       	pop	r1
    13b0:	18 95       	reti

000013b2 <__vector_19>:
    13b2:	1f 92       	push	r1
    13b4:	0f 92       	push	r0
    13b6:	0f b6       	in	r0, 0x3f	; 63
    13b8:	0f 92       	push	r0
    13ba:	11 24       	eor	r1, r1
    13bc:	2f 93       	push	r18
    13be:	3f 93       	push	r19
    13c0:	4f 93       	push	r20
    13c2:	5f 93       	push	r21
    13c4:	6f 93       	push	r22
    13c6:	7f 93       	push	r23
    13c8:	8f 93       	push	r24
    13ca:	9f 93       	push	r25
    13cc:	af 93       	push	r26
    13ce:	bf 93       	push	r27
    13d0:	ef 93       	push	r30
    13d2:	ff 93       	push	r31
    13d4:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    13d8:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    13dc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    13e0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    13e4:	c9 01       	movw	r24, r18
    13e6:	03 2e       	mov	r0, r19
    13e8:	00 0c       	add	r0, r0
    13ea:	aa 0b       	sbc	r26, r26
    13ec:	bb 0b       	sbc	r27, r27
    13ee:	dc 01       	movw	r26, r24
    13f0:	99 27       	eor	r25, r25
    13f2:	88 27       	eor	r24, r24
    13f4:	60 e0       	ldi	r22, 0x00	; 0
    13f6:	70 e0       	ldi	r23, 0x00	; 0
    13f8:	84 2b       	or	r24, r20
    13fa:	95 2b       	or	r25, r21
    13fc:	a6 2b       	or	r26, r22
    13fe:	b7 2b       	or	r27, r23
    1400:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1404:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1408:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    140c:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1410:	b0 9b       	sbis	0x16, 0	; 22
    1412:	1b c0       	rjmp	.+54     	; 0x144a <__vector_19+0x98>
    1414:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1418:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    141c:	c9 01       	movw	r24, r18
    141e:	01 96       	adiw	r24, 0x01	; 1
    1420:	09 2e       	mov	r0, r25
    1422:	00 0c       	add	r0, r0
    1424:	aa 0b       	sbc	r26, r26
    1426:	bb 0b       	sbc	r27, r27
    1428:	dc 01       	movw	r26, r24
    142a:	99 27       	eor	r25, r25
    142c:	88 27       	eor	r24, r24
    142e:	60 e0       	ldi	r22, 0x00	; 0
    1430:	70 e0       	ldi	r23, 0x00	; 0
    1432:	84 2b       	or	r24, r20
    1434:	95 2b       	or	r25, r21
    1436:	a6 2b       	or	r26, r22
    1438:	b7 2b       	or	r27, r23
    143a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    143e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1442:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1446:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    144a:	e0 91 4a 02 	lds	r30, 0x024A	; 0x80024a <mtable+0x1c>
    144e:	f0 91 4b 02 	lds	r31, 0x024B	; 0x80024b <mtable+0x1d>
    1452:	30 97       	sbiw	r30, 0x00	; 0
    1454:	39 f0       	breq	.+14     	; 0x1464 <__vector_19+0xb2>
    1456:	6e e0       	ldi	r22, 0x0E	; 14
    1458:	70 e0       	ldi	r23, 0x00	; 0
    145a:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <otable+0x1c>
    145e:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <otable+0x1d>
    1462:	09 95       	icall
    1464:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    1468:	ff 91       	pop	r31
    146a:	ef 91       	pop	r30
    146c:	bf 91       	pop	r27
    146e:	af 91       	pop	r26
    1470:	9f 91       	pop	r25
    1472:	8f 91       	pop	r24
    1474:	7f 91       	pop	r23
    1476:	6f 91       	pop	r22
    1478:	5f 91       	pop	r21
    147a:	4f 91       	pop	r20
    147c:	3f 91       	pop	r19
    147e:	2f 91       	pop	r18
    1480:	0f 90       	pop	r0
    1482:	0f be       	out	0x3f, r0	; 63
    1484:	0f 90       	pop	r0
    1486:	1f 90       	pop	r1
    1488:	18 95       	reti

0000148a <__vector_20>:
    148a:	1f 92       	push	r1
    148c:	0f 92       	push	r0
    148e:	0f b6       	in	r0, 0x3f	; 63
    1490:	0f 92       	push	r0
    1492:	11 24       	eor	r1, r1
    1494:	2f 93       	push	r18
    1496:	3f 93       	push	r19
    1498:	4f 93       	push	r20
    149a:	5f 93       	push	r21
    149c:	6f 93       	push	r22
    149e:	7f 93       	push	r23
    14a0:	8f 93       	push	r24
    14a2:	9f 93       	push	r25
    14a4:	af 93       	push	r26
    14a6:	bf 93       	push	r27
    14a8:	ef 93       	push	r30
    14aa:	ff 93       	push	r31
    14ac:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    14b0:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    14b4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    14b8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    14bc:	c9 01       	movw	r24, r18
    14be:	03 2e       	mov	r0, r19
    14c0:	00 0c       	add	r0, r0
    14c2:	aa 0b       	sbc	r26, r26
    14c4:	bb 0b       	sbc	r27, r27
    14c6:	dc 01       	movw	r26, r24
    14c8:	99 27       	eor	r25, r25
    14ca:	88 27       	eor	r24, r24
    14cc:	60 e0       	ldi	r22, 0x00	; 0
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	84 2b       	or	r24, r20
    14d2:	95 2b       	or	r25, r21
    14d4:	a6 2b       	or	r26, r22
    14d6:	b7 2b       	or	r27, r23
    14d8:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    14dc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    14e0:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    14e4:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    14e8:	b0 9b       	sbis	0x16, 0	; 22
    14ea:	1b c0       	rjmp	.+54     	; 0x1522 <__vector_20+0x98>
    14ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    14f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    14f4:	c9 01       	movw	r24, r18
    14f6:	01 96       	adiw	r24, 0x01	; 1
    14f8:	09 2e       	mov	r0, r25
    14fa:	00 0c       	add	r0, r0
    14fc:	aa 0b       	sbc	r26, r26
    14fe:	bb 0b       	sbc	r27, r27
    1500:	dc 01       	movw	r26, r24
    1502:	99 27       	eor	r25, r25
    1504:	88 27       	eor	r24, r24
    1506:	60 e0       	ldi	r22, 0x00	; 0
    1508:	70 e0       	ldi	r23, 0x00	; 0
    150a:	84 2b       	or	r24, r20
    150c:	95 2b       	or	r25, r21
    150e:	a6 2b       	or	r26, r22
    1510:	b7 2b       	or	r27, r23
    1512:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    1516:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    151a:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    151e:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1522:	e0 91 4c 02 	lds	r30, 0x024C	; 0x80024c <mtable+0x1e>
    1526:	f0 91 4d 02 	lds	r31, 0x024D	; 0x80024d <mtable+0x1f>
    152a:	30 97       	sbiw	r30, 0x00	; 0
    152c:	39 f0       	breq	.+14     	; 0x153c <__vector_20+0xb2>
    152e:	6f e0       	ldi	r22, 0x0F	; 15
    1530:	70 e0       	ldi	r23, 0x00	; 0
    1532:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <otable+0x1e>
    1536:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <otable+0x1f>
    153a:	09 95       	icall
    153c:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    1540:	ff 91       	pop	r31
    1542:	ef 91       	pop	r30
    1544:	bf 91       	pop	r27
    1546:	af 91       	pop	r26
    1548:	9f 91       	pop	r25
    154a:	8f 91       	pop	r24
    154c:	7f 91       	pop	r23
    154e:	6f 91       	pop	r22
    1550:	5f 91       	pop	r21
    1552:	4f 91       	pop	r20
    1554:	3f 91       	pop	r19
    1556:	2f 91       	pop	r18
    1558:	0f 90       	pop	r0
    155a:	0f be       	out	0x3f, r0	; 63
    155c:	0f 90       	pop	r0
    155e:	1f 90       	pop	r1
    1560:	18 95       	reti

00001562 <__vector_21>:
    1562:	1f 92       	push	r1
    1564:	0f 92       	push	r0
    1566:	0f b6       	in	r0, 0x3f	; 63
    1568:	0f 92       	push	r0
    156a:	11 24       	eor	r1, r1
    156c:	2f 93       	push	r18
    156e:	3f 93       	push	r19
    1570:	4f 93       	push	r20
    1572:	5f 93       	push	r21
    1574:	6f 93       	push	r22
    1576:	7f 93       	push	r23
    1578:	8f 93       	push	r24
    157a:	9f 93       	push	r25
    157c:	af 93       	push	r26
    157e:	bf 93       	push	r27
    1580:	ef 93       	push	r30
    1582:	ff 93       	push	r31
    1584:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1588:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    158c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1590:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1594:	c9 01       	movw	r24, r18
    1596:	03 2e       	mov	r0, r19
    1598:	00 0c       	add	r0, r0
    159a:	aa 0b       	sbc	r26, r26
    159c:	bb 0b       	sbc	r27, r27
    159e:	dc 01       	movw	r26, r24
    15a0:	99 27       	eor	r25, r25
    15a2:	88 27       	eor	r24, r24
    15a4:	60 e0       	ldi	r22, 0x00	; 0
    15a6:	70 e0       	ldi	r23, 0x00	; 0
    15a8:	84 2b       	or	r24, r20
    15aa:	95 2b       	or	r25, r21
    15ac:	a6 2b       	or	r26, r22
    15ae:	b7 2b       	or	r27, r23
    15b0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    15b4:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    15b8:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    15bc:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    15c0:	b0 9b       	sbis	0x16, 0	; 22
    15c2:	1b c0       	rjmp	.+54     	; 0x15fa <__vector_21+0x98>
    15c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    15c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    15cc:	c9 01       	movw	r24, r18
    15ce:	01 96       	adiw	r24, 0x01	; 1
    15d0:	09 2e       	mov	r0, r25
    15d2:	00 0c       	add	r0, r0
    15d4:	aa 0b       	sbc	r26, r26
    15d6:	bb 0b       	sbc	r27, r27
    15d8:	dc 01       	movw	r26, r24
    15da:	99 27       	eor	r25, r25
    15dc:	88 27       	eor	r24, r24
    15de:	60 e0       	ldi	r22, 0x00	; 0
    15e0:	70 e0       	ldi	r23, 0x00	; 0
    15e2:	84 2b       	or	r24, r20
    15e4:	95 2b       	or	r25, r21
    15e6:	a6 2b       	or	r26, r22
    15e8:	b7 2b       	or	r27, r23
    15ea:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    15ee:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    15f2:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    15f6:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    15fa:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <mtable+0x20>
    15fe:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <mtable+0x21>
    1602:	30 97       	sbiw	r30, 0x00	; 0
    1604:	39 f0       	breq	.+14     	; 0x1614 <__vector_21+0xb2>
    1606:	60 e1       	ldi	r22, 0x10	; 16
    1608:	70 e0       	ldi	r23, 0x00	; 0
    160a:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <otable+0x20>
    160e:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <otable+0x21>
    1612:	09 95       	icall
    1614:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    1618:	ff 91       	pop	r31
    161a:	ef 91       	pop	r30
    161c:	bf 91       	pop	r27
    161e:	af 91       	pop	r26
    1620:	9f 91       	pop	r25
    1622:	8f 91       	pop	r24
    1624:	7f 91       	pop	r23
    1626:	6f 91       	pop	r22
    1628:	5f 91       	pop	r21
    162a:	4f 91       	pop	r20
    162c:	3f 91       	pop	r19
    162e:	2f 91       	pop	r18
    1630:	0f 90       	pop	r0
    1632:	0f be       	out	0x3f, r0	; 63
    1634:	0f 90       	pop	r0
    1636:	1f 90       	pop	r1
    1638:	18 95       	reti

0000163a <__vector_22>:
    163a:	1f 92       	push	r1
    163c:	0f 92       	push	r0
    163e:	0f b6       	in	r0, 0x3f	; 63
    1640:	0f 92       	push	r0
    1642:	11 24       	eor	r1, r1
    1644:	2f 93       	push	r18
    1646:	3f 93       	push	r19
    1648:	4f 93       	push	r20
    164a:	5f 93       	push	r21
    164c:	6f 93       	push	r22
    164e:	7f 93       	push	r23
    1650:	8f 93       	push	r24
    1652:	9f 93       	push	r25
    1654:	af 93       	push	r26
    1656:	bf 93       	push	r27
    1658:	ef 93       	push	r30
    165a:	ff 93       	push	r31
    165c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1660:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1664:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1668:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    166c:	c9 01       	movw	r24, r18
    166e:	03 2e       	mov	r0, r19
    1670:	00 0c       	add	r0, r0
    1672:	aa 0b       	sbc	r26, r26
    1674:	bb 0b       	sbc	r27, r27
    1676:	dc 01       	movw	r26, r24
    1678:	99 27       	eor	r25, r25
    167a:	88 27       	eor	r24, r24
    167c:	60 e0       	ldi	r22, 0x00	; 0
    167e:	70 e0       	ldi	r23, 0x00	; 0
    1680:	84 2b       	or	r24, r20
    1682:	95 2b       	or	r25, r21
    1684:	a6 2b       	or	r26, r22
    1686:	b7 2b       	or	r27, r23
    1688:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    168c:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    1690:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    1694:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    1698:	b0 9b       	sbis	0x16, 0	; 22
    169a:	1b c0       	rjmp	.+54     	; 0x16d2 <__vector_22+0x98>
    169c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    16a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    16a4:	c9 01       	movw	r24, r18
    16a6:	01 96       	adiw	r24, 0x01	; 1
    16a8:	09 2e       	mov	r0, r25
    16aa:	00 0c       	add	r0, r0
    16ac:	aa 0b       	sbc	r26, r26
    16ae:	bb 0b       	sbc	r27, r27
    16b0:	dc 01       	movw	r26, r24
    16b2:	99 27       	eor	r25, r25
    16b4:	88 27       	eor	r24, r24
    16b6:	60 e0       	ldi	r22, 0x00	; 0
    16b8:	70 e0       	ldi	r23, 0x00	; 0
    16ba:	84 2b       	or	r24, r20
    16bc:	95 2b       	or	r25, r21
    16be:	a6 2b       	or	r26, r22
    16c0:	b7 2b       	or	r27, r23
    16c2:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <timestamp>
    16c6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <timestamp+0x1>
    16ca:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <timestamp+0x2>
    16ce:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <timestamp+0x3>
    16d2:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <mtable+0x22>
    16d6:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <mtable+0x23>
    16da:	30 97       	sbiw	r30, 0x00	; 0
    16dc:	39 f0       	breq	.+14     	; 0x16ec <__vector_22+0xb2>
    16de:	61 e1       	ldi	r22, 0x11	; 17
    16e0:	70 e0       	ldi	r23, 0x00	; 0
    16e2:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <otable+0x22>
    16e6:	90 91 b9 01 	lds	r25, 0x01B9	; 0x8001b9 <otable+0x23>
    16ea:	09 95       	icall
    16ec:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    16f0:	ff 91       	pop	r31
    16f2:	ef 91       	pop	r30
    16f4:	bf 91       	pop	r27
    16f6:	af 91       	pop	r26
    16f8:	9f 91       	pop	r25
    16fa:	8f 91       	pop	r24
    16fc:	7f 91       	pop	r23
    16fe:	6f 91       	pop	r22
    1700:	5f 91       	pop	r21
    1702:	4f 91       	pop	r20
    1704:	3f 91       	pop	r19
    1706:	2f 91       	pop	r18
    1708:	0f 90       	pop	r0
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	0f 90       	pop	r0
    170e:	1f 90       	pop	r1
    1710:	18 95       	reti

00001712 <enqueueByDeadline>:
    1712:	ef 92       	push	r14
    1714:	ff 92       	push	r15
    1716:	0f 93       	push	r16
    1718:	1f 93       	push	r17
    171a:	cf 93       	push	r28
    171c:	df 93       	push	r29
    171e:	7b 01       	movw	r14, r22
    1720:	eb 01       	movw	r28, r22
    1722:	a8 81       	ld	r26, Y
    1724:	b9 81       	ldd	r27, Y+1	; 0x01
    1726:	10 97       	sbiw	r26, 0x00	; 0
    1728:	61 f1       	breq	.+88     	; 0x1782 <enqueueByDeadline+0x70>
    172a:	fc 01       	movw	r30, r24
    172c:	06 81       	ldd	r16, Z+6	; 0x06
    172e:	17 81       	ldd	r17, Z+7	; 0x07
    1730:	20 85       	ldd	r18, Z+8	; 0x08
    1732:	31 85       	ldd	r19, Z+9	; 0x09
    1734:	16 96       	adiw	r26, 0x06	; 6
    1736:	4d 91       	ld	r20, X+
    1738:	5d 91       	ld	r21, X+
    173a:	6d 91       	ld	r22, X+
    173c:	7c 91       	ld	r23, X
    173e:	19 97       	sbiw	r26, 0x09	; 9
    1740:	04 17       	cp	r16, r20
    1742:	15 07       	cpc	r17, r21
    1744:	26 07       	cpc	r18, r22
    1746:	37 07       	cpc	r19, r23
    1748:	14 f4       	brge	.+4      	; 0x174e <enqueueByDeadline+0x3c>
    174a:	1b c0       	rjmp	.+54     	; 0x1782 <enqueueByDeadline+0x70>
    174c:	df 01       	movw	r26, r30
    174e:	ed 91       	ld	r30, X+
    1750:	fc 91       	ld	r31, X
    1752:	11 97       	sbiw	r26, 0x01	; 1
    1754:	30 97       	sbiw	r30, 0x00	; 0
    1756:	49 f0       	breq	.+18     	; 0x176a <enqueueByDeadline+0x58>
    1758:	46 81       	ldd	r20, Z+6	; 0x06
    175a:	57 81       	ldd	r21, Z+7	; 0x07
    175c:	60 85       	ldd	r22, Z+8	; 0x08
    175e:	71 85       	ldd	r23, Z+9	; 0x09
    1760:	04 17       	cp	r16, r20
    1762:	15 07       	cpc	r17, r21
    1764:	26 07       	cpc	r18, r22
    1766:	37 07       	cpc	r19, r23
    1768:	8c f7       	brge	.-30     	; 0x174c <enqueueByDeadline+0x3a>
    176a:	ec 01       	movw	r28, r24
    176c:	f9 83       	std	Y+1, r31	; 0x01
    176e:	e8 83       	st	Y, r30
    1770:	10 97       	sbiw	r26, 0x00	; 0
    1772:	21 f4       	brne	.+8      	; 0x177c <enqueueByDeadline+0x6a>
    1774:	f7 01       	movw	r30, r14
    1776:	91 83       	std	Z+1, r25	; 0x01
    1778:	80 83       	st	Z, r24
    177a:	07 c0       	rjmp	.+14     	; 0x178a <enqueueByDeadline+0x78>
    177c:	8d 93       	st	X+, r24
    177e:	9c 93       	st	X, r25
    1780:	04 c0       	rjmp	.+8      	; 0x178a <enqueueByDeadline+0x78>
    1782:	ec 01       	movw	r28, r24
    1784:	b9 83       	std	Y+1, r27	; 0x01
    1786:	a8 83       	st	Y, r26
    1788:	f5 cf       	rjmp	.-22     	; 0x1774 <enqueueByDeadline+0x62>
    178a:	df 91       	pop	r29
    178c:	cf 91       	pop	r28
    178e:	1f 91       	pop	r17
    1790:	0f 91       	pop	r16
    1792:	ff 90       	pop	r15
    1794:	ef 90       	pop	r14
    1796:	08 95       	ret

00001798 <enqueueByBaseline>:
    1798:	ef 92       	push	r14
    179a:	ff 92       	push	r15
    179c:	0f 93       	push	r16
    179e:	1f 93       	push	r17
    17a0:	cf 93       	push	r28
    17a2:	df 93       	push	r29
    17a4:	7b 01       	movw	r14, r22
    17a6:	eb 01       	movw	r28, r22
    17a8:	a8 81       	ld	r26, Y
    17aa:	b9 81       	ldd	r27, Y+1	; 0x01
    17ac:	10 97       	sbiw	r26, 0x00	; 0
    17ae:	61 f1       	breq	.+88     	; 0x1808 <enqueueByBaseline+0x70>
    17b0:	fc 01       	movw	r30, r24
    17b2:	02 81       	ldd	r16, Z+2	; 0x02
    17b4:	13 81       	ldd	r17, Z+3	; 0x03
    17b6:	24 81       	ldd	r18, Z+4	; 0x04
    17b8:	35 81       	ldd	r19, Z+5	; 0x05
    17ba:	12 96       	adiw	r26, 0x02	; 2
    17bc:	4d 91       	ld	r20, X+
    17be:	5d 91       	ld	r21, X+
    17c0:	6d 91       	ld	r22, X+
    17c2:	7c 91       	ld	r23, X
    17c4:	15 97       	sbiw	r26, 0x05	; 5
    17c6:	04 17       	cp	r16, r20
    17c8:	15 07       	cpc	r17, r21
    17ca:	26 07       	cpc	r18, r22
    17cc:	37 07       	cpc	r19, r23
    17ce:	14 f4       	brge	.+4      	; 0x17d4 <enqueueByBaseline+0x3c>
    17d0:	1b c0       	rjmp	.+54     	; 0x1808 <enqueueByBaseline+0x70>
    17d2:	df 01       	movw	r26, r30
    17d4:	ed 91       	ld	r30, X+
    17d6:	fc 91       	ld	r31, X
    17d8:	11 97       	sbiw	r26, 0x01	; 1
    17da:	30 97       	sbiw	r30, 0x00	; 0
    17dc:	49 f0       	breq	.+18     	; 0x17f0 <enqueueByBaseline+0x58>
    17de:	42 81       	ldd	r20, Z+2	; 0x02
    17e0:	53 81       	ldd	r21, Z+3	; 0x03
    17e2:	64 81       	ldd	r22, Z+4	; 0x04
    17e4:	75 81       	ldd	r23, Z+5	; 0x05
    17e6:	04 17       	cp	r16, r20
    17e8:	15 07       	cpc	r17, r21
    17ea:	26 07       	cpc	r18, r22
    17ec:	37 07       	cpc	r19, r23
    17ee:	8c f7       	brge	.-30     	; 0x17d2 <enqueueByBaseline+0x3a>
    17f0:	ec 01       	movw	r28, r24
    17f2:	f9 83       	std	Y+1, r31	; 0x01
    17f4:	e8 83       	st	Y, r30
    17f6:	10 97       	sbiw	r26, 0x00	; 0
    17f8:	21 f4       	brne	.+8      	; 0x1802 <enqueueByBaseline+0x6a>
    17fa:	f7 01       	movw	r30, r14
    17fc:	91 83       	std	Z+1, r25	; 0x01
    17fe:	80 83       	st	Z, r24
    1800:	07 c0       	rjmp	.+14     	; 0x1810 <enqueueByBaseline+0x78>
    1802:	8d 93       	st	X+, r24
    1804:	9c 93       	st	X, r25
    1806:	04 c0       	rjmp	.+8      	; 0x1810 <enqueueByBaseline+0x78>
    1808:	ec 01       	movw	r28, r24
    180a:	b9 83       	std	Y+1, r27	; 0x01
    180c:	a8 83       	st	Y, r26
    180e:	f5 cf       	rjmp	.-22     	; 0x17fa <enqueueByBaseline+0x62>
    1810:	df 91       	pop	r29
    1812:	cf 91       	pop	r28
    1814:	1f 91       	pop	r17
    1816:	0f 91       	pop	r16
    1818:	ff 90       	pop	r15
    181a:	ef 90       	pop	r14
    181c:	08 95       	ret

0000181e <dequeue>:
    181e:	dc 01       	movw	r26, r24
    1820:	ed 91       	ld	r30, X+
    1822:	fc 91       	ld	r31, X
    1824:	11 97       	sbiw	r26, 0x01	; 1
    1826:	30 97       	sbiw	r30, 0x00	; 0
    1828:	59 f4       	brne	.+22     	; 0x1840 <dequeue+0x22>
    182a:	8f ef       	ldi	r24, 0xFF	; 255
    182c:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__DATA_REGION_ORIGIN__+0x8c>
    1830:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__DATA_REGION_ORIGIN__+0x8d>
    1834:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__DATA_REGION_ORIGIN__+0x8e>
    1838:	81 e0       	ldi	r24, 0x01	; 1
    183a:	83 bf       	out	0x33, r24	; 51
    183c:	88 95       	sleep
    183e:	fd cf       	rjmp	.-6      	; 0x183a <dequeue+0x1c>
    1840:	20 81       	ld	r18, Z
    1842:	31 81       	ldd	r19, Z+1	; 0x01
    1844:	2d 93       	st	X+, r18
    1846:	3c 93       	st	X, r19
    1848:	cf 01       	movw	r24, r30
    184a:	08 95       	ret

0000184c <__vector_9>:
    184c:	1f 92       	push	r1
    184e:	0f 92       	push	r0
    1850:	0f b6       	in	r0, 0x3f	; 63
    1852:	0f 92       	push	r0
    1854:	11 24       	eor	r1, r1
    1856:	2f 93       	push	r18
    1858:	3f 93       	push	r19
    185a:	4f 93       	push	r20
    185c:	5f 93       	push	r21
    185e:	6f 93       	push	r22
    1860:	7f 93       	push	r23
    1862:	8f 93       	push	r24
    1864:	9f 93       	push	r25
    1866:	ef 93       	push	r30
    1868:	ff 93       	push	r31
    186a:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <overflows>
    186e:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <overflows+0x1>
    1872:	01 96       	adiw	r24, 0x01	; 1
    1874:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <overflows+0x1>
    1878:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <overflows>
    187c:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    1880:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    1884:	30 97       	sbiw	r30, 0x00	; 0
    1886:	01 f1       	breq	.+64     	; 0x18c8 <__vector_9+0x7c>
    1888:	42 81       	ldd	r20, Z+2	; 0x02
    188a:	53 81       	ldd	r21, Z+3	; 0x03
    188c:	64 81       	ldd	r22, Z+4	; 0x04
    188e:	75 81       	ldd	r23, Z+5	; 0x05
    1890:	86 17       	cp	r24, r22
    1892:	97 07       	cpc	r25, r23
    1894:	c9 f4       	brne	.+50     	; 0x18c8 <__vector_9+0x7c>
    1896:	ca 01       	movw	r24, r20
    1898:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    189c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    18a0:	42 1b       	sub	r20, r18
    18a2:	53 0b       	sbc	r21, r19
    18a4:	41 30       	cpi	r20, 0x01	; 1
    18a6:	51 05       	cpc	r21, r1
    18a8:	29 f4       	brne	.+10     	; 0x18b4 <__vector_9+0x68>
    18aa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    18ae:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    18b2:	01 96       	adiw	r24, 0x01	; 1
    18b4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    18b8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    18bc:	ef e6       	ldi	r30, 0x6F	; 111
    18be:	f0 e0       	ldi	r31, 0x00	; 0
    18c0:	80 81       	ld	r24, Z
    18c2:	82 60       	ori	r24, 0x02	; 2
    18c4:	80 83       	st	Z, r24
    18c6:	05 c0       	rjmp	.+10     	; 0x18d2 <__vector_9+0x86>
    18c8:	ef e6       	ldi	r30, 0x6F	; 111
    18ca:	f0 e0       	ldi	r31, 0x00	; 0
    18cc:	80 81       	ld	r24, Z
    18ce:	8d 7f       	andi	r24, 0xFD	; 253
    18d0:	80 83       	st	Z, r24
    18d2:	ff 91       	pop	r31
    18d4:	ef 91       	pop	r30
    18d6:	9f 91       	pop	r25
    18d8:	8f 91       	pop	r24
    18da:	7f 91       	pop	r23
    18dc:	6f 91       	pop	r22
    18de:	5f 91       	pop	r21
    18e0:	4f 91       	pop	r20
    18e2:	3f 91       	pop	r19
    18e4:	2f 91       	pop	r18
    18e6:	0f 90       	pop	r0
    18e8:	0f be       	out	0x3f, r0	; 63
    18ea:	0f 90       	pop	r0
    18ec:	1f 90       	pop	r1
    18ee:	18 95       	reti

000018f0 <__vector_7>:
    18f0:	1f 92       	push	r1
    18f2:	0f 92       	push	r0
    18f4:	0f b6       	in	r0, 0x3f	; 63
    18f6:	0f 92       	push	r0
    18f8:	11 24       	eor	r1, r1
    18fa:	cf 92       	push	r12
    18fc:	df 92       	push	r13
    18fe:	ef 92       	push	r14
    1900:	ff 92       	push	r15
    1902:	2f 93       	push	r18
    1904:	3f 93       	push	r19
    1906:	4f 93       	push	r20
    1908:	5f 93       	push	r21
    190a:	6f 93       	push	r22
    190c:	7f 93       	push	r23
    190e:	8f 93       	push	r24
    1910:	9f 93       	push	r25
    1912:	af 93       	push	r26
    1914:	bf 93       	push	r27
    1916:	ef 93       	push	r30
    1918:	ff 93       	push	r31
    191a:	c0 90 8c 01 	lds	r12, 0x018C	; 0x80018c <overflows>
    191e:	d0 90 8d 01 	lds	r13, 0x018D	; 0x80018d <overflows+0x1>
    1922:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1926:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    192a:	b0 99       	sbic	0x16, 0	; 22
    192c:	0f c0       	rjmp	.+30     	; 0x194c <__vector_7+0x5c>
    192e:	0d 2c       	mov	r0, r13
    1930:	00 0c       	add	r0, r0
    1932:	ee 08       	sbc	r14, r14
    1934:	ff 08       	sbc	r15, r15
    1936:	d6 01       	movw	r26, r12
    1938:	99 27       	eor	r25, r25
    193a:	88 27       	eor	r24, r24
    193c:	69 01       	movw	r12, r18
    193e:	e1 2c       	mov	r14, r1
    1940:	f1 2c       	mov	r15, r1
    1942:	c8 2a       	or	r12, r24
    1944:	d9 2a       	or	r13, r25
    1946:	ea 2a       	or	r14, r26
    1948:	fb 2a       	or	r15, r27
    194a:	15 c0       	rjmp	.+42     	; 0x1976 <__vector_7+0x86>
    194c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1950:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1954:	8f ef       	ldi	r24, 0xFF	; 255
    1956:	c8 1a       	sub	r12, r24
    1958:	d8 0a       	sbc	r13, r24
    195a:	0d 2c       	mov	r0, r13
    195c:	00 0c       	add	r0, r0
    195e:	ee 08       	sbc	r14, r14
    1960:	ff 08       	sbc	r15, r15
    1962:	d6 01       	movw	r26, r12
    1964:	99 27       	eor	r25, r25
    1966:	88 27       	eor	r24, r24
    1968:	69 01       	movw	r12, r18
    196a:	e1 2c       	mov	r14, r1
    196c:	f1 2c       	mov	r15, r1
    196e:	c8 2a       	or	r12, r24
    1970:	d9 2a       	or	r13, r25
    1972:	ea 2a       	or	r14, r26
    1974:	fb 2a       	or	r15, r27
    1976:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    197a:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    197e:	30 97       	sbiw	r30, 0x00	; 0
    1980:	09 f4       	brne	.+2      	; 0x1984 <__vector_7+0x94>
    1982:	42 c0       	rjmp	.+132    	; 0x1a08 <__vector_7+0x118>
    1984:	82 81       	ldd	r24, Z+2	; 0x02
    1986:	93 81       	ldd	r25, Z+3	; 0x03
    1988:	a4 81       	ldd	r26, Z+4	; 0x04
    198a:	b5 81       	ldd	r27, Z+5	; 0x05
    198c:	8c 19       	sub	r24, r12
    198e:	9d 09       	sbc	r25, r13
    1990:	ae 09       	sbc	r26, r14
    1992:	bf 09       	sbc	r27, r15
    1994:	18 16       	cp	r1, r24
    1996:	19 06       	cpc	r1, r25
    1998:	1a 06       	cpc	r1, r26
    199a:	1b 06       	cpc	r1, r27
    199c:	ec f1       	brlt	.+122    	; 0x1a18 <__vector_7+0x128>
    199e:	82 e9       	ldi	r24, 0x92	; 146
    19a0:	91 e0       	ldi	r25, 0x01	; 1
    19a2:	0e 94 0f 0c 	call	0x181e	; 0x181e <dequeue>
    19a6:	64 e9       	ldi	r22, 0x94	; 148
    19a8:	71 e0       	ldi	r23, 0x01	; 1
    19aa:	0e 94 89 0b 	call	0x1712	; 0x1712 <enqueueByDeadline>
    19ae:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    19b2:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    19b6:	30 97       	sbiw	r30, 0x00	; 0
    19b8:	39 f1       	breq	.+78     	; 0x1a08 <__vector_7+0x118>
    19ba:	82 81       	ldd	r24, Z+2	; 0x02
    19bc:	93 81       	ldd	r25, Z+3	; 0x03
    19be:	a4 81       	ldd	r26, Z+4	; 0x04
    19c0:	b5 81       	ldd	r27, Z+5	; 0x05
    19c2:	8c 19       	sub	r24, r12
    19c4:	9d 09       	sbc	r25, r13
    19c6:	ae 09       	sbc	r26, r14
    19c8:	bf 09       	sbc	r27, r15
    19ca:	18 16       	cp	r1, r24
    19cc:	19 06       	cpc	r1, r25
    19ce:	1a 06       	cpc	r1, r26
    19d0:	1b 06       	cpc	r1, r27
    19d2:	2c f7       	brge	.-54     	; 0x199e <__vector_7+0xae>
    19d4:	21 c0       	rjmp	.+66     	; 0x1a18 <__vector_7+0x128>
    19d6:	9c 01       	movw	r18, r24
    19d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    19dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    19e0:	84 1b       	sub	r24, r20
    19e2:	95 0b       	sbc	r25, r21
    19e4:	01 97       	sbiw	r24, 0x01	; 1
    19e6:	31 f4       	brne	.+12     	; 0x19f4 <__vector_7+0x104>
    19e8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    19ec:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    19f0:	2f 5f       	subi	r18, 0xFF	; 255
    19f2:	3f 4f       	sbci	r19, 0xFF	; 255
    19f4:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    19f8:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    19fc:	ef e6       	ldi	r30, 0x6F	; 111
    19fe:	f0 e0       	ldi	r31, 0x00	; 0
    1a00:	80 81       	ld	r24, Z
    1a02:	82 60       	ori	r24, 0x02	; 2
    1a04:	80 83       	st	Z, r24
    1a06:	05 c0       	rjmp	.+10     	; 0x1a12 <__vector_7+0x122>
    1a08:	ef e6       	ldi	r30, 0x6F	; 111
    1a0a:	f0 e0       	ldi	r31, 0x00	; 0
    1a0c:	80 81       	ld	r24, Z
    1a0e:	8d 7f       	andi	r24, 0xFD	; 253
    1a10:	80 83       	st	Z, r24
    1a12:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    1a16:	0c c0       	rjmp	.+24     	; 0x1a30 <__vector_7+0x140>
    1a18:	82 81       	ldd	r24, Z+2	; 0x02
    1a1a:	93 81       	ldd	r25, Z+3	; 0x03
    1a1c:	a4 81       	ldd	r26, Z+4	; 0x04
    1a1e:	b5 81       	ldd	r27, Z+5	; 0x05
    1a20:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1a24:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1a28:	2a 17       	cp	r18, r26
    1a2a:	3b 07       	cpc	r19, r27
    1a2c:	69 f7       	brne	.-38     	; 0x1a08 <__vector_7+0x118>
    1a2e:	d3 cf       	rjmp	.-90     	; 0x19d6 <__vector_7+0xe6>
    1a30:	ff 91       	pop	r31
    1a32:	ef 91       	pop	r30
    1a34:	bf 91       	pop	r27
    1a36:	af 91       	pop	r26
    1a38:	9f 91       	pop	r25
    1a3a:	8f 91       	pop	r24
    1a3c:	7f 91       	pop	r23
    1a3e:	6f 91       	pop	r22
    1a40:	5f 91       	pop	r21
    1a42:	4f 91       	pop	r20
    1a44:	3f 91       	pop	r19
    1a46:	2f 91       	pop	r18
    1a48:	ff 90       	pop	r15
    1a4a:	ef 90       	pop	r14
    1a4c:	df 90       	pop	r13
    1a4e:	cf 90       	pop	r12
    1a50:	0f 90       	pop	r0
    1a52:	0f be       	out	0x3f, r0	; 63
    1a54:	0f 90       	pop	r0
    1a56:	1f 90       	pop	r1
    1a58:	18 95       	reti

00001a5a <async>:
    1a5a:	3f 92       	push	r3
    1a5c:	4f 92       	push	r4
    1a5e:	5f 92       	push	r5
    1a60:	6f 92       	push	r6
    1a62:	7f 92       	push	r7
    1a64:	8f 92       	push	r8
    1a66:	9f 92       	push	r9
    1a68:	af 92       	push	r10
    1a6a:	bf 92       	push	r11
    1a6c:	cf 92       	push	r12
    1a6e:	df 92       	push	r13
    1a70:	ef 92       	push	r14
    1a72:	ff 92       	push	r15
    1a74:	0f 93       	push	r16
    1a76:	1f 93       	push	r17
    1a78:	cf 93       	push	r28
    1a7a:	df 93       	push	r29
    1a7c:	2b 01       	movw	r4, r22
    1a7e:	3c 01       	movw	r6, r24
    1a80:	49 01       	movw	r8, r18
    1a82:	5a 01       	movw	r10, r20
    1a84:	8f b7       	in	r24, 0x3f	; 63
    1a86:	80 78       	andi	r24, 0x80	; 128
    1a88:	38 2e       	mov	r3, r24
    1a8a:	f8 94       	cli
    1a8c:	82 e8       	ldi	r24, 0x82	; 130
    1a8e:	91 e0       	ldi	r25, 0x01	; 1
    1a90:	0e 94 0f 0c 	call	0x181e	; 0x181e <dequeue>
    1a94:	ec 01       	movw	r28, r24
    1a96:	1b 87       	std	Y+11, r17	; 0x0b
    1a98:	0a 87       	std	Y+10, r16	; 0x0a
    1a9a:	fd 86       	std	Y+13, r15	; 0x0d
    1a9c:	ec 86       	std	Y+12, r14	; 0x0c
    1a9e:	df 86       	std	Y+15, r13	; 0x0f
    1aa0:	ce 86       	std	Y+14, r12	; 0x0e
    1aa2:	33 20       	and	r3, r3
    1aa4:	61 f0       	breq	.+24     	; 0x1abe <async+0x64>
    1aa6:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <current>
    1aaa:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <current+0x1>
    1aae:	02 80       	ldd	r0, Z+2	; 0x02
    1ab0:	f3 81       	ldd	r31, Z+3	; 0x03
    1ab2:	e0 2d       	mov	r30, r0
    1ab4:	82 81       	ldd	r24, Z+2	; 0x02
    1ab6:	93 81       	ldd	r25, Z+3	; 0x03
    1ab8:	a4 81       	ldd	r26, Z+4	; 0x04
    1aba:	b5 81       	ldd	r27, Z+5	; 0x05
    1abc:	08 c0       	rjmp	.+16     	; 0x1ace <async+0x74>
    1abe:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <timestamp>
    1ac2:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <timestamp+0x1>
    1ac6:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <timestamp+0x2>
    1aca:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <timestamp+0x3>
    1ace:	48 0e       	add	r4, r24
    1ad0:	59 1e       	adc	r5, r25
    1ad2:	6a 1e       	adc	r6, r26
    1ad4:	7b 1e       	adc	r7, r27
    1ad6:	4a 82       	std	Y+2, r4	; 0x02
    1ad8:	5b 82       	std	Y+3, r5	; 0x03
    1ada:	6c 82       	std	Y+4, r6	; 0x04
    1adc:	7d 82       	std	Y+5, r7	; 0x05
    1ade:	18 14       	cp	r1, r8
    1ae0:	19 04       	cpc	r1, r9
    1ae2:	1a 04       	cpc	r1, r10
    1ae4:	1b 04       	cpc	r1, r11
    1ae6:	44 f0       	brlt	.+16     	; 0x1af8 <async+0x9e>
    1ae8:	0f 2e       	mov	r0, r31
    1aea:	88 24       	eor	r8, r8
    1aec:	8a 94       	dec	r8
    1aee:	98 2c       	mov	r9, r8
    1af0:	a8 2c       	mov	r10, r8
    1af2:	ff e7       	ldi	r31, 0x7F	; 127
    1af4:	bf 2e       	mov	r11, r31
    1af6:	f0 2d       	mov	r31, r0
    1af8:	84 0c       	add	r8, r4
    1afa:	95 1c       	adc	r9, r5
    1afc:	a6 1c       	adc	r10, r6
    1afe:	b7 1c       	adc	r11, r7
    1b00:	8e 82       	std	Y+6, r8	; 0x06
    1b02:	9f 82       	std	Y+7, r9	; 0x07
    1b04:	a8 86       	std	Y+8, r10	; 0x08
    1b06:	b9 86       	std	Y+9, r11	; 0x09
    1b08:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <overflows>
    1b0c:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <overflows+0x1>
    1b10:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1b14:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1b18:	b0 99       	sbic	0x16, 0	; 22
    1b1a:	0e c0       	rjmp	.+28     	; 0x1b38 <async+0xde>
    1b1c:	09 2e       	mov	r0, r25
    1b1e:	00 0c       	add	r0, r0
    1b20:	aa 0b       	sbc	r26, r26
    1b22:	bb 0b       	sbc	r27, r27
    1b24:	dc 01       	movw	r26, r24
    1b26:	99 27       	eor	r25, r25
    1b28:	88 27       	eor	r24, r24
    1b2a:	60 e0       	ldi	r22, 0x00	; 0
    1b2c:	70 e0       	ldi	r23, 0x00	; 0
    1b2e:	84 2b       	or	r24, r20
    1b30:	95 2b       	or	r25, r21
    1b32:	a6 2b       	or	r26, r22
    1b34:	b7 2b       	or	r27, r23
    1b36:	13 c0       	rjmp	.+38     	; 0x1b5e <async+0x104>
    1b38:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1b3c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1b40:	01 96       	adiw	r24, 0x01	; 1
    1b42:	09 2e       	mov	r0, r25
    1b44:	00 0c       	add	r0, r0
    1b46:	aa 0b       	sbc	r26, r26
    1b48:	bb 0b       	sbc	r27, r27
    1b4a:	dc 01       	movw	r26, r24
    1b4c:	99 27       	eor	r25, r25
    1b4e:	88 27       	eor	r24, r24
    1b50:	a9 01       	movw	r20, r18
    1b52:	60 e0       	ldi	r22, 0x00	; 0
    1b54:	70 e0       	ldi	r23, 0x00	; 0
    1b56:	84 2b       	or	r24, r20
    1b58:	95 2b       	or	r25, r21
    1b5a:	a6 2b       	or	r26, r22
    1b5c:	b7 2b       	or	r27, r23
    1b5e:	48 1a       	sub	r4, r24
    1b60:	59 0a       	sbc	r5, r25
    1b62:	6a 0a       	sbc	r6, r26
    1b64:	7b 0a       	sbc	r7, r27
    1b66:	14 14       	cp	r1, r4
    1b68:	15 04       	cpc	r1, r5
    1b6a:	16 04       	cpc	r1, r6
    1b6c:	17 04       	cpc	r1, r7
    1b6e:	ac f5       	brge	.+106    	; 0x1bda <async+0x180>
    1b70:	62 e9       	ldi	r22, 0x92	; 146
    1b72:	71 e0       	ldi	r23, 0x01	; 1
    1b74:	ce 01       	movw	r24, r28
    1b76:	0e 94 cc 0b 	call	0x1798	; 0x1798 <enqueueByBaseline>
    1b7a:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <timerQ>
    1b7e:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <timerQ+0x1>
    1b82:	30 97       	sbiw	r30, 0x00	; 0
    1b84:	21 f1       	breq	.+72     	; 0x1bce <async+0x174>
    1b86:	82 81       	ldd	r24, Z+2	; 0x02
    1b88:	93 81       	ldd	r25, Z+3	; 0x03
    1b8a:	a4 81       	ldd	r26, Z+4	; 0x04
    1b8c:	b5 81       	ldd	r27, Z+5	; 0x05
    1b8e:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <overflows>
    1b92:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <overflows+0x1>
    1b96:	2a 17       	cp	r18, r26
    1b98:	3b 07       	cpc	r19, r27
    1b9a:	c9 f4       	brne	.+50     	; 0x1bce <async+0x174>
    1b9c:	9c 01       	movw	r18, r24
    1b9e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1ba2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1ba6:	84 1b       	sub	r24, r20
    1ba8:	95 0b       	sbc	r25, r21
    1baa:	01 97       	sbiw	r24, 0x01	; 1
    1bac:	31 f4       	brne	.+12     	; 0x1bba <async+0x160>
    1bae:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1bb2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1bb6:	2f 5f       	subi	r18, 0xFF	; 255
    1bb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1bba:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1bbe:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1bc2:	ef e6       	ldi	r30, 0x6F	; 111
    1bc4:	f0 e0       	ldi	r31, 0x00	; 0
    1bc6:	80 81       	ld	r24, Z
    1bc8:	82 60       	ori	r24, 0x02	; 2
    1bca:	80 83       	st	Z, r24
    1bcc:	41 c0       	rjmp	.+130    	; 0x1c50 <async+0x1f6>
    1bce:	ef e6       	ldi	r30, 0x6F	; 111
    1bd0:	f0 e0       	ldi	r31, 0x00	; 0
    1bd2:	80 81       	ld	r24, Z
    1bd4:	8d 7f       	andi	r24, 0xFD	; 253
    1bd6:	80 83       	st	Z, r24
    1bd8:	3b c0       	rjmp	.+118    	; 0x1c50 <async+0x1f6>
    1bda:	64 e9       	ldi	r22, 0x94	; 148
    1bdc:	71 e0       	ldi	r23, 0x01	; 1
    1bde:	ce 01       	movw	r24, r28
    1be0:	0e 94 89 0b 	call	0x1712	; 0x1712 <enqueueByDeadline>
    1be4:	33 20       	and	r3, r3
    1be6:	b9 f1       	breq	.+110    	; 0x1c56 <async+0x1fc>
    1be8:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
    1bec:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
    1bf0:	00 97       	sbiw	r24, 0x00	; 0
    1bf2:	81 f1       	breq	.+96     	; 0x1c54 <async+0x1fa>
    1bf4:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <activeStack>
    1bf8:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <activeStack+0x1>
    1bfc:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <msgQ>
    1c00:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <msgQ+0x1>
    1c04:	02 81       	ldd	r16, Z+2	; 0x02
    1c06:	13 81       	ldd	r17, Z+3	; 0x03
    1c08:	d9 01       	movw	r26, r18
    1c0a:	16 96       	adiw	r26, 0x06	; 6
    1c0c:	4d 91       	ld	r20, X+
    1c0e:	5d 91       	ld	r21, X+
    1c10:	6d 91       	ld	r22, X+
    1c12:	7c 91       	ld	r23, X
    1c14:	19 97       	sbiw	r26, 0x09	; 9
    1c16:	d8 01       	movw	r26, r16
    1c18:	16 96       	adiw	r26, 0x06	; 6
    1c1a:	0d 91       	ld	r16, X+
    1c1c:	1d 91       	ld	r17, X+
    1c1e:	2d 91       	ld	r18, X+
    1c20:	3c 91       	ld	r19, X
    1c22:	19 97       	sbiw	r26, 0x09	; 9
    1c24:	40 1b       	sub	r20, r16
    1c26:	51 0b       	sbc	r21, r17
    1c28:	62 0b       	sbc	r22, r18
    1c2a:	73 0b       	sbc	r23, r19
    1c2c:	9a f4       	brpl	.+38     	; 0x1c54 <async+0x1fa>
    1c2e:	dc 01       	movw	r26, r24
    1c30:	2d 91       	ld	r18, X+
    1c32:	3c 91       	ld	r19, X
    1c34:	11 97       	sbiw	r26, 0x01	; 1
    1c36:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <threadPool+0x1>
    1c3a:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <threadPool>
    1c3e:	ed 93       	st	X+, r30
    1c40:	fc 93       	st	X, r31
    1c42:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <activeStack+0x1>
    1c46:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <activeStack>
    1c4a:	0e 94 96 03 	call	0x72c	; 0x72c <dispatch>
    1c4e:	02 c0       	rjmp	.+4      	; 0x1c54 <async+0x1fa>
    1c50:	33 20       	and	r3, r3
    1c52:	09 f0       	breq	.+2      	; 0x1c56 <async+0x1fc>
    1c54:	78 94       	sei
    1c56:	ce 01       	movw	r24, r28
    1c58:	df 91       	pop	r29
    1c5a:	cf 91       	pop	r28
    1c5c:	1f 91       	pop	r17
    1c5e:	0f 91       	pop	r16
    1c60:	ff 90       	pop	r15
    1c62:	ef 90       	pop	r14
    1c64:	df 90       	pop	r13
    1c66:	cf 90       	pop	r12
    1c68:	bf 90       	pop	r11
    1c6a:	af 90       	pop	r10
    1c6c:	9f 90       	pop	r9
    1c6e:	8f 90       	pop	r8
    1c70:	7f 90       	pop	r7
    1c72:	6f 90       	pop	r6
    1c74:	5f 90       	pop	r5
    1c76:	4f 90       	pop	r4
    1c78:	3f 90       	pop	r3
    1c7a:	08 95       	ret

00001c7c <sync>:
    1c7c:	cf 92       	push	r12
    1c7e:	df 92       	push	r13
    1c80:	ef 92       	push	r14
    1c82:	ff 92       	push	r15
    1c84:	0f 93       	push	r16
    1c86:	1f 93       	push	r17
    1c88:	cf 93       	push	r28
    1c8a:	df 93       	push	r29
    1c8c:	ec 01       	movw	r28, r24
    1c8e:	7b 01       	movw	r14, r22
    1c90:	6a 01       	movw	r12, r20
    1c92:	1f b7       	in	r17, 0x3f	; 63
    1c94:	10 78       	andi	r17, 0x80	; 128
    1c96:	f8 94       	cli
    1c98:	a8 81       	ld	r26, Y
    1c9a:	b9 81       	ldd	r27, Y+1	; 0x01
    1c9c:	10 97       	sbiw	r26, 0x00	; 0
    1c9e:	61 f1       	breq	.+88     	; 0x1cf8 <sync+0x7c>
    1ca0:	14 96       	adiw	r26, 0x04	; 4
    1ca2:	ed 91       	ld	r30, X+
    1ca4:	fc 91       	ld	r31, X
    1ca6:	15 97       	sbiw	r26, 0x05	; 5
    1ca8:	30 97       	sbiw	r30, 0x00	; 0
    1caa:	41 f0       	breq	.+16     	; 0x1cbc <sync+0x40>
    1cac:	a0 81       	ld	r26, Z
    1cae:	b1 81       	ldd	r27, Z+1	; 0x01
    1cb0:	14 96       	adiw	r26, 0x04	; 4
    1cb2:	ed 91       	ld	r30, X+
    1cb4:	fc 91       	ld	r31, X
    1cb6:	15 97       	sbiw	r26, 0x05	; 5
    1cb8:	30 97       	sbiw	r30, 0x00	; 0
    1cba:	c1 f7       	brne	.-16     	; 0x1cac <sync+0x30>
    1cbc:	20 91 7c 01 	lds	r18, 0x017C	; 0x80017c <current>
    1cc0:	30 91 7d 01 	lds	r19, 0x017D	; 0x80017d <current+0x1>
    1cc4:	2a 17       	cp	r18, r26
    1cc6:	3b 07       	cpc	r19, r27
    1cc8:	21 f0       	breq	.+8      	; 0x1cd2 <sync+0x56>
    1cca:	11 23       	and	r17, r17
    1ccc:	09 f4       	brne	.+2      	; 0x1cd0 <sync+0x54>
    1cce:	3d c0       	rjmp	.+122    	; 0x1d4a <sync+0xce>
    1cd0:	07 c0       	rjmp	.+14     	; 0x1ce0 <sync+0x64>
    1cd2:	11 23       	and	r17, r17
    1cd4:	09 f4       	brne	.+2      	; 0x1cd8 <sync+0x5c>
    1cd6:	3c c0       	rjmp	.+120    	; 0x1d50 <sync+0xd4>
    1cd8:	78 94       	sei
    1cda:	8f ef       	ldi	r24, 0xFF	; 255
    1cdc:	9f ef       	ldi	r25, 0xFF	; 255
    1cde:	52 c0       	rjmp	.+164    	; 0x1d84 <sync+0x108>
    1ce0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ce2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ce4:	00 97       	sbiw	r24, 0x00	; 0
    1ce6:	d1 f1       	breq	.+116    	; 0x1d5c <sync+0xe0>
    1ce8:	fc 01       	movw	r30, r24
    1cea:	15 82       	std	Z+5, r1	; 0x05
    1cec:	14 82       	std	Z+4, r1	; 0x04
    1cee:	36 c0       	rjmp	.+108    	; 0x1d5c <sync+0xe0>
    1cf0:	78 94       	sei
    1cf2:	80 e0       	ldi	r24, 0x00	; 0
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	46 c0       	rjmp	.+140    	; 0x1d84 <sync+0x108>
    1cf8:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <current>
    1cfc:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <current+0x1>
    1d00:	99 83       	std	Y+1, r25	; 0x01
    1d02:	88 83       	st	Y, r24
    1d04:	11 23       	and	r17, r17
    1d06:	29 f0       	breq	.+10     	; 0x1d12 <sync+0x96>
    1d08:	8a 81       	ldd	r24, Y+2	; 0x02
    1d0a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d0c:	01 97       	sbiw	r24, 0x01	; 1
    1d0e:	09 f0       	breq	.+2      	; 0x1d12 <sync+0x96>
    1d10:	78 94       	sei
    1d12:	b6 01       	movw	r22, r12
    1d14:	ce 01       	movw	r24, r28
    1d16:	f7 01       	movw	r30, r14
    1d18:	09 95       	icall
    1d1a:	f8 2e       	mov	r15, r24
    1d1c:	09 2f       	mov	r16, r25
    1d1e:	8f b7       	in	r24, 0x3f	; 63
    1d20:	f8 94       	cli
    1d22:	19 82       	std	Y+1, r1	; 0x01
    1d24:	18 82       	st	Y, r1
    1d26:	8a 81       	ldd	r24, Y+2	; 0x02
    1d28:	9b 81       	ldd	r25, Y+3	; 0x03
    1d2a:	82 30       	cpi	r24, 0x02	; 2
    1d2c:	91 05       	cpc	r25, r1
    1d2e:	38 f0       	brcs	.+14     	; 0x1d3e <sync+0xc2>
    1d30:	1b 82       	std	Y+3, r1	; 0x03
    1d32:	1a 82       	std	Y+2, r1	; 0x02
    1d34:	fc 01       	movw	r30, r24
    1d36:	15 82       	std	Z+5, r1	; 0x05
    1d38:	14 82       	std	Z+4, r1	; 0x04
    1d3a:	0e 94 96 03 	call	0x72c	; 0x72c <dispatch>
    1d3e:	11 23       	and	r17, r17
    1d40:	51 f0       	breq	.+20     	; 0x1d56 <sync+0xda>
    1d42:	78 94       	sei
    1d44:	8f 2d       	mov	r24, r15
    1d46:	90 2f       	mov	r25, r16
    1d48:	1d c0       	rjmp	.+58     	; 0x1d84 <sync+0x108>
    1d4a:	8f ef       	ldi	r24, 0xFF	; 255
    1d4c:	9f ef       	ldi	r25, 0xFF	; 255
    1d4e:	1a c0       	rjmp	.+52     	; 0x1d84 <sync+0x108>
    1d50:	8f ef       	ldi	r24, 0xFF	; 255
    1d52:	9f ef       	ldi	r25, 0xFF	; 255
    1d54:	17 c0       	rjmp	.+46     	; 0x1d84 <sync+0x108>
    1d56:	8f 2d       	mov	r24, r15
    1d58:	90 2f       	mov	r25, r16
    1d5a:	14 c0       	rjmp	.+40     	; 0x1d84 <sync+0x108>
    1d5c:	3b 83       	std	Y+3, r19	; 0x03
    1d5e:	2a 83       	std	Y+2, r18	; 0x02
    1d60:	f9 01       	movw	r30, r18
    1d62:	d5 83       	std	Z+5, r29	; 0x05
    1d64:	c4 83       	std	Z+4, r28	; 0x04
    1d66:	cd 01       	movw	r24, r26
    1d68:	0e 94 96 03 	call	0x72c	; 0x72c <dispatch>
    1d6c:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <current>
    1d70:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <current+0x1>
    1d74:	82 81       	ldd	r24, Z+2	; 0x02
    1d76:	93 81       	ldd	r25, Z+3	; 0x03
    1d78:	89 2b       	or	r24, r25
    1d7a:	09 f4       	brne	.+2      	; 0x1d7e <sync+0x102>
    1d7c:	b9 cf       	rjmp	.-142    	; 0x1cf0 <sync+0x74>
    1d7e:	f9 83       	std	Y+1, r31	; 0x01
    1d80:	e8 83       	st	Y, r30
    1d82:	c2 cf       	rjmp	.-124    	; 0x1d08 <sync+0x8c>
    1d84:	df 91       	pop	r29
    1d86:	cf 91       	pop	r28
    1d88:	1f 91       	pop	r17
    1d8a:	0f 91       	pop	r16
    1d8c:	ff 90       	pop	r15
    1d8e:	ef 90       	pop	r14
    1d90:	df 90       	pop	r13
    1d92:	cf 90       	pop	r12
    1d94:	08 95       	ret

00001d96 <run>:
    1d96:	00 91 7c 01 	lds	r16, 0x017C	; 0x80017c <current>
    1d9a:	10 91 7d 01 	lds	r17, 0x017D	; 0x80017d <current+0x1>
    1d9e:	84 e9       	ldi	r24, 0x94	; 148
    1da0:	91 e0       	ldi	r25, 0x01	; 1
    1da2:	0e 94 0f 0c 	call	0x181e	; 0x181e <dequeue>
    1da6:	ec 01       	movw	r28, r24
    1da8:	d8 01       	movw	r26, r16
    1daa:	13 96       	adiw	r26, 0x03	; 3
    1dac:	9c 93       	st	X, r25
    1dae:	8e 93       	st	-X, r24
    1db0:	12 97       	sbiw	r26, 0x02	; 2
    1db2:	78 94       	sei
    1db4:	4e 85       	ldd	r20, Y+14	; 0x0e
    1db6:	5f 85       	ldd	r21, Y+15	; 0x0f
    1db8:	6c 85       	ldd	r22, Y+12	; 0x0c
    1dba:	7d 85       	ldd	r23, Y+13	; 0x0d
    1dbc:	8a 85       	ldd	r24, Y+10	; 0x0a
    1dbe:	9b 85       	ldd	r25, Y+11	; 0x0b
    1dc0:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <sync>
    1dc4:	8f b7       	in	r24, 0x3f	; 63
    1dc6:	f8 94       	cli
    1dc8:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <msgPool>
    1dcc:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <msgPool+0x1>
    1dd0:	99 83       	std	Y+1, r25	; 0x01
    1dd2:	88 83       	st	Y, r24
    1dd4:	d0 93 83 01 	sts	0x0183, r29	; 0x800183 <msgPool+0x1>
    1dd8:	c0 93 82 01 	sts	0x0182, r28	; 0x800182 <msgPool>
    1ddc:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <activeStack>
    1de0:	f0 91 7f 01 	lds	r31, 0x017F	; 0x80017f <activeStack+0x1>
    1de4:	00 81       	ld	r16, Z
    1de6:	11 81       	ldd	r17, Z+1	; 0x01
    1de8:	e8 01       	movw	r28, r16
    1dea:	2a 81       	ldd	r18, Y+2	; 0x02
    1dec:	3b 81       	ldd	r19, Y+3	; 0x03
    1dee:	a0 91 94 01 	lds	r26, 0x0194	; 0x800194 <msgQ>
    1df2:	b0 91 95 01 	lds	r27, 0x0195	; 0x800195 <msgQ+0x1>
    1df6:	10 97       	sbiw	r26, 0x00	; 0
    1df8:	c1 f0       	breq	.+48     	; 0x1e2a <run+0x94>
    1dfa:	21 15       	cp	r18, r1
    1dfc:	31 05       	cpc	r19, r1
    1dfe:	59 f2       	breq	.-106    	; 0x1d96 <run>
    1e00:	16 96       	adiw	r26, 0x06	; 6
    1e02:	8d 91       	ld	r24, X+
    1e04:	9d 91       	ld	r25, X+
    1e06:	0d 90       	ld	r0, X+
    1e08:	bc 91       	ld	r27, X
    1e0a:	a0 2d       	mov	r26, r0
    1e0c:	e9 01       	movw	r28, r18
    1e0e:	4e 81       	ldd	r20, Y+6	; 0x06
    1e10:	5f 81       	ldd	r21, Y+7	; 0x07
    1e12:	68 85       	ldd	r22, Y+8	; 0x08
    1e14:	79 85       	ldd	r23, Y+9	; 0x09
    1e16:	84 1b       	sub	r24, r20
    1e18:	95 0b       	sbc	r25, r21
    1e1a:	a6 0b       	sbc	r26, r22
    1e1c:	b7 0b       	sbc	r27, r23
    1e1e:	18 16       	cp	r1, r24
    1e20:	19 06       	cpc	r1, r25
    1e22:	1a 06       	cpc	r1, r26
    1e24:	1b 06       	cpc	r1, r27
    1e26:	0c f0       	brlt	.+2      	; 0x1e2a <run+0x94>
    1e28:	b6 cf       	rjmp	.-148    	; 0x1d96 <run>
    1e2a:	10 93 7f 01 	sts	0x017F, r17	; 0x80017f <activeStack+0x1>
    1e2e:	00 93 7e 01 	sts	0x017E, r16	; 0x80017e <activeStack>
    1e32:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <threadPool>
    1e36:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <threadPool+0x1>
    1e3a:	91 83       	std	Z+1, r25	; 0x01
    1e3c:	80 83       	st	Z, r24
    1e3e:	f0 93 81 01 	sts	0x0181, r31	; 0x800181 <threadPool+0x1>
    1e42:	e0 93 80 01 	sts	0x0180, r30	; 0x800180 <threadPool>
    1e46:	a0 91 7e 01 	lds	r26, 0x017E	; 0x80017e <activeStack>
    1e4a:	b0 91 7f 01 	lds	r27, 0x017F	; 0x80017f <activeStack+0x1>
    1e4e:	14 96       	adiw	r26, 0x04	; 4
    1e50:	ed 91       	ld	r30, X+
    1e52:	fc 91       	ld	r31, X
    1e54:	15 97       	sbiw	r26, 0x05	; 5
    1e56:	30 97       	sbiw	r30, 0x00	; 0
    1e58:	41 f0       	breq	.+16     	; 0x1e6a <run+0xd4>
    1e5a:	a0 81       	ld	r26, Z
    1e5c:	b1 81       	ldd	r27, Z+1	; 0x01
    1e5e:	14 96       	adiw	r26, 0x04	; 4
    1e60:	ed 91       	ld	r30, X+
    1e62:	fc 91       	ld	r31, X
    1e64:	15 97       	sbiw	r26, 0x05	; 5
    1e66:	30 97       	sbiw	r30, 0x00	; 0
    1e68:	c1 f7       	brne	.-16     	; 0x1e5a <run+0xc4>
    1e6a:	cd 01       	movw	r24, r26
    1e6c:	0e 94 96 03 	call	0x72c	; 0x72c <dispatch>
    1e70:	92 cf       	rjmp	.-220    	; 0x1d96 <run>

00001e72 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1e72:	42 31       	cpi	r20, 0x12	; 18
    1e74:	b8 f4       	brcc	.+46     	; 0x1ea4 <install+0x32>
        char status;
        DISABLE(status);
    1e76:	2f b7       	in	r18, 0x3f	; 63
    1e78:	f8 94       	cli
        otable[i] = obj;
    1e7a:	50 e0       	ldi	r21, 0x00	; 0
    1e7c:	44 0f       	add	r20, r20
    1e7e:	55 1f       	adc	r21, r21
    1e80:	fa 01       	movw	r30, r20
    1e82:	ea 56       	subi	r30, 0x6A	; 106
    1e84:	fe 4f       	sbci	r31, 0xFE	; 254
    1e86:	91 83       	std	Z+1, r25	; 0x01
    1e88:	80 83       	st	Z, r24
        mtable[i] = m;
    1e8a:	fa 01       	movw	r30, r20
    1e8c:	e2 5d       	subi	r30, 0xD2	; 210
    1e8e:	fd 4f       	sbci	r31, 0xFD	; 253
    1e90:	71 83       	std	Z+1, r23	; 0x01
    1e92:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1e94:	41 e0       	ldi	r20, 0x01	; 1
    1e96:	50 e0       	ldi	r21, 0x00	; 0
    1e98:	fc 01       	movw	r30, r24
    1e9a:	53 83       	std	Z+3, r21	; 0x03
    1e9c:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1e9e:	22 23       	and	r18, r18
    1ea0:	0c f4       	brge	.+2      	; 0x1ea4 <install+0x32>
    1ea2:	78 94       	sei
    1ea4:	08 95       	ret

00001ea6 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1ea6:	8c 01       	movw	r16, r24
    1ea8:	7b 01       	movw	r14, r22
    1eaa:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1eac:	8f b7       	in	r24, 0x3f	; 63
    1eae:	f8 94       	cli
    initialize();
    1eb0:	0e 94 2b 03 	call	0x656	; 0x656 <initialize>
    ENABLE(1);
    1eb4:	78 94       	sei
    if (m != NULL)
    1eb6:	e1 14       	cp	r14, r1
    1eb8:	f1 04       	cpc	r15, r1
    1eba:	41 f0       	breq	.+16     	; 0x1ecc <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1ebc:	20 e0       	ldi	r18, 0x00	; 0
    1ebe:	30 e0       	ldi	r19, 0x00	; 0
    1ec0:	a9 01       	movw	r20, r18
    1ec2:	60 e0       	ldi	r22, 0x00	; 0
    1ec4:	70 e0       	ldi	r23, 0x00	; 0
    1ec6:	cb 01       	movw	r24, r22
    1ec8:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <async>
    DISABLE(status);
    1ecc:	8f b7       	in	r24, 0x3f	; 63
    1ece:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1ed0:	0e 94 b6 03 	call	0x76c	; 0x76c <schedule>
    ENABLE(1);
    1ed4:	78 94       	sei
    while (1) {
        SLEEP();
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	83 bf       	out	0x33, r24	; 51
    1eda:	88 95       	sleep
    1edc:	fd cf       	rjmp	.-6      	; 0x1ed8 <tinytimber+0x32>

00001ede <__divmodsi4>:
    1ede:	05 2e       	mov	r0, r21
    1ee0:	97 fb       	bst	r25, 7
    1ee2:	1e f4       	brtc	.+6      	; 0x1eea <__divmodsi4+0xc>
    1ee4:	00 94       	com	r0
    1ee6:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <__negsi2>
    1eea:	57 fd       	sbrc	r21, 7
    1eec:	07 d0       	rcall	.+14     	; 0x1efc <__divmodsi4_neg2>
    1eee:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <__udivmodsi4>
    1ef2:	07 fc       	sbrc	r0, 7
    1ef4:	03 d0       	rcall	.+6      	; 0x1efc <__divmodsi4_neg2>
    1ef6:	4e f4       	brtc	.+18     	; 0x1f0a <__divmodsi4_exit>
    1ef8:	0c 94 86 0f 	jmp	0x1f0c	; 0x1f0c <__negsi2>

00001efc <__divmodsi4_neg2>:
    1efc:	50 95       	com	r21
    1efe:	40 95       	com	r20
    1f00:	30 95       	com	r19
    1f02:	21 95       	neg	r18
    1f04:	3f 4f       	sbci	r19, 0xFF	; 255
    1f06:	4f 4f       	sbci	r20, 0xFF	; 255
    1f08:	5f 4f       	sbci	r21, 0xFF	; 255

00001f0a <__divmodsi4_exit>:
    1f0a:	08 95       	ret

00001f0c <__negsi2>:
    1f0c:	90 95       	com	r25
    1f0e:	80 95       	com	r24
    1f10:	70 95       	com	r23
    1f12:	61 95       	neg	r22
    1f14:	7f 4f       	sbci	r23, 0xFF	; 255
    1f16:	8f 4f       	sbci	r24, 0xFF	; 255
    1f18:	9f 4f       	sbci	r25, 0xFF	; 255
    1f1a:	08 95       	ret

00001f1c <__tablejump2__>:
    1f1c:	ee 0f       	add	r30, r30
    1f1e:	ff 1f       	adc	r31, r31
    1f20:	05 90       	lpm	r0, Z+
    1f22:	f4 91       	lpm	r31, Z
    1f24:	e0 2d       	mov	r30, r0
    1f26:	09 94       	ijmp

00001f28 <__udivmodsi4>:
    1f28:	a1 e2       	ldi	r26, 0x21	; 33
    1f2a:	1a 2e       	mov	r1, r26
    1f2c:	aa 1b       	sub	r26, r26
    1f2e:	bb 1b       	sub	r27, r27
    1f30:	fd 01       	movw	r30, r26
    1f32:	0d c0       	rjmp	.+26     	; 0x1f4e <__udivmodsi4_ep>

00001f34 <__udivmodsi4_loop>:
    1f34:	aa 1f       	adc	r26, r26
    1f36:	bb 1f       	adc	r27, r27
    1f38:	ee 1f       	adc	r30, r30
    1f3a:	ff 1f       	adc	r31, r31
    1f3c:	a2 17       	cp	r26, r18
    1f3e:	b3 07       	cpc	r27, r19
    1f40:	e4 07       	cpc	r30, r20
    1f42:	f5 07       	cpc	r31, r21
    1f44:	20 f0       	brcs	.+8      	; 0x1f4e <__udivmodsi4_ep>
    1f46:	a2 1b       	sub	r26, r18
    1f48:	b3 0b       	sbc	r27, r19
    1f4a:	e4 0b       	sbc	r30, r20
    1f4c:	f5 0b       	sbc	r31, r21

00001f4e <__udivmodsi4_ep>:
    1f4e:	66 1f       	adc	r22, r22
    1f50:	77 1f       	adc	r23, r23
    1f52:	88 1f       	adc	r24, r24
    1f54:	99 1f       	adc	r25, r25
    1f56:	1a 94       	dec	r1
    1f58:	69 f7       	brne	.-38     	; 0x1f34 <__udivmodsi4_loop>
    1f5a:	60 95       	com	r22
    1f5c:	70 95       	com	r23
    1f5e:	80 95       	com	r24
    1f60:	90 95       	com	r25
    1f62:	9b 01       	movw	r18, r22
    1f64:	ac 01       	movw	r20, r24
    1f66:	bd 01       	movw	r22, r26
    1f68:	cf 01       	movw	r24, r30
    1f6a:	08 95       	ret

00001f6c <setjmp>:
    1f6c:	dc 01       	movw	r26, r24
    1f6e:	2d 92       	st	X+, r2
    1f70:	3d 92       	st	X+, r3
    1f72:	4d 92       	st	X+, r4
    1f74:	5d 92       	st	X+, r5
    1f76:	6d 92       	st	X+, r6
    1f78:	7d 92       	st	X+, r7
    1f7a:	8d 92       	st	X+, r8
    1f7c:	9d 92       	st	X+, r9
    1f7e:	ad 92       	st	X+, r10
    1f80:	bd 92       	st	X+, r11
    1f82:	cd 92       	st	X+, r12
    1f84:	dd 92       	st	X+, r13
    1f86:	ed 92       	st	X+, r14
    1f88:	fd 92       	st	X+, r15
    1f8a:	0d 93       	st	X+, r16
    1f8c:	1d 93       	st	X+, r17
    1f8e:	cd 93       	st	X+, r28
    1f90:	dd 93       	st	X+, r29
    1f92:	ff 91       	pop	r31
    1f94:	ef 91       	pop	r30
    1f96:	8d b7       	in	r24, 0x3d	; 61
    1f98:	8d 93       	st	X+, r24
    1f9a:	8e b7       	in	r24, 0x3e	; 62
    1f9c:	8d 93       	st	X+, r24
    1f9e:	8f b7       	in	r24, 0x3f	; 63
    1fa0:	8d 93       	st	X+, r24
    1fa2:	ed 93       	st	X+, r30
    1fa4:	fd 93       	st	X+, r31
    1fa6:	88 27       	eor	r24, r24
    1fa8:	99 27       	eor	r25, r25
    1faa:	09 94       	ijmp

00001fac <longjmp>:
    1fac:	dc 01       	movw	r26, r24
    1fae:	cb 01       	movw	r24, r22
    1fb0:	81 30       	cpi	r24, 0x01	; 1
    1fb2:	91 05       	cpc	r25, r1
    1fb4:	81 1d       	adc	r24, r1
    1fb6:	2d 90       	ld	r2, X+
    1fb8:	3d 90       	ld	r3, X+
    1fba:	4d 90       	ld	r4, X+
    1fbc:	5d 90       	ld	r5, X+
    1fbe:	6d 90       	ld	r6, X+
    1fc0:	7d 90       	ld	r7, X+
    1fc2:	8d 90       	ld	r8, X+
    1fc4:	9d 90       	ld	r9, X+
    1fc6:	ad 90       	ld	r10, X+
    1fc8:	bd 90       	ld	r11, X+
    1fca:	cd 90       	ld	r12, X+
    1fcc:	dd 90       	ld	r13, X+
    1fce:	ed 90       	ld	r14, X+
    1fd0:	fd 90       	ld	r15, X+
    1fd2:	0d 91       	ld	r16, X+
    1fd4:	1d 91       	ld	r17, X+
    1fd6:	cd 91       	ld	r28, X+
    1fd8:	dd 91       	ld	r29, X+
    1fda:	ed 91       	ld	r30, X+
    1fdc:	fd 91       	ld	r31, X+
    1fde:	0d 90       	ld	r0, X+
    1fe0:	f8 94       	cli
    1fe2:	fe bf       	out	0x3e, r31	; 62
    1fe4:	0f be       	out	0x3f, r0	; 63
    1fe6:	ed bf       	out	0x3d, r30	; 61
    1fe8:	ed 91       	ld	r30, X+
    1fea:	fd 91       	ld	r31, X+
    1fec:	09 94       	ijmp

00001fee <_exit>:
    1fee:	f8 94       	cli

00001ff0 <__stop_program>:
    1ff0:	ff cf       	rjmp	.-2      	; 0x1ff0 <__stop_program>
